#%RAML 1.0
title: Shopper Customers
version: v1
mediaType: application/json
protocols: HTTPS
baseUri: https://{shortCode}.api.commercecloud.salesforce.com/customer/shopper-customers/v1
description: Let's customers to register, get authorization tokens, reset passwords, add/delete payment instruments, set up a wish list, add, delete, or modify addresses, and so on. 

uses:
  ApiStandards: exchange_modules/893f605e-10e2-423a-bdb4-f952f56eb6d8/api-standards/1.1.5/api-standards.raml
  CustomerTraits: Customer-traits-library.raml
  CommerceCloudStandards: exchange_modules/893f605e-10e2-423a-bdb4-f952f56eb6d8/commerce-cloud-standards/1.0.10/commerce-cloud-standards.raml

annotationTypes:
  authorizationUrl: any
  oas-readOnly:
    type: boolean
    allowedTargets: TypeDeclaration
  enum-labels: any
  label: any
  oas-format:
    type: string
    allowedTargets: TypeDeclaration
  oas-tags:
    type: 'string[]'
    allowedTargets: Method
  oas-body-name:
    type: string
    allowedTargets: TypeDeclaration
securitySchemes:
  OAuth2_0: !include /exchange_modules/893f605e-10e2-423a-bdb4-f952f56eb6d8/commerce-cloud-standards/1.0.10/SecuritySchemes/am-oauth-2.raml
  ShopperJWT: !include /exchange_modules/893f605e-10e2-423a-bdb4-f952f56eb6d8/commerce-cloud-standards/1.0.10/SecuritySchemes/shopper-token.raml  
  clientId:
    description: Add client ID for application identification. Alternative as 'clientId' query parameter.
    type: x-custom
    describedBy:
      headers:
        x-dw-client-id:
          type: string

types:
  AuthRequest:
    description: Document representing the authentication request type.
    properties:
      type:
        description: 'Type of authentication request: guest, login (credentials), refresh, or session.'
        type: string
        enum:
          - guest
          - credentials
          - refresh
          - session
        required: false
        example: credentials
  Basket:   
    description: |-
      Document representing a basket.
       
    properties:
      adjustedMerchandizeTotalTax:
        description: |-
          The products tax after applying discounts in the purchase currency.

           Adjusted merchandize prices represent the sum of product prices before
           services (such as shipping) have been added, but after adjustments from
           promotions have been added.
        type: number
        format: double
        example: 20.3
      adjustedShippingTotalTax:
        description: |-
          The tax of all shipping line items of the line item container, after
           shipping adjustments have been applied.
        type: number
        format: double
        example: 15.5
      agentBasket:
        description: Is the basket created by an agent?
        type: boolean
        example: false
      basketId:
        description: The unique identifier for the basket.
        type: string
        example: "MyBasket"
      billingAddress:
        description: The billing address. This property is part of basket checkout information only.
        type: OrderAddress
      bonusDiscountLineItems:
        description: The bonus discount line items of the line item container.
        type: array
        items:
          type: BonusDiscountLineItem
      channelType:
        description: The sales channel for the order.
        type: string
        enum:
          - storefront
          - callcenter
          - marketplace
          - dss
          - store
          - pinterest
          - twitter
          - facebookads
          - subscriptions
          - onlinereservation
          - customerservicecenter
          - instagramcommerce
        (oas-readOnly): true
        (enum-labels):
          - default: Storefront
          - default: Call Center
          - default: Marketplace
          - default: DSS
          - default: Store
          - default: Pinterest
          - default: Twitter
          - default: Facebook Ads
          - default: Subscriptions
          - default: Online Reservation
          - default: Customer Service Center
          - default: Instagram Commerce
        (label):
          default: Channel Type
          example: storefront
      couponItems:
        description: The sorted array of coupon items. This array can be empty.
        type: array
        items:
          type: CouponItem
      creationDate:
        description: Returns the value of attribute 'creationDate'.
        type: datetime
        (oas-readOnly): true
        (label):
          default: Creation Date
          example: 9999-12-31T00:00:00.0Z
      currency:
        description: The ISO 4217 mnemonic code of the currency.
        type: string
        example: "USD"
      customerInfo:
        description: The customer information for logged in customers. This property is part of basket checkout information only.
        type: CustomerInfo
      giftCertificateItems:
        description: The sorted array of gift certificate line items. This array can be empty.
        type: array
        items:
          type: GiftCertificateItem
      inventoryReservationExpiry:
        description: Date on which the inventory reservation for this basket expires.
        type: datetime
        (label):
          default: Inventory Reservation Expiry
      lastModified:
        description: Returns the value of attribute 'lastModified'.
        type: datetime
        (oas-readOnly): true
        (label):
          default: Last Modified
          example: 9999-12-31T00:00:00.0Z
      merchandizeTotalTax:
        description: |-
          The products total tax in purchase currency.

           Merchandize total prices represent the sum of product prices before
           services (such as shipping) or adjustments from promotions have
           been added.
        type: number
        format: double
        example: 10.0
      notes:
        description: The notes for the line item container.
        type: SimpleLink
      orderPriceAdjustments:
        description: The array of order level price adjustments. This array can be empty.
        type: array
        items:
          type: PriceAdjustment
      orderTotal:
        description: |-
          The total price of the order, including products, shipping, and tax. This property is part of basket checkout information only.
        type: number
        format: double
        (label):
          default: Order Total
      paymentInstruments:
        description: The payment instruments list for the order.
        type: array
        items:
          type: OrderPaymentInstrument
      productItems:
        description: The sorted array of product items (up to a maximum of 50 items). This array can be empty.
        type: array
        items:
          type: ProductItem
      productSubTotal:
        description: |-
          The total price of all product items after all product discounts.
           Depending on taxation policy the returned price is net or gross.
        type: number
        format: double
        example: 150.99
      productTotal:
        description: |-
          The total price of all product items after all product and order discounts.
           Depending on taxation policy the returned price is net or gross.
        type: number
        format: double
        example: 99.99
      shipments:
        description: The array of shipments. This property is part of basket checkout information only.
        type: array
        items:
          type: Shipment
      shippingItems:
        description: The sorted array of shipping items. This array can be empty.
        type: array
        items:
          type: ShippingItem
      shippingTotal:
        description: |-
          The total shipping price of the order after all shipping discounts. Excludes tax if the taxation policy is net. Includes
           tax if the taxation policy is gross. This property is part of the basket checkout information only.
        type: number
        format: double
        example: 12.99
      shippingTotalTax:
        description: |-
          The tax of all shipping line items of the line item container, before
           shipping adjustments have been applied.
        type: number
        format: double
        example: 2.99
      sourceCode:
        description: Gets the source code assigned to this basket.
        type: string
        (label):
          default: Source Code
      taxTotal:
        description: The total tax amount of the order. This property is part of basket checkout information only.
        type: number
        format: double
        example: 5.99
      taxation:
        description: The taxation the line item container is based on.
        type: string
        enum:
          - gross
          - net
        example: net

  BasketsResult:
    description: Result document containing an array of baskets.
    properties:
      baskets:
        description: The list of baskets for a customer.
        type: array
        items:
          type: Basket
      total:
        description: The total number of baskets.
        type: integer
        format: int32
        example: 10
  BonusDiscountLineItem:
    description: Document representing a bonus discount line item.
    properties:
      bonusProducts:
        description: The list of links to the bonus products the customer can choose from.
        type: array
        items:
          type: ProductDetailsLink
      couponCode:
        description: The coupon code that triggered the promotion, if applicable.
        type: string
        example: "BOGO"
      id:
        description: The ID of the line item.
        type: string
        example: "45239"
      maxBonusItems:
        description: The maximum number of bonus items the user can select for this promotion.
        type: integer
        format: int32
        example: 1
      promotionId:
        description: The ID of the promotion which triggered the creation of the line item.
        type: string
        example: "summer-sale"
      
  BundledProduct:
    description: Document representing a bundled product within a product bundle.
    properties:
      id:
        type: string
        example: "awesome-bundle"
      product:
        description: The product being bundled.
        type: Product
      quantity:
        description: For the product being bundled, the quantity added to the bundle.
        type: number
        format: double
  CouponItem:
    description: Document representing a coupon item.
    properties:
      code:
        description: The coupon code.
        maxLength: 256
        type: string
        example: "BOGO"
      couponItemId:
        description: The coupon item ID.
        type: string
        required: false
        example: "934kkas"
      statusCode:
        description: The status of the coupon item.
        type: string
        enum:
          - coupon_code_already_in_basket
          - coupon_code_already_redeemed
          - coupon_code_unknown
          - coupon_disabled
          - redemption_limit_exceeded
          - customer_redemption_limit_exceeded
          - timeframe_redemption_limit_exceeded
          - no_active_promotion
          - coupon_already_in_basket
          - no_applicable_promotion
          - applied
          - adhoc
        required: false
        example: applied
      valid:
        description: |-
          A flag indicating whether the coupon item is valid. A coupon line item is valid if
           the status code is 'applied' or 'no_applicable_promotion'.
        type: boolean
        required: false
        example: true
  Customer:
    description: Person or entity who shops on Commerce Cloud storefronts by creating a shopper account in Commerce Cloud.
    properties:
      addresses:
        description: The customer's addresses.
        type: array
        items:
          type: CustomerAddress
        (label):
          default: Addresses
        required: false
      authType:
        description: |-
          The customer's authorization type (indicates if the customer is a guest
           or a registered customer).
        type: string
        enum:
          - guest
          - registered
        (label):
          default: Auth Type
        required: false
        example: registered
      birthday:
        description: The customer's birthday.
        type: date-only
        (label):
          default: Birthday
        required: false
      companyName:
        description: The customer's company name.
        maxLength: 256
        type: string
        (label):
          default: Company
        required: false
        example: "Acme"
      creationDate:
        description: Returns the value of attribute 'creationDate'.
        type: datetime
        (oas-readOnly): true
        (label):
          default: Creation Date
        required: false
        example: 9999-12-31T00:00:00.0Z
      customerId:
        description: |-
          The customer's number (ID). Both registered and guest customers have a
           customer ID.
        maxLength: 28
        type: string
        (oas-readOnly): true
        (label):
          default: UUID
        required: false
        example: "dfuisydifu2342usyf"
      customerNo:
        description: |-
          The customer's number (ID). Only a registered customer has a customer
           number.
        maxLength: 100
        type: string
        (label):
          default: Customer No.
        required: false
        example: "D0000123"
      email:
        description: The customer's email address.
        maxLength: 256
        type: string
        (oas-format): email
        (label):
          default: Email
        required: false
        example: "rustin.peece@myemail.com"
      enabled:
        description: A flag indicating whether this customer is enabled and can log in.
        type: boolean
        (label):
          default: Enabled
        required: false
        example: true
      fax:
        description: The customer's fax number. The length is restricted to 32 characters.
        maxLength: 32
        type: string
        (label):
          default: Fax Number
        required: false
        example: 555-555-5555
      firstName:
        description: The customer's first name.
        maxLength: 256
        type: string
        (label):
          default: First Name
        required: false
        example: "Rustin"
      gender:
        description: The customer's gender.
        type: integer
        format: int32
        enum:
          - 1
          - 2
        (enum-labels):
          - default: Male
          - default: Female
        (label):
          default: Gender
        required: false
        example: 1
      jobTitle:
        description: The customer's job title.
        maxLength: 256
        type: string
        (label):
          default: Job Title
        required: false
        example: "Boss"
      lastLoginTime:
        description: The time when the customer last logged in.
        type: datetime
        (oas-readOnly): true
        (label):
          default: Last Login Time
        required: false
        example: 9999-12-31T00:00:00.0Z
      lastModified:
        description: Returns the value of attribute 'lastModified'.
        type: datetime
        (oas-readOnly): true
        (label):
          default: Last Modified
        required: false
        example: 9999-12-31T00:00:00.0Z
      lastName:
        description: The customer's last name.
        maxLength: 256
        type: string
        (label):
          default: Last Name
        required: false
        example: "Peece"
      lastVisitTime:
        description: The time when the customer last visited.
        type: datetime
        (oas-readOnly): true
        (label):
          default: Last Visit Time
        required: false
        example: 9999-12-31T00:00:00.0Z
      login:
        description: The customer's login.
        maxLength: 256
        type: string
        (label):
          default: Login
        required: false
        example: "rpeece"
      note:
        description: The customer's note.
        type: string
        (label):
          default: Note
        required: false
        example: "customer-note"
      paymentInstruments:
        description: The customer's payment instruments.
        type: array
        items:
          type: CustomerPaymentInstrument
        (label):
          default: Payment Instruments
        required: false
      phoneBusiness:
        description: The customer's business phone number.
        maxLength: 32
        type: string
        (label):
          default: Business Phone
        required: false
        example: 555-555-5555
      phoneHome:
        description: The customer's home phone number.
        maxLength: 32
        type: string
        (label):
          default: Home Phone
        required: false
        example: 555-555-5555
      phoneMobile:
        description: The customer's mobile phone number.
        maxLength: 32
        type: string
        (label):
          default: Mobile Phone
        required: false
        example: 555-555-5555
      preferredLocale:
        description: The customer's preferred locale.
        type: string
        (oas-readOnly): true
        (label):
          default: Preferred Locale
        required: false
        example: "us-en"
      previousLoginTime:
        description: The time when the customer previously logged in.
        type: datetime
        (label):
          default: Previous Login Time
        required: false
        example: 9999-12-31T00:00:00.0Z
      previousVisitTime:
        description: The time when the customer last visited the store.
        type: datetime
        (label):
          default: Previous Visit Time
        required: false
        example: 9999-12-31T00:00:00.0Z
      salutation:
        description: The salutation to use for the customer.
        maxLength: 256
        type: string
        (label):
          default: Salutation
        required: false
        example: "Mr."
      secondName:
        description: The customer's second name.
        maxLength: 256
        type: string
        (label):
          default: Second Name
        required: false
        example: "Peece"
      suffix:
        description: The customer's suffix (for example, "Jr." or "Sr.").
        maxLength: 256
        type: string
        (label):
          default: Name Suffix
        required: false
        example: "Jr."
      title:
        description: The customer's title (for example, "Mrs" or "Mr").
        maxLength: 256
        type: string
        (label):
          default: Title
        required: false
        example: "Mr."
  CustomerAddress:
    description: Address that is associated with a shopper (billing, shipping, mailing, and so on).
    properties:
      address1:
        description: The first address.
        maxLength: 256
        type: string
        (label):
          default: Address 1
        required: false
        example: "10 Presidential Way"
      address2:
        description: The second address.
        maxLength: 256
        type: string
        (label):
          default: Address 2
        required: false
        example: "Apt-616"
      addressId:
        description: The ID of the address as specified by account owner.
        maxLength: 256
        type: string
        (label):
          default: Address ID
        example: "Home"
      city:
        description: The city.
        maxLength: 256
        type: string
        (label):
          default: City
        required: false
        example: "Gotham"
      companyName:
        description: The company name.
        maxLength: 256
        type: string
        (label):
          default: Company
        required: false
        example: "PymTech"
      countryCode:
        description: The two-letter ISO 3166-1 (Alpha-2) country code.
        maxLength: 2
        type: string
        enum:
          - US
          - FR
          - IT
          - JP
          - CN
          - GB
        (enum-labels):
          - default: United States
          - default: France
          - default: Italy
          - default: Japan
          - default: China
          - default: United Kingdom
        (label):
          default: Country
          example: "US"
      creationDate:
        description: Returns the value of attribute 'creationDate'.
        type: datetime
        (oas-readOnly): true
        (label):
          default: Creation Date
        required: false
        example: 9999-12-31T17:12:56.670Z
      firstName:
        description: The first name.
        maxLength: 256
        type: string
        (label):
          default: First Name
        required: false
        example: "Rustin"
      fullName:
        description: The full name.
        maxLength: 256
        type: string
        (label):
          default: Full Name
        required: false
        example: "Rustin Peece"
      jobTitle:
        description: The job title.
        maxLength: 256
        type: string
        (label):
          default: Job Title
        required: false
        example: "Supreme"
      lastModified:
        description: Returns the value of attribute 'lastModified'.
        type: datetime
        (oas-readOnly): true
        (label):
          default: Last Modified
        required: false
        example: 9999-12-31T17:12:56.670Z
      lastName:
        description: The last name.
        maxLength: 256
        type: string
        (label):
          default: Last Name
        example: "Peece"
      phone:
        description: The phone number.
        maxLength: 32
        type: string
        (label):
          default: Contact Phone
        required: false
        example: "555-555-5555"
      postBox:
        description: The post box.
        maxLength: 256
        type: string
        (label):
          default: Post Box
        required: false
        example: "12345"
      postalCode:
        description: The postal code.
        maxLength: 256
        type: string
        (label):
          default: Postal Code
        required: false
        example: "N5"
      preferred:
        description: The preferred attribute.
        type: boolean
        (label):
          default: Preferred
        required: false
        example: true
      salutation:
        description: The salutation.
        maxLength: 256
        type: string
        (label):
          default: Salutation
        required: false
        example: "Sir"
      secondName:
        description: The second name.
        maxLength: 256
        type: string
        (label):
          default: Second Name
        required: false
        example: "Al Coholic"
      stateCode:
        description: The state code.
        maxLength: 256
        type: string
        (label):
          default: State
        required: false
        example: "UT"
      suffix:
        description: The suffix.
        maxLength: 256
        type: string
        (label):
          default: Suffix
        required: false
        example: "Sr."
      suite:
        description: The suite.
        maxLength: 32
        type: string
        (label):
          default: Suite No.
        required: false
        example: "100"
      title:
        description: The title.
        maxLength: 256
        type: string
        (label):
          default: Title
        required: false
        example: "Batman"
  CustomerAddressInfo:
    description: Result document of product list addresses.
    properties:
      addressId:
        description: The ID of the address.
        maxLength: 256
        type: string
        example: "Home"
      title:
        description: The link title.
        type: string
        example: "title"
  CustomerAddressResult:
    description: Result document containing an array of customer addresses.
    properties:
      limit:
        description: The number of returned documents.
        type: integer
        format: int32
        example: 1
      data:
        description: The array of customer address documents.
        type: CustomerAddress[]
      offset:
        description: The zero-based index of the first search hit to include in the result.
        minimum: 0
        type: integer
        format: int32
        example: 0
      total:
        description: The total number of documents.
        type: integer
        format: int32
        example: 3
  CustomerInfo:
    description: Document representing information used to identify a customer.
    properties:
      customerId:
        description: The customer's number (ID).
        maxLength: 100
        type: string
        required: false
        example: "3034s93875939348394hk3348"
      customerName:
        description: The customer's name.
        type: string
        required: false
        example: "Al Coholic"
      customerNo:
        description: The customer's number (ID).
        maxLength: 100
        type: string
        (label):
          default: Customer No.
        example: "123"
      email:
        description: The customer's email address.
        type: string
        (oas-format): email
        (label):
          default: Email
        example: "myemail@email.com"
  CustomerOrderResult:
    description: Result document containing an array of customer orders.
    properties:
      limit:
        description: The number of returned documents.
        type: integer
        format: int32
        example: 3
      data:
        description: The array of customer order documents.
        type: Order[]
      offset:
        description: The zero-based index of the first search hit to include in the result.
        minimum: 0
        type: integer
        format: int32
        example: 0
      total:
        description: The total number of documents.
        type: integer
        format: int32
        example: 3
  CustomerPaymentCardRequest:
    description: Document representing a customer payment card request.
    properties:
      cardType:
        description: The payment card type (for example, "Visa").
        maxLength: 256
        type: string
        example: "Visa"
      creditCardToken:
        description: |-
          A credit card token. If a credit card is tokenized, the token can be used to look up the credit card data at the
           token store.
        type: string
        required: false
        example: "hk2jh293484"
      expirationMonth:
        description: The month the payment card expires.
        type: integer
        format: int32
        example: 11
      expirationYear:
        description: The year the payment card expires.
        type: integer
        format: int32
        example: 9999
      holder:
        description: The payment card holder.
        maxLength: 256
        type: string
        example: "Neil Down"
      issueNumber:
        description: The payment card issue number.
        maxLength: 256
        type: string
        example: "92743927"
      number:
        description: The payment card number.
        maxLength: 4000
        type: string
        example: "4454852652415965"
      validFromMonth:
        description: The month the payment card valid is from.
        maximum: 12
        minimum: 1
        type: integer
        format: int32
        example: 11
      validFromYear:
        description: The year the payment card is valid from.
        type: integer
        format: int32
        example: 23
  CustomerPaymentInstrument:
    description: Method for customers to pay for the goods purchased on an ecommerce site. Payment methods include - credit card, debit card, bank account, and gift card.
    properties:
      bankRoutingNumber:
        description: The bank routing number.
        maxLength: 256
        type: string
        required: false
        (label):
          default: Bank Routing Number
        example: "KDSJHKS"
      creationDate:
        description: Returns the value of attribute 'creationDate'.
        type: datetime
        required: false
        (oas-readOnly): true
        (label):
          default: Creation Date
        example: 9999-12-31T00:00:00.0Z
      lastModified:
        description: Returns the value of attribute 'lastModified'.
        type: datetime
        required: false
        (oas-readOnly): true
        (label):
          default: Last Modified
        example: 9999-12-31T00:00:00.0Z
      maskedGiftCertificateCode:
        description: The masked gift certificate code.
        type: string
        required: false
        example: "gift-code"
      paymentBankAccount:
        description: The payment bank account.
        type: PaymentBankAccount
      paymentCard:
        description: The payment card.
        type: PaymentCard
      paymentInstrumentId:
        description: The payment instrument ID.
        type: string
        example: "Personal"
      paymentMethodId:
        description: The payment method ID. Optional if a customer payment instrument ID is specified.
        maxLength: 256
        type: string
        example: "Personal"
  CustomerPaymentInstrumentRequest:
    description: Document representing a customer payment instrument request.
    properties:
      bankRoutingNumber:
        description: The bank routing number.
        maxLength: 256
        type: string
        example: "AB123"
      giftCertificateCode:
        description: The gift certificate code.
        maxLength: 256
        type: string
        (label):
          default: Gift Code
        example: "gift-code"
      paymentBankAccount:
        description: The payment bank account request data.
        type: PaymentBankAccountRequest
        required: false
      paymentCard:
        description: The customer payment card.
        type: CustomerPaymentCardRequest
      paymentMethodId:
        description: The payment method ID. Optional if a customer payment instrument ID is specified.
        maxLength: 256
        type: string
        example: "Credit Card"
  CustomerPaymentInstrumentResult:
    description: Document representing a customer payment instrument result. The payment data contained is masked where needed for security purposes.
    properties:
      limit:
        description: The number of returned documents.
        type: integer
        format: int32
        example: 3
      data:
        description: The customer payment instruments list.
        type: array
        items:
          type: CustomerPaymentInstrument
      total:
        description: The total number of documents.
        type: integer
        format: int32
        example: 10
  Discount:
    description: Document representing a discount that was applied to the price.
    properties:
      amount:
        description: The amount that is used with the amount and fixed price types.
        type: number
        format: double
        required: false
        example: 30.25
      percentage:
        description: The percentage that is used with percentage types.
        type: number
        format: double
        required: false
        example: 10.5
      priceBookId:
        description: The price book ID that is used with some types.
        type: string
        required: false
        example: "sale-pricebook"
      type:
        description: The type of discount.
        type: string
        enum:
          - percentage
          - fixed_price
          - amount
          - free
          - price_book_price
          - bonus
          - total_fixed_price
          - bonus_choice
          - percentage_off_options
        example: percentage
  CustomerProductList:
    description: Document representing a customer product list.
    properties:
      coRegistrant:
        description: The coregistrant of this product list.
        type: CustomerProductListRegistrant
        required: false
      creationDate:
        description: Returns the value of attribute 'creationDate'.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      currentShippingAddressInfo:
        description: The resource link to the current shipping address of this customer product list.
        type: CustomerAddressInfo
        required: false
      customerProductListItems:
        description: The list of customer product list items.
        type: array
        required: false
        items:
          type: CustomerProductListItem
      description:
        description: The description of this product list.
        type: string
        required: false
        example: "My Product List"
      event:
        description: The event of this product list.
        type: ProductListEvent
        required: false
      id:
        description: The ID of this product list.
        minLength: 1
        type: string
        required: false
        example: "MyList"
      lastModified:
        description: Returns the value of attribute 'lastModified'.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      name:
        description: The name of this product list.
        type: string
        required: false
        example: "Danny's Product List"
      postEventShippingAddressInfo:
        description: The resource link to the post event shipping address of this customer product list.
        type: CustomerAddressInfo
        required: false
      productListShippingAddress:
        description: The abbreviated shipping address of this product list representing what an anonymous user can see.
        type: ProductListShippingAddress
        required: false
      public:
        description: Indicates whether the owner made this product list available for access by other customers.
        type: boolean
        required: false
        example: true
      registrant:
        description: The registrant of this product list.
        type: CustomerProductListRegistrant
        required: false
      shippingAddressInfo:
        description: The resource link to the shipping address of this customer product list.
        type: CustomerAddressInfo
        required: false
      type:
        description: The type of the product list.
        type: string
        required: false
        enum:
          - wish_list
          - gift_registry
          - shopping_list
          - custom_1
          - custom_2
          - custom_3
        example: "wish_list"
  CustomerProductListItem:
    description: Document representing a customer product list item.
    properties:
      id:
        description: The ID of this product list item.
        type: string
        required: false
        example: "Main Product"
      priority:
        description: The priority of the item.
        type: integer
        format: int32
        example: 1
      product:
        description: The product item.
        type: Product
        required: false
      productId:
        description: The ID of the product.
        type: string
        required: false
        example: "Toaster"
      public:
        description: Is this product list item available for access by other customers?
        type: boolean
        example: true
      purchasedQuantity:
        description: The quantity of products already purchased.
        type: number
        format: double
        required: false
        example: 1
      quantity:
        description: The quantity of this product list item.
        minimum: 0
        type: number
        format: double
        example: 2
      type:
        description: The type of the item.
        type: string
        required: false
        enum:
          - product
          - gift_certificate
        example: "product"
  CustomerProductListItemPurchase:
    description: Document representing a customer product list item purchase.
    properties:
      id:
        description: The ID of this purchase.
        type: string
        example: "myId"
      orderNo:
        description: The order number of this purchase.
        type: string
        example: "28234"
      productListItemId:
        description: The ID of the product list item this purchase relates to.
        type: string
        example: "My Product List"
      purchaserName:
        description: The name of the purchaser.
        type: string
        example: "Justin Credible"
      quantity:
        description: The quantity of this product list item purchased.
        minimum: 0
        type: number
        format: double
        example: 1.0
  CustomerProductListItemPurchaseResult:
    description: Document representing a customer product list purchases result.
    properties:
      limit:
        description: The number of returned documents.
        type: integer
        format: int32
        example: 2
      data:
        description: The customer product list item purchases.
        type: array
        items:
          type: CustomerProductListItemPurchase
      total:
        description: The total number of documents.
        type: integer
        format: int32
        example: 10
  CustomerProductListItemResult:
    description: Document representing a customer product list items result.
    properties:
      limit:
        type: integer
        format: int32
        example: 2
      data:
        description: The customer product list items.
        type: CustomerProductListItem[]
      offset:
        description: The zero-based index of the first search hit to include in the result.
        minimum: 0
        type: integer
        format: int32
        example: 1
      total:
        type: integer
        format: int32
        example: 10
  CustomerProductListRegistrant:
    description: Document representing a customer product list registrant.
    properties:
      email:
        description: The email of the registrant.
        type: string
        example: "justincredible@mail.com"
      firstName:
        description: The first name of the registrant.
        type: string
        example: "Justin"
      lastName:
        description: The last name of the registrant.
        type: string
        example: "Credible"
      role:
        description: The role of the registrant.
        type: string
        example: "Friend"
  CustomerProductListResult:
    description: Document representing a customer product lists result.
    properties:
      limit:
        description: The number of returned documents.
        type: integer
        format: int32
        example: 13
      data:
        description: The customer product lists.
        type: array
        items:
          type: CustomerProductList
      total:
        description: The total number of documents.
        type: integer
        format: int32
        example: 3
  GiftCertificateItem:
    description: A gift certificate item.
    properties:
      amount:
        description: The certificate item amount.
        type: number
        format: double
        example: 120.5
      giftCertificateItemId:
        description: ID used to identify this item.
        type: string
        required: false
        example: "myGiftId"
      message:
        description: The certificate's message.
        maxLength: 4000
        type: string
        (label):
          default: Message
        required: false
        example: "Buy One Get One Free"
      recipientEmail:
        description: The recipient's email.
        minLength: 1
        type: string
        (label):
          default: Recipient Email
        example: "justincredible@mail.com"
      recipientName:
        description: The recipient's name.
        type: string
        (label):
          default: Recipient Name
        required: false
        example: "Justin Credible"
      senderName:
        description: The sender's name.
        type: string
        (label):
          default: Sender Name
        required: false
        example: "Rustin Peece"
      shipmentId:
        description: The shipment ID.
        type: string
        required: false
        example: "Express"
  Image:
    description: Image of the product within a customer's productList.
    properties:
      alt:
        type: string
        required: false
        example: "myImage"
      disBaseLink:
        type: string
        required: false
        example: "www.image.com/product.jpg"
      link:
        minLength: 1
        type: string
        example: "https://www.ecom.com/myProduct.jpg"
      title:
        type: string
        required: false
        example: "My Product Image"
  ImageGroup:
    description: Document representing an image group containing a list of images for a particular view type and an optional variation value.
    properties:
      images:
        description: The images of the image group.
        type: array
        items:
          type: Image
      variationAttributes:
        description: Returns a list of variation attributes applying to this image group.
        type: array
        items:
          type: VariationAttribute
        required: false
      viewType:
        description: The image view type.
        type: string
        example: "Hi-Res"
  Inventory:
    description: Document representing inventory information of the current product for a particular inventory list.
    properties:
      ats:
        description: |-
          The Available To Sell (ATS) of the product. If it is infinity, the return value is 999999. The value can be overwritten by the
           OCAPI setting 'product.inventory.ats.max_threshold'.
        type: number
        format: double
        required: false
        example: 25.0
      backorderable:
        description: A flag indicating whether the product is backorderable.
        type: boolean
        required: false
        example: true
      id:
        description: The inventory ID.
        type: string
        example: "listInventory"
      inStockDate:
        description: A flag indicating the date when the product will be in stock.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      orderable:
        description: A flag indicating whether at least one product is available to sell.
        type: boolean
        required: false
        example: true
      preorderable:
        description: A flag indicating whether the product is pre orderable.
        type: boolean
        required: false
        example: true
      stockLevel:
        description: |-
          The stock level of the product. If it is infinity, the return value is 999999. The value can be overwritten by the
           OCAPI setting 'product.inventory.stock_level.max_threshold'.
        type: number
        format: double
        required: false
        example: 22
  Master:
    description: Representation of a group of variant products. This is a non-buyable entity, provides inheritable attributes for it's product variants, and is used for navigation. *Doesn't have a SKU.*
    properties:
      masterId:
        maxLength: 100
        minLength: 1
        type: string
        example: "Shirt"
      orderable:
        type: boolean
        required: false
        example: true
      price:
        type: number
        format: double
        required: false
        example: 29.99
      priceMax:
        type: number
        format: double
        required: false
        example: 39.99
      prices:
        type: object
        properties:
          //:
            type: number
            format: double
        required: false
  Option:
    description: Document representing a product option.
    properties:
      description:
        description: The localized description of the option.
        type: string
        required: false
        example: "Great Option"
      id:
        description: The ID of the option.
        maxLength: 100
        minLength: 1
        type: string
        example: "Warranty"
      image:
        description: The URL to the option image.
        type: string
        required: false
        example: "https://www.image.com/option.jpg"
      name:
        description: The localized name of the option.
        type: string
        required: false
        example: "Warranty Option"
      values:
        description: The array of option values. This array can be empty.
        type: array
        items:
          type: OptionValue
        required: false
  OptionItem:
    description: Document representing an option item.
    properties:
      adjustedTax:
        description: The tax of the product item after adjustments applying.
        type: number
        format: double
        required: false
        example: 2.52
      basePrice:
        description: |-
          The base price for the line item, which is the
           price of the unit before applying adjustments, in the purchase
           currency. The base price may be net or gross of tax depending
           on the configured taxation policy.
        type: number
        format: double
        required: false
        example: 29.99
      bonusDiscountLineItemId:
        description: The ID of the bonus discount line item this bonus product relates to.
        type: string
        required: false
        example: "myProduct"
      bonusProductLineItem:
        description: A flag indicating whether the product item is a bonus.
        type: boolean
        required: false
        example: true
      bundledProductItems:
        description: The array of bundled product items. Can be empty.
        type: array
        items:
          type: ProductItem
        required: false
      gift:
        description: Returns true if the item is a gift.
        type: boolean
        required: false
        example: false
      giftMessage:
        description: The gift message.
        type: string
        required: false
        example: "Enjoy!"
      inventoryId:
        description: The inventory list ID associated with this item.
        maxLength: 256
        type: string
        required: false
        example: "storeInventory"
      itemId:
        description: |-
          The item identifier. Use this to identify an item when updating the item quantity or creating a custom price
           adjustment for an item.
        type: string
        required: false
        example: "Shirt"
      itemText:
        description: The text describing the item in more detail.
        type: string
        required: false
        example: "Magical Shirt"
      optionId:
        description: The ID of the option.
        maxLength: 256
        type: string
        example: "Warranty"
      optionItems:
        description: The array of option items. This array can be empty.
        type: array
        items:
          type: OptionItem
        required: false
      optionValueId:
        description: The ID of the option value.
        maxLength: 256
        type: string
        example: "5 years"
      price:
        description: |-
          The price of the line item before applying any adjustments. If the line item is based on net pricing
           then the net price is returned. If the line item is based on gross
           pricing then the gross price is returned.
        type: number
        format: double
        required: false
        example: 29.99
      priceAdjustments:
        description: Array of price adjustments. Can be empty.
        type: array
        items:
          type: PriceAdjustment
        required: false
      priceAfterItemDiscount:
        description: |-
          The price of the product line item after applying all product-level
           adjustments. For net pricing the adjusted net price is returned. For gross pricing, the adjusted
           gross price is returned.
        type: number
        format: double
        required: false
        example: 19.99
      priceAfterOrderDiscount:
        description: |-
          The price of this product line item after considering all
           dependent price adjustments and prorating all order-level
           price adjustments. For net pricing the net price is returned. For gross
           pricing, the gross price is returned.
        type: number
        format: double
        required: false
        example: 19.99
      productId:
        description: The ID of the product.
        maxLength: 100
        type: string
        required: false
        example: "Shirt"
      productListItem:
        description: The product list item.
        type: ProductListItemReference
        required: false
      productName:
        description: The name of the product.
        type: string
        required: false
        example: "Nice Shirt"
      quantity:
        description: The quantity of the products represented by this item.
        maximum: 999
        minimum: 0
        type: number
        format: double
        required: false
        example: 100.00
      shipmentId:
        description: The ID of the shipment which includes the product item.
        type: string
        required: false
        example: "Express"
      shippingItemId:
        description: |-
          The reference to the related shipping item if it exists. This is the case, if for example, when a surcharge is
           defined for individual products using a particular a shipping method.
        type: string
        required: false
        example: "Express"
      tax:
        description: The tax of the product item before adjustments applying.
        type: number
        format: double
        required: false
        example: 5.50
      taxBasis:
        description: The price used to calculate the tax for this product item.
        type: number
        format: double
        required: false
        example: 10
      taxClassId:
        description: |-
          The tax class ID for the product item, or null
           if no tax class ID is associated with the product item.
        type: string
        required: false
        example: "Standard"
      taxRate:
        description: |-
          The tax rate, which is the decimal tax rate to be applied
           to the product represented by this item.
        type: number
        format: double
        required: false
        example: 8.5
  OptionValue:
    description: Document representing an option value.
    properties:
      default:
        description: A flag indicating whether this option value is the default one.
        type: boolean
        required: false
        example: true
      id:
        description: The ID of the option value.
        maxLength: 100
        minLength: 1
        type: string
        example: "5Years"
      name:
        description: The localized name of the option value.
        type: string
        required: false
        example: "5 Year Warranty"
      price:
        description: The effective price of this option value.
        type: number
        format: double
        required: false
        example: 15.99
  Order:
    description: Document representing an order.
    properties:
      adjustedMerchandizeTotalTax:
        description: |-
          The products tax after discounts applying in purchase currency.

           Adjusted merchandize prices represent the sum of product prices before
           services (such as shipping) have been added, but after adjustments from
           promotions have been added.
        type: number
        format: double
        required: false
        example: 6.50
      adjustedShippingTotalTax:
        description: |-
          The tax of all shipping line items of the line item container after
           shipping adjustments have been applied.
        type: number
        format: double
        required: false
        example: 5.5
      billingAddress:
        description: The billing address. This property is part of basket checkout information only.
        type: OrderAddress
        required: false
      bonusDiscountLineItems:
        description: The bonus discount line items of the line item container.
        type: array
        items:
          type: BonusDiscountLineItem
        required: false
      channelType:
        description: The sales channel for the order.
        type: string
        enum:
          - storefront
          - callcenter
          - marketplace
          - dss
          - store
          - pinterest
          - twitter
          - facebookads
          - subscriptions
          - onlinereservation
          - customerservicecenter
          - instagramcommerce
        (oas-readOnly): true
        (enum-labels):
          - default: Storefront
          - default: Call Center
          - default: Marketplace
          - default: DSS
          - default: Store
          - default: Pinterest
          - default: Twitter
          - default: Facebook Ads
          - default: Subscriptions
          - default: Online Reservation
          - default: Customer Service Center
          - default: Instagram Commerce
        (label):
          default: Channel Type
        required: false
        example: store
      confirmationStatus:
        description: The confirmation status of the order.
        type: string
        enum:
          - not_confirmed
          - confirmed
        (enum-labels):
          - default: NOTCONFIRMED
          - default: CONFIRMED
        (label):
          default: Confirmation Status
          example: confirmed
      couponItems:
        description: The sorted array of coupon items. This array can be empty.
        type: array
        items:
          type: CouponItem
        required: false
      createdBy:
        description: The name of the user who created the order.
        type: string
        (label):
          default: Created By
        required: false
        example: "Someone"
      creationDate:
        description: Returns the value of attribute 'creationDate'.
        type: datetime
        (oas-readOnly): true
        (label):
          default: Creation Date
        required: false
        example: 9999-12-31T00:00:00.0Z
      currency:
        description: The ISO 4217 mnemonic code of the currency.
        type: string
        required: false
        example: "USD"
      customerInfo:
        description: The customer information for logged in customers. This property is part of basket checkout information only.
        type: CustomerInfo
        required: false
      customerName:
        description: The name of the customer associated with this order.
        type: string
        (label):
          default: Customer Name
        required: false
        example: "Justin Credible"
      exportStatus:
        description: The export status of the order.
        type: string
        enum:
          - not_exported
          - exported
          - ready
          - failed
        (enum-labels):
          - default: NOTEXPORTED
          - default: EXPORTED
          - default: EXPORTREADY
          - default: EXPORTFAILED
        (label):
          default: Export Status
          example: ready
      externalOrderStatus:
        description: The external status of the order.
        type: string
        (label):
          default: External Order Status
        required: false
        example: "set"
      giftCertificateItems:
        description: The sorted array of gift certificate line items. This array can be empty.
        type: array
        items:
          type: GiftCertificateItem
        required: false
      globalPartyId:
        description: globalPartyId is managed by Customer 360. Its value can be changed.
        type: string
        required: false
        example: "globalId"
      lastModified:
        description: Returns the value of attribute 'lastModified'.
        type: datetime
        (oas-readOnly): true
        (label):
          default: Last Modified
        required: false
        example: 9999-12-31T00:00:00.0Z
      merchandizeTotalTax:
        description: |-
          The products total tax in purchase currency.

           Merchandize total prices represent the sum of product prices before
           services (such as shipping) or adjustments from promotions have
           been added.
        type: number
        format: double
        required: false
        example: 5.5
      notes:
        description: The notes for the line item container.
        type: SimpleLink
        required: false
      orderNo:
        description: The order number of the order.
        type: string
        (oas-readOnly): true
        (label):
          default: Order No.
        required: false
        example: "firstOrder"
      orderPriceAdjustments:
        description: The array of order level price adjustments. This array can be empty.
        type: array
        items:
          type: PriceAdjustment
        required: false
      orderToken:
        description: |-
          The order token used to secure the lookup of an order on base of the
           plain order number. The order token contains only URL safe characters.
        type: string
        required: false
        example: "token"
      orderTotal:
        description: |-
          The total price of the order, including products, shipping, and tax. This property is part of basket checkout
           information only.
        type: number
        format: double
        (label):
          default: Order Total
        required: false
        example: 59.99
      paymentInstruments:
        description: Method for customer to pay for the goods purchased on an ecommerce site. Payment methods include credit card, debit card, bank account, and gift card.
        type: array
        items:
          type: OrderPaymentInstrument
        required: false
      paymentStatus:
        description: The payment status of the order.
        type: string
        enum:
          - not_paid
          - part_paid
          - paid
        (enum-labels):
          - default: NOTPAID
          - default: PARTPAID
          - default: PAID
        (label):
          default: Payment Status
          example: paid
      productItems:
        description: The sorted array of product items (up to a maximum of 50 items). This array can be empty.
        type: array
        items:
          type: ProductItem
        required: false
      productSubTotal:
        description: |-
          The total price of all product items after all product discounts.
           Depending on taxation policy the returned price is net or gross.
        type: number
        format: double
        required: false
        example: 29.99
      productTotal:
        description: |-
          The total price of all product items after all product and order discounts.
           Depending on taxation policy the returned price is net or gross.
        type: number
        format: double
        required: false
        example: 39.99
      shipments:
        description: The array of shipments. This property is part of basket checkout information only.
        type: array
        items:
          type: Shipment
        required: false
      shippingItems:
        description: The sorted array of shipping items. This array can be empty.
        type: array
        items:
          type: ShippingItem
        required: false
      shippingStatus:
        description: The shipping status of the order.
        type: string
        enum:
          - not_shipped
          - part_shipped
          - shipped
        (enum-labels):
          - default: NOTSHIPPED
          - default: PARTSHIPPED
          - default: SHIPPED
        (label):
          default: Shipping Status
          example: shipped
      shippingTotal:
        description: |-
          The total shipping price of the order after all shipping discounts. Excludes tax if the taxation policy is net. Includes
           tax if the taxation policy is gross. This property is part of basket checkout information only.
        type: number
        format: double
        required: false
        example: 59.99
      shippingTotalTax:
        description: |-
          The tax of all shipping line items of the line item container, before
           shipping adjustments have been applied.
        type: number
        format: double
        required: false
        example: 5.99
      siteId:
        description: The site where the order resides.
        type: string
        (label):
          default: Site Id
        required: false
        example: "SiteGenesis"
      sourceCode:
        description: Gets the source code assigned to this basket.
        type: string
        (label):
          default: Source Code
        required: false
        example: "code"
      status:
        description: The status of the order.
        type: string
        enum:
          - created
          - new
          - open
          - completed
          - cancelled
          - replaced
          - failed
        (enum-labels):
          - default: CREATED
          - default: NEW
          - default: OPEN
          - default: COMPLETED
          - default: CANCELLED
          - default: REPLACED
          - default: FAILED
        (label):
          default: Status
          example: created
      taxTotal:
        description: The total tax amount of the order. This property is part of basket checkout information only.
        type: number
        format: double
        required: false
        example: 15.99
      taxation:
        description: The taxation the line item container is based on.
        type: string
        enum:
          - gross
          - net
        required: false
        example: net
  OrderAddress:
    description: Document representing an order address.
    properties:
      address1:
        description: The first address.
        type: string
        (label):
          default: Address 1
        example: "10 Presidential Way"
      address2:
        description: The second address.
        type: string
        (label):
          default: Address 2
        required: false
        example: "Apt 10"
      city:
        description: The city.
        type: string
        (label):
          default: City
        example: "Gotham"
      companyName:
        description: The company name.
        type: string
        (label):
          default: Company
        required: false
        example: "Pym Tech"
      countryCode:
        description: The two-letter ISO 3166-1 (Alpha-2) country code.
        type: string
        enum:
          - US
          - FR
          - IT
          - JP
          - CN
          - GB
        (enum-labels):
          - default: United States
          - default: France
          - default: Italy
          - default: Japan
          - default: China
          - default: United Kingdom
        (label):
          default: Country
          example: "US"
      firstName:
        description: The first name.
        type: string
        (label):
          default: First Name
          example: "Justin"
      fullName:
        description: The full name.
        type: string
        (label):
          default: Full Name
        required: false
        example: "Justin Credible"
      id:
        description: ID used to identify this address
        type: string
        required: false
        example: "Home"
      jobTitle:
        description: The job title.
        type: string
        (label):
          default: Job Title
        required: false
        example: "Batman"
      lastName:
        description: The last name.
        type: string
        (label):
          default: Last Name
        example: "Credible"
      phone:
        description: The phone number.
        type: string
        (label):
          default: Contact Phone
        required: false
        example: "555-555-5555"
      postBox:
        description: The post box.
        type: string
        (label):
          default: Post Box
        required: false
        example: "58426"
      postalCode:
        description: The postal code.
        type: string
        (label):
          default: Postal Code
        example: "N5"
      salutation:
        description: The salutation.
        type: string
        (label):
          default: Salutation
        required: false
        example: "Mr."
      secondName:
        description: The second name.
        type: string
        (label):
          default: Second Name
        required: false
        example: "Rustin Peece"
      stateCode:
        description: The state code.
        type: string
        (label):
          default: State
        required: false
        example: "UT"
      suffix:
        description: The suffix.
        type: string
        (label):
          default: Suffix
        required: false
        example: "Sr."
      suite:
        description: The suite.
        type: string
        (label):
          default: Suite No.
        required: false
        example: "100"
      title:
        description: The title.
        type: string
        (label):
          default: Title
        required: false
        example: "Engineer"
  OrderPaymentInstrument:
    description: Document representing an order payment instrument.
    properties:
      amount:
        description: The payment transaction amount.
        type: number
        format: double
        example: 101.99
      authorizationStatus:
        description: The authorization status of the payment transaction.
        type: Status
      bankRoutingNumber:
        description: The bank routing number.
        maxLength: 256
        type: string
        (label):
          default: Bank Routing Number
        example: "ACB123"
      maskedGiftCertificateCode:
        description: The masked gift certificate code.
        type: string
        example: "*****"
      paymentBankAccount:
        description: The payment bank account.
        type: PaymentBankAccount
      paymentCard:
        description: The payment card.
        type: PaymentCard
      paymentInstrumentId:
        description: The payment instrument ID.
        type: string
        example: "myId"
      paymentMethodId:
        description: The payment method ID. Optional if a customer payment instrument ID is specified.
        maxLength: 256
        type: string
        example: "CreditCard"
  PasswordChangeRequest:
    description: Document representing a password change request.
    properties:
      currentPassword:
        description: The customer's current password.
        maxLength: 4096
        type: string
        example: "p@ssword1"
      password:
        description: The customer's new password.
        maxLength: 4096
        type: string
        example: "p@assword2"
  ResetPasswordRequest:
    description: Document representing a reset password request.
    properties:
      resetToken:
        description: Temporary token used to reset password.
        maxLength: 4096
        type: string
        (label):
          default: Reset Token
        example: "R1e2s3e4t5T6o7k8e9n0"
      login:
        description: The customer's login.
        pattern: ^(?!\s*$).+
        maxLength: 256
        type: string
        (label):
          default: Login
        example: "loginId"
      newPassword:
        description: New password to reset to.
        type: string
        maxLength: 4096
        (label):
          default: New Password
        example: "p@assword2"
  ResetPasswordTokenRequest:
    description: Document representing a reset password token request.
    properties:
      login:
        description: The customer's login.
        pattern: ^(?!\s*$).+
        maxLength: 256
        type: string
        (label):
          default: Login
        example: "loginId"
  ResetPasswordToken:
    description: Document representing reset password token response.
    properties:
      login:
        description: The customer's login.
        pattern: ^(?!\s*$).+
        maxLength: 256
        type: string
        (label):
          default: Login
        example: "loginId"
      email:
        description: The customer's email address.
        maxLength: 256
        type: string
        (oas-format): email
        (label):
          default: Email
        example: "jdoe@customer.com"
      resetToken:
        description: Temporary token generated that will be used to reset password.
        maxLength: 4096
        type: string
        (label):
          default: Reset Token
        example: "R1e2s3e4t5T6o7k8e9n0"
      expiresInMinutes:
        description: Reset token expiry (in minutes).
        type: integer
        format: int32
        (label):
          default: Reset Token Expiry
        example: 30
  PaymentBankAccount:
    description: Document representing a payment bank account.
    properties:
      driversLicenseLastDigits:
        description: |-
          The last 4 characters of the decrypted drivers license number of the bank account associated with this payment
           instrument.
        maxLength: 256
        type: string
        required: false
        example: "7435"
      driversLicenseStateCode:
        description: The driver license state code.
        maxLength: 256
        type: string
        required: false
        (label):
          default: Bank Account Drivers License State
        example: UT
      holder:
        description: The holder of the bank account.
        maxLength: 256
        type: string
        required: false
        (label):
          default: Bank Account Holder
        example: "Justin Credible"
      maskedDriversLicense:
        description: |-
          The decrypted drivers license number of the bank account with all but the last 4 characters replaced with a '*'.
           character.
        maxLength: 256
        type: string
        required: false
        example: "****7658"
      maskedNumber:
        description: The masked bank account number.
        maxLength: 256
        type: string
        required: false
        example: "********"
      numberLastDigits:
        description: The last digits of the bank account number.
        maxLength: 256
        required: false
        type: string
        example: "6654"
  PaymentBankAccountRequest:
    description: Document representing a payment bank account request.
    properties:
      driversLicense:
        description: The drivers license.
        maxLength: 256
        type: string
        example: "84736485"
        (label):
          default: Bank Account Drivers License
      driversLicenseStateCode:
        description: The driver license state code.
        maxLength: 256
        type: string
        example: "UT"
        (label):
          default: Bank Account Drivers License State
      holder:
        description: The holder of the bank account.
        maxLength: 256
        type: string
        example: "Justin Credible"
        (label):
          default: Bank Account Holder
      number:
        description: The payment bank account number.
        maxLength: 256
        type: string
        example: "9796976"
        (label):
          default: Bank Account Number
  PaymentCard:
    description: Document representing a payment card.
    properties:
      cardType:
        description: The payment card type (for example, "Visa").
        maxLength: 256
        type: string
        example: "Visa"
        (label):
          default: Type
      creditCardExpired:
        description: A flag indicating if the credit card is expired.
        type: boolean
        required: false
        example: false
      creditCardToken:
        description: |-
          A credit card token. If a credit card is tokenized, the token can be used to look up the credit card data at the
           token store.
        type: string
        required: false
        example: "969kJSD9"
      expirationMonth:
        description: The month the payment card expires.
        type: integer
        format: int32
        required: false
        example: 03
      expirationYear:
        description: The year the payment card expires.
        type: integer
        format: int32
        required: false
        example: 23
      holder:
        description: The payment card holder.
        maxLength: 256
        type: string
        required: false
        example: "Justin Credible"
      issueNumber:
        description: The payment card issue number.
        maxLength: 256
        type: string
        required: false
        example: "769969"
      maskedNumber:
        description: The masked credit card number.
        maxLength: 4000
        type: string
        required: false
        example: "*****************"
      numberLastDigits:
        description: The last digits of credit card number.
        maxLength: 4000
        type: string
        required: false
        example: "4579"
      validFromMonth:
        description: The month the payment card is valid from.
        maximum: 12
        minimum: 1
        type: integer
        format: int32
        required: false
        example: 11
      validFromYear:
        description: The year the payment card is valid from.
        type: integer
        format: int32
        required: false
        example: 15
  PriceAdjustment:
    description: |-
      Document representing a price adjustment within a basket or order. Price adjustments
       are assigned at the order, product, or shipping level. They are created by the
       promotion engine if the custom flag is set to false, or are added by custom logic if the custom
       flag is set to true. For custom price adjustments created by a user, the manual flag should be
       set to true. This is always the case for price adjustments created using OCAPI.   
    properties:
      appliedDiscount:
        description: |-
          A price adjustment that provides details of the discount that was applied.
           This is null for custom price adjustments created
           without discount details.
        type: Discount
      couponCode:
        description: |-
          The coupon code that triggered the promotion, provided
           the price adjustment was created as the result of a promotion
           being triggered by a coupon.
        type: string
        example: "free"
      createdBy:
        description: The user who created the price adjustment.
        type: string
        example: "Joe Ramut"
      creationDate:
        description: Returns the value of attribute 'creationDate'.
        type: datetime
        (oas-readOnly): true
        (label):
          default: Creation Date
        example: 9999-12-31T00:00:00.0Z
      custom:
        description: |-
          A flag indicating whether this price adjustment was created by custom logic. This flag is
           set to true unless the price adjustment was created by the promotion engine.
        type: boolean
        example: false
      itemText:
        description: The text describing the item in more detail.
        type: string
        example: "Brand New Item"
        (label):
          default: Item Text
      lastModified:
        description: Returns the value of attribute 'lastModified'.
        type: datetime
        example: 9999-12-31T00:00:00.0Z
        (oas-readOnly): true
        (label):
          default: Last Modified
      manual:
        description: |-
          A flag indicating whether this price adjustment was created in a manual process.
           
           For custom price adjustments created using the Shop API, this always
           returns true. Using the scripting API, however, it is possible to set this to true
           or false, according to the use case.
        type: boolean
        example: true
      price:
        description: The adjustment price.
        type: number
        format: double
        example: 29.99
      priceAdjustmentId:
        description: The price adjustment ID (UUID).
        type: string
        example: "3845kj34593845hiuhf"
      promotionId:
        description: |-
          The ID of the related promotion. Custom price adjustments
           can be assigned any promotion ID so long it is not
           used by a price adjustment belonging to the same item,
           and is not used by a promotion defined in the promotion engine.
           If not specified, a promotion ID is generated.
        type: string
        example: "BestPromotion"
      promotionLink:
        description: The URL addressing the related promotion.
        type: string
        example: "www.site.com/promotions"
      reasonCode:
        description: The reason why this price adjustment was made.
        type: string
        enum:
          - PRICE_MATCH
          - BACKORDER
          - EVEN_EXCHANGE
        (enum-labels):
          - default: Price Match
          - default: Backorder
          - default: Even Exchange
        (label):
          default: Reason Code
        example: BACKORDER
  Product:
    description: Document representing a product.
    properties:
      brand:
        description: The product's brand.
        type: string
        (label):
          default: Brand
        required: false
        example: "Apple"
      bundledProducts:
        description: The array of all bundled products of this product.
        type: array
        items:
          type: BundledProduct
        required: false
      currency:
        description: The ISO 4217 mnemonic code of the currency.
        type: string
        required: false
        example: "USD"
      ean:
        description: The European Article Number.
        type: string
        (label):
          default: EAN
        required: false
        example: "sidfhg97"
      fetchDate:
        type: integer
        format: int32
        required: false
        example: 15
      id:
        description: The ID (SKU) of the product.
        maxLength: 100
        minLength: 1
        type: string
        (label):
          default: ID
          en: SKUAGE
        example: "8746534"
      imageGroups:
        description: The array of product image groups.
        type: array
        items:
          type: ImageGroup
        required: false
      inventories:
        description: |-
          The array of product inventories explicitly requested via 'inventory_ids' query parameter. This property
           is only returned in context of the 'availability' expansion.
        type: array
        items:
          type: Inventory
        required: false
      inventory:
        description: |-
          The site default inventory information. This property is only
           returned in context of the 'availability' expansion.
        type: Inventory
        required: false
      longDescription:
        description: The localized product long description.
        type: string
        (oas-format): html
        (label):
          default: Product Details
        required: false
        example: "Best Product Ever"
      manufacturerName:
        description: The product's manufacturer name.
        type: string
        (label):
          default: Manufacturer
        required: false
        example: "Apple"
      manufacturerSku:
        description: The product's manufacturer SKU.
        type: string
        (label):
          default: Manufacturer Product ID
        required: false
        example: "938579345"
      master:
        description: The master product information. Only for types master, variation group, and variant.
        type: Master
        required: false
      minOrderQuantity:
        description: The minimum order quantity for this product.
        type: number
        format: double
        (label):
          default: Minimum Order Quantity
        required: false
        example: 10.0
      name:
        description: The localized product name.
        type: string
        (label):
          default: Name
        required: false
        example: "Best Product"
      options:
        description: The array of product options, for type option. This array can be empty.
        type: array
        items:
          type: Option
        required: false
      pageDescription:
        description: The localized products page description.
        type: string
        (label):
          default: Page Description
        required: false
      pageKeywords:
        description: The localized products page description.
        type: string
        (label):
          default: Page Keywords
        required: false
        example: "Apple"
      pageTitle:
        description: The localized products page title.
        type: string
        (label):
          default: Page Title
        required: false
        example: "Product"
      price:
        description: |-
          The sales price of the product. In case of complex products, like master or set, this is the minimum price of
           related child products.
        type: number
        format: double
        required: false
        example: 59.99
      priceMax:
        description: The maximum sales of related child products in case of complex products like master or set.
        type: number
        format: double
        required: false
        example: 69.99
      prices:
        description: The prices map with pricebook IDs and their values.
        type: object
        properties:
          //:
            type: number
            format: double
        required: false
      primaryCategoryId:
        description: The ID of the products primary category.
        type: string
        required: false
        example: "Mens"
      productLinks:
        description: The array of source and target products links information.
        type: array
        items:
          type: ProductLink
        required: false
      productPromotions:
        description: |-
          The array of active customer product promotions for this product. This array can be empty.
           Coupon promotions are not returned in this array.
        type: array
        items:
          type: ProductPromotion
        required: false
      recommendations:
        description: Returns a list of recommendations.
        type: array
        items:
          type: Recommendation
        required: false
      setProducts:
        description: The array of set products of this product.
        type: array
        items:
          type: Product
        required: false
      shortDescription:
        description: The localized product short description.
        type: string
        (oas-format): html
        (label):
          default: Description
        required: false
        example: "What a Product!"
      stepQuantity:
        description: |-
          The steps in which the order amount of the product can be
           increased.
        type: number
        format: double
        (label):
          default: Step Quantity
        required: false
        example: 1
      type:
        description: 'The product type information. Can be one or multiple of the following values: item, master, variation_group, variant,bundle, and set.'
        type: ProductType
        required: false
      unit:
        description: The sales unit of the product.
        type: string
        (label):
          default: Sales Unit
        required: false
        example: "kg"
      upc:
        description: The Universal Product Code (UPC).
        type: string
        (label):
          default: UPC
        required: false
        example: "0384753lj4lj"
      validFrom:
        description: The time when product is valid from.
        type: datetime
        (label):
          default: Online From
        required: false
        example: 9999-12-31T00:00:00.0Z
      validTo:
        description: The time when product is valid to.
        type: datetime
        (label):
          default: Online To
        required: false
        example: 9999-12-31T00:00:00.0Z
      variants:
        description: The array of actual variants. This array can be empty. Only for types master, variation group, and variant.
        type: array
        items:
          type: Variant
        required: false
      variationAttributes:
        description: |-
          Sorted array of variation attributes information. This array can be empty. Only for types master,
           variation group, and variant.
        type: array
        items:
          type: VariationAttribute
        required: false
      variationGroups:
        description: The array of actual variation groups. This array can be empty. Only for types master, variation group, and variant.
        type: array
        items:
          type: VariationGroup
        required: false
      variationValues:
        description: |-
          The actual variation attribute ID - value pairs. Only for type variant and
           variation group.
        type: object
        properties:
          //:
            type: string
        required: false
  ProductLink:
    description: |-
      Document representing a link between two products. It contains the ID of the source and target products, the type of
       product link, and URLs to retrieve product data.
    properties:
      sourceProductId:
        description: The semantic ID of the product from which this product link is coming from.
        type: string
        example: "9475394"
      sourceProductLink:
        description: The URL addressing the product from which this product link is coming from.
        type: string
      targetProductId:
        description: The semantic ID of the product to which this product link is pointing to.
        type: string
        example: "534583745"
      targetProductLink:
        description: The URL addressing the product to which this product link is pointing to.
        type: string
      type:
        description: The type of product link.
        type: string
        enum:
          - cross_sell
          - replacement
          - up_sell
          - accessory
          - newer_version
          - alt_orderunit
          - spare_part
          - other
        example: up_sell
  ProductListEvent:
    description: Document representing a product list event.
    properties:
      city:
        description: The city where the event takes place.
        type: string
        required: false
        example: "Gotham"
      country:
        description: The country where the event takes place.
        type: string
        required: false
        example: "USA"
      date:
        description: The date when the event takes place.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      state:
        description: The federal state where the event takes place.
        type: string
        required: false
        example: "UT"
      type:
        description: Type of the event to celebrate.
        type: string
        example: "wedding"
  ProductDetailsLink:
    description: Document representing a link to the resource for product details.
    properties:
      productDescription:
        description: The description of the product.
        type: string
        required: false
        example: "Awesome Product"
      productId:
        description: The ID of the product.
        type: string
        example: "384756345"
      productName:
        description: The name of the product.
        type: string
        required: false
        example: "WhatAProduct"
      title:
        description: The link title.
        type: string
        required: false
        example: "ProductLink"
  ProductListItemReference:
    properties:
      id:
        description: The ID of the product list item.
        type: string
        example: "93475"
      priority:
        type: integer
        format: int32
        required: false
        example: 1
      productList:
        description: The link of the product list the item is assigned to.
        type: ProductListLink
        required: false
      public:
        type: boolean
        required: false
        example: true
      purchasedQuantity:
        type: number
        format: double
        required: false
        example: 12.0
      quantity:
        minimum: 0
        type: number
        format: double
        required: false
        example: 10.0
      type:
        type: string
        enum:
          - product
          - gift_certificate
        required: false
        example: product
  ProductListRegistrant:
    description: |-

       A ProductListRegistrant is typically associated with an event related product list such as a gift registry. It holds
       information about a person associated with the event such as a bride or groom.
       
    properties:
      firstName:
        description: The first name of the registrant.
        type: string
        example: "Justin"
      lastName:
        description: The last name of the registrant.
        type: string
        example: "Credible"
      role:
        description: The role of the registrant.
        type: string
        example: "CEO"
  ProductListShippingAddress:
    description: Document representing a product list shipping address.
    properties:
      addressId:
        description: The ID of this address.
        minLength: 1
        type: string
        example: "Home"
      city:
        description: The city of this address.
        type: string
        required: false
        example: "Gotham"
      firstName:
        description: The first name of this address.
        type: string
        required: false
        example: "Rustin"
      lastName:
        description: The last name of this address.
        type: string
        required: false
        example: "Peece"
  ProductListLink:
    description: Document representing a link to a product list.
    properties:
      description:
        description: The description of this product list.
        type: string
        example: "Awesome Product List"
      link:
        description: The target of the link.
        type: string
        example: "www.examplelist.com/myproductlist"
      name:
        description: The name of this product list.
        type: string
        example: "Super List"
      public:
        description: |-
          A flag indicating whether the owner made this product list available for access
           by other customers.
        type: boolean
        example: true
      title:
        description: The link title.
        type: string
        example: "My Product List"
      type:
        description: The type of the product list.
        type: string
        enum:
          - wish_list
          - gift_registry
          - shopping_list
          - custom_1
          - custom_2
          - custom_3
        example: wish_list
  ProductItem:
    description: Document representing a product item.
    properties:
      adjustedTax:
        description: The tax of the product item after adjustments applying.
        type: number
        format: double
        required: false
        example: 5.5
      basePrice:
        description: |-
          The base price for the line item, which is the
           price of the unit before applying adjustments, in the purchase
           currency. The base price may be net or gross of tax depending
           on the configured taxation policy.
        type: number
        format: double
        required: false
        example: 29.99
      bonusDiscountLineItemId:
        description: The ID of the bonus discount line item this bonus product relates to.
        type: string
        required: false
        example: "someId"
      bonusProductLineItem:
        description: A flag indicating whether the product item is a bonus.
        type: boolean
        required: false
        example: false
      bundledProductItems:
        description: The array of bundled product items. Can be empty.
        type: array
        items:
          type: ProductItem
        required: false
      gift:
        description: Returns true if the item is a gift.
        type: boolean
        (label):
          default: Is A Gift
        required: false
        example: true
      giftMessage:
        description: The gift message.
        type: string
        (label):
          default: Gift Message
        required: false
        example: "Enjoy the gift"
      inventoryId:
        description: The inventory list ID associated with this item.
        maxLength: 256
        type: string
        required: false
        example: "someInventory"
      itemId:
        description: |-
          The item identifier. Use this to identify an item when updating the item quantity or creating a custom price
           adjustment for an item.
        type: string
        required: false
        example: "simpleItemId"
      itemText:
        description: The text describing the item in more detail.
        type: string
        required: false
        example: "Super Item"
      optionItems:
        description: The array of option items. This array can be empty.
        type: array
        items:
          type: OptionItem
        required: false
      price:
        description: |-
          The price of the line item before applying any adjustments. If the line item is based on net pricing
           then the net price is returned. If the line item is based on gross
           pricing then the gross price is returned.
        type: number
        format: double
        required: false
        example: 39.99
      priceAdjustments:
        description: Array of price adjustments. Can be empty.
        type: array
        items:
          type: PriceAdjustment
        required: false
      priceAfterItemDiscount:
        description: |-
          The price of the product line item after applying all product-level
           adjustments. For net pricing the adjusted net price is returned. For gross pricing, the adjusted
           gross price is returned.
        type: number
        format: double
        required: false
        example: 35.99
      priceAfterOrderDiscount:
        description: |-
          The price of this product line item after considering all
           dependent price adjustments and prorating all order-level
           price adjustments. For net pricing the net price is returned. For gross
           pricing, the gross price is returned.
        type: number
        format: double
        required: false
        example: 35.99
      productId:
        description: The ID of the product.
        maxLength: 100
        type: string
        required: false
        example: "8374524"
      productListItem:
        description: The product list item.
        type: ProductListItemReference
        required: false
      productName:
        description: The name of the product.
        type: string
        required: false
        example: "Shirt"
      quantity:
        description: The quantity of the products represented by this item.
        maximum: 999
        minimum: 0
        type: number
        format: double
        example: 5
      shipmentId:
        description: The ID of the shipment which includes the product item.
        type: string
        required: false
        example: "Express"
      shippingItemId:
        description: |-
          The reference to the related shipping item if it exists. This is the case if, for example, when a surcharge is
           defined for individual products using a particular a shipping method.
        type: string
        required: false
        example: "Express"
      tax:
        description: The tax of the product item before adjustments applying.
        type: number
        format: double
        required: false
        example: 5.5
      taxBasis:
        description: The price used to calculate the tax for this product item.
        type: number
        format: double
        required: false
        example: 39.99
      taxClassId:
        description: |-
          The tax class ID for the product item, or null
           if no tax class ID is associated with the product item.
        type: string
        required: false
        example: "standard"
      taxRate:
        description: |-
          The decimal tax rate to be applied
           to the product represented by this item.
        type: number
        format: double
        required: false
        example: 12.5
  ProductPromotion:
    description: Document representing a product promotion.
    properties:
      calloutMsg:
        description: The localized call-out message of the promotion.
        type: string
        (label):
          default: callout message
        example: "Super Promotion"
      promotionId:
        description: The unique ID of the promotion.
        type: string
        (label):
          default: promotion id
        example: "summerBlowout"
      promotionalPrice:
        description: The promotional price for this product.
        type: number
        format: double
        (label):
          default: promotional price
        example: 15.99
  ProductType:
    description: Document representing a product type.
    properties:
      bundle:
        description: A flag indicating whether the product is a bundle.
        type: boolean
        example: true
      item:
        description: A flag indicating whether the product is a standard item.
        type: boolean
        example: true
      master:
        description: A flag indicating whether the product is a master.
        type: boolean
        example: true
      option:
        description: A flag indicating whether the product is an option.
        type: boolean
        example: true
      set:
        description: A flag indicating whether the product is a set.
        type: boolean
        example: true
      variant:
        description: A flag indicating whether the product is a variant.
        type: boolean
        example: true
      variationGroup:
        description: A flag indicating whether the product is a variation group.
        type: boolean
        example: true
  PublicProductListInfo:
    description: Document representing a link to a public product list.
    properties:
      description:
        description: The description of this product list.
        type: string
        required: false
        example: "Super Awesome ProductList"
      id:
        description: The ID of the product-list document.
        type: string
        example: "3958739435"
      name:
        description: The name of this product list.
        type: string
        required: false
        example: "My Product List"
      title:
        description: The link title.
        type: string
        example: "Product List Title"
      type:
        description: The type of the product list.
        type: string
        enum:
          - wish_list
          - gift_registry
          - shopping_list
          - custom_1
          - custom_2
          - custom_3
        example: custom_1
  PublicProductListResult:
    description: Result document containing an array of public product list links.
    properties:
      limit:
        description: The number of returned documents.
        type: integer
        format: int32
        example: 10
      data:
        description: The array of product list link documents.
        type: array
        items:
          type: PublicProductListInfo
      total:
        description: The total number of documents.
        type: integer
        format: int32
        example: 12
  PublicProductList:
    description: Document representing a customer product list.
    properties:
      coRegistrant:
        description: The coRegistrant of this product list.
        type: ProductListRegistrant
        required: false
      creationDate:
        description: Returns the value of attribute 'creationDate'.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      description:
        description: The description of this product list.
        type: string
        required: false
        example: "Super Product List"
      event:
        description: The event of this product list.
        type: ProductListEvent
        required: false
      id:
        description: The id of this product list.
        minLength: 1
        type: string
        example: "873465834"
      lastModified:
        description: Returns the value of attribute 'lastModified'.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      name:
        description: The name of this product list.
        type: string
        required: false
        example: "My Product List"
      productListItems:
        description: The product list items
        type: array
        items:
          type: PublicProductListItem
        required: false  
      productListShippingAddress:
        description: The abbreviated shipping address of this product list representing what anonymous users see.
        type: ProductListShippingAddress
        required: false
      public:
        description: Indicates whether the owner made this product list available for access by other customers.
        type: boolean
        example: true
      registrant:
        description: The registrant of this product list.
        type: ProductListRegistrant
        required: false
      type:
        description: The type of the product list.
        type: string
        enum:
          - wish_list
          - gift_registry
          - shopping_list
          - custom_1
          - custom_2
          - custom_3
        example: gift_registry
  PublicProductListItem:
    description: Document representing a product list item.
    properties:
      id:
        description: The ID of this product list item.
        type: string
        example: "8745345"
      priority:
        description: The priority of the item.
        type: integer
        format: int32
        example: 2
      product:
        description: The product item.
        type: Product
        required: false
      type:
        description: The type of the item.
        type: string
        enum:
          - product
          - gift_certificate
        example: product
  PublicProductListItemResult:
    description: Result document containing an array of product list items.
    properties:
      limit:
        description: The number of returned documents.
        type: integer
        format: int32
        example: 13
      data:
        description: The array of product list item documents.
        type: array
        items:
          type: PublicProductListItem
      total:
        description: The total number of documents.
        type: integer
        format: int32
        example: 15    
  Recommendation:
    description: Document representing a product recommendation.
    properties:
      calloutMsg:
        description: The localized callout message of the recommendation.
        type: string
        (oas-format): html
        (label):
          default: Callout Message
        required: false
        example: "Buy this too"
      image:
        description: The image of the recommendation.
        type: Image
        (label):
          default: Standard Image
        required: false
      longDescription:
        description: The localized long description of the recommendation.
        type: string
        (oas-format): html
        (label):
          default: Long Description
        required: false
        example: "Goes well with..."
      name:
        description: The localized name of the recommendation.
        type: string
        (label):
          default: Name
        required: false
        example: "Reco Product"
      recommendationType:
        description: The recommendation type of the recommendation.
        type: RecommendationType
        (label):
          default: Recommendation Type
      recommendedItemId:
        description: The recommended item ID of the recommendation.
        type: string
        required: false
        example: "93457893"
      recommendedItemLink:
        description: The recommended item link of the recommendation.
        type: string
        required: false
        example: "Link"
      shortDescription:
        description: The localized short description of the recommendation.
        type: string
        (oas-format): html
        (label):
          default: Short Description
        required: false
        example: "Awesome Product"
  RecommendationType:
    description: Document representing a recommendation type.
    properties:
      displayValue:
        description: The localized display value of the recommendation type.
        type: string
        example: "UpSell"
      value:
        description: The value of the recommendation type.
        type: integer
        format: int32
        example: 2
  Shipment:
    description: Document representing a shipment.
    properties:
      adjustedMerchandizeTotalTax:
        description: |-
          The products tax after applying discounts in the purchase currency. Adjusted merchandize prices represent the sum of
           product prices before services (such as shipping) have been added, but after adjustments from promotions have been
           added.

           Note that order level adjustments are considered if the Discount Taxation preference is set to
           "Tax Products and Shipping Only Based on Adjusted Price".
        type: number
        format: double
        required: false
        example: 3.5
      adjustedShippingTotalTax:
        description: The tax of all shipping line items of the line item container, after shipping adjustments have been applied.
        type: number
        format: double
        required: false
        example: 2.4
      gift:
        description: A flag indicating whether the shipment is a gift.
        type: boolean
        (label):
          default: Is A Gift
        required: false
        example: true
      giftMessage:
        description: The gift message.
        type: string
        (label):
          default: Gift Message
        required: false
        example: "Enjoy the Gift"
      merchandizeTotalTax:
        description: |-
          The products total tax in purchase currency. Merchandize total prices represent the sum of product prices before
           services (such as shipping), or adjustments from promotions, have been added.
        type: number
        format: double
        required: false
        example: 5.5
      productSubTotal:
        description: |-
          The total price of all product items after all product discounts. Depending on taxation policy the returned price
           is net or gross.
        type: number
        format: double
        required: false
        example: 15.99
      productTotal:
        description: |-
          The total price of all product items after all product and order discounts. Depending on taxation policy the
           returned price is net or gross.
        type: number
        format: double
        required: false
        example: 25.99
      shipmentId:
        description: The order specific ID to identify the shipment.
        type: string
        required: false
        example: "384765kad"
      shipmentNo:
        description: |-
          Returns the shipment number for this shipment.

           This number is automatically generated.
        type: string
        (label):
          default: Shipment No.
        required: false
        example: "38453345"
      shipmentTotal:
        description: |-
          The total price of the shipment, including products, shipping and tax.

           Note that order level adjustments are not considered.
        type: number
        format: double
        required: false
        example: 10.99
      shippingAddress:
        description: The shipping address.
        type: OrderAddress
        required: false
      shippingMethod:
        description: The shipping method.
        type: ShippingMethod
        required: false
      shippingStatus:
        description: The shipping status of the shipment.
        type: string
        enum:
          - not_shipped
          - shipped
        (enum-labels):
          - default: NOTSHIPPED
          - default: SHIPPED
        (label):
          default: Shipping Status
        example: shipped
      shippingTotal:
        description: |-
          The total shipping price of the shipment, after all shipping discounts. Excludes tax if the taxation policy is net.
           Includes tax if the taxation policy is gross.
        type: number
        format: double
        required: false
        example: 12.99
      shippingTotalTax:
        description: The tax of all shipping line items of the line item container, before shipping adjustments have been applied.
        type: number
        format: double
        required: false
        example: 7.99
      taxTotal:
        description: |-
          The total tax amount of the shipment.

           Note that order level adjustments are considered if Discount Taxation preference is set to
           "Tax Products and Shipping Only Based on Adjusted Price".
        type: number
        format: double
        required: false
        example: 7.99
      trackingNumber:
        description: The tracking number of the shipment.
        type: string
        required: false
        example: "3394853khbdf9sdf"
  ShippingItem:
    description: Document representing a shipping item.
    properties:
      adjustedTax:
        description: The tax of the product item after adjustments applying.
        type: number
        format: double
        example: 5.5
      basePrice:
        description: |-
          The base price for the line item, which is the
           price of the unit before applying adjustments, in the purchase
           currency. The base price may be net or gross of tax depending
           on the configured taxation policy.
        type: number
        format: double
        example: 15.99
      itemId:
        description: |-
          The item identifier. Use this to identify an item when
           updating the item quantity or creating a custom price adjustment for an
           item.
        type: string
        example: "3984"
      itemText:
        description: The text describing the item in more detail.
        type: string
        example: "My Item"
      price:
        description: |-
          The price of the line item before applying any adjustments. If the line item is based on net pricing
           then the net price is returned. If the line item is based on gross
           pricing then the gross price is returned.
        type: number
        format: double
        example: 29.99
      priceAdjustments:
        description: Array of price adjustments. Can be empty.
        type: array
        items:
          type: PriceAdjustment
      priceAfterItemDiscount:
        description: |-
          The price of the product line item after applying all product-level
           adjustments. For net pricing, the adjusted net price is returned. For gross pricing, the adjusted
           gross price is returned.
        type: number
        format: double
        example: 19.99
      shipmentId:
        description: The identifier of the shipment to which this item belongs.
        type: string
        example: "ssdf9sd34f"
      tax:
        description: The tax of the product item before adjustments applying.
        type: number
        format: double
        example: 7.99
      taxBasis:
        description: The price used to calculate the tax for this product item.
        type: number
        format: double
        example: 29.99
      taxClassId:
        description: |-
          The tax class ID for the product item, or null
           if no tax class ID is associated with the product item.
        type: string
        example: "standard"
      taxRate:
        description: |-
          The decimal tax rate to be applied
           to the product represented by this item.
        type: number
        format: double
        example: 12.5
  ShippingMethod:
    description: Document representing a shipping method.
    properties:
      description:
        description: The localized description of the shipping method.
        type: string
        (label):
          default: Description
        required: false
        example: "One Day Shipment"
      externalShippingMethod:
        description: The external shipping method.
        type: string
        required: false
        example: "Air"
      id:
        description: The shipping method ID.
        maxLength: 256
        type: string
        (label):
          default: ID
        example: "9wrksdf"
      name:
        description: The localized name of the shipping method.
        type: string
        (label):
          default: Name
        required: false
        example: "Ship"
      price:
        description: |-
          The shipping cost total, including shipment level costs,
           product level fix, and surcharge costs.
        type: number
        format: double
        required: false
        example: 12.99
      shippingPromotions:
        description: |-
          The array of active customer shipping promotions for this shipping
           method. This array can be empty.
        type: array
        items:
          type: ShippingPromotion
        required: false
  ShippingPromotion:
    description: Document representing a shipping promotion.
    properties:
      calloutMsg:
        description: The localized call-out message of the promotion.
        type: string
        example: "Free Shipping"
      promotionId:
        description: The unique ID of the promotion.
        type: string
        example: "wk23459234"
      promotionName:
        description: The localized promotion name.
        type: string
        example: "Free Shipping Week"
  SimpleLink:
    description: Document representing a link to another resource.
    properties:
      link:
        description: The link to the resource.
        type: string
        example: "www.examplelink.com"
  Status:
    description: Document representing a status of an object.
    properties:
      code:
        description: The status code.
        type: string
        example: "Success"
      message:
        description: The status message.
        type: string
        example: "Looking good"
      status:
        description: |-
          The status.
           
           For more information on the status values see dw.system.Status.OK and
           dw.system.Status.ERROR.
        type: integer
        format: int32
        example: 2
  TrustedSystemAuthRequest:
    description: Document representing trusted system auth request.
    properties:
      clientId:
        description: |-
          The client ID of the shopping application to be encoded in the customer JSON Web Token (JWT).
           This is not the same as the OAuth Client ID used to authenticate the API call, as
           the OAuth Client ID is the trusted and private ID and this is the untrusted and public ID.
        pattern: ^(?!\s*$).+
        type: string
        example: "349534859384534"
      login:
        description: The customer's login.
        pattern: ^(?!\s*$).+
        type: string
        example: "loginId"
  Variant:
    description: Document representing a product variation.
    properties:
      orderable:
        description: A flag indicating whether the variant is orderable.
        type: boolean
        required: false
        example: true
      price:
        description: The sales price of the variant.
        type: number
        format: double
        required: false
        example: 25.99
      productId:
        description: The ID (SKU) of the variant.
        maxLength: 100
        minLength: 1
        type: string
        example: "489752348592"
      variationValues:
        description: The actual variation attribute ID - value pairs.
        type: object
        properties:
          //:
            type: string
        required: false
  VariationAttribute:
    description: Document representing a variation attribute.
    properties:
      id:
        description: The ID of the variation attribute.
        minLength: 1
        type: string
        example: "color"
      name:
        description: The localized display name of the variation attribute.
        type: string
        required: false
        example: "Color"
      values:
        description: The sorted array of variation values. This array can be empty.
        type: array
        items:
          type: VariationAttributeValue
        required: false
  VariationAttributeValue:
    description: Document representing a variation attribute value.
    properties:
      description:
        description: The localized description of the variation value.
        type: string
        required: false
        example: "Red"
      image:
        description: The first product image for the configured viewtype and this variation value.
        type: Image
        required: false
      imageSwatch:
        description: The first product image for the configured viewtype and this variation value (typically the swatch image).
        type: Image
        required: false
      name:
        description: The localized display name of the variation value.
        type: string
        required: false
        example: "Red"
      orderable:
        description: A flag indicating whether at least one variant with this variation attribute value is available to sell.
        type: boolean
        required: false
        example: true
      value:
        description: The actual variation value.
        minLength: 1
        type: string
        example: "Red"
  VariationGroup:
    description: Document representing a variation group.
    properties:
      orderable:
        description: A flag indicating whether the variation group is orderable.
        type: boolean
        example: true
      price:
        description: The sales price of the variation group.
        type: number
        format: double
        example: 25.99
      productId:
        description: The ID (SKU) of the variation group.
        maxLength: 100
        minLength: 1
        type: string
        example: "93485793"
      variationValues:
        description: The actual variation attribute ID - value pairs.
        type: object
        properties:
          //:
            type: string

/organizations/{organizationId}:
  type: CommerceCloudStandards.Organization
  /customers:
    post:
      description: Registers a new customer. The mandatory data are the credentials, profile last name, and email. This requires a JSON Web Token (JWT) which needs to be obtained using the POST /customers/auth API with type "guest".
      displayName: registerCustomer
      is:
        - CommerceCloudStandards.SiteSpecific:
        - ApiStandards.RateLimited3:
            responseStatus: 200
            responseStatus2: 400
            responseStatus3: 401
        - CustomerTraits.BadRequest
        - CustomerTraits.CustomerAuthenticationFailed
      responses:
        '200':
          description: Success
          body:
            application/json:
              type: Customer    
              examples:
                customer: !include Examples/Customer.raml
      body:
        application/json:
          type: AuthRequest
          (oas-body-name): body
          example: !include Examples/CustomerAuthRequest.raml
      securedBy:
        - ShopperJWT
      (oas-tags):
        - customers
    /auth:
      delete:
        description: Invalidates the JSON Web Token (JWT) provided in the header.
        displayName: invalidateCustomerAuth
        is: 
          - CommerceCloudStandards.SiteSpecific:
          - ApiStandards.RateLimited:
              responseStatus: 204            
        responses:
          '204':
            description: No Content
        securedBy:
          - ShopperJWT
        (oas-tags):
          - customers
      post:
        description: |-
          Obtains a new JSON Web Token (JWT)for a guest or registered
          customer. Tokens are returned as an HTTP Authorization:Bearer response
          header entry. These kinds of request are supported, as specified by the
          type:
          
          Type guest - creates a guest (non-authenticated) customer
          and returns a token for the customer.
          Type credentials - authenticates credentials passed in the
          HTTP Authorization:Basic request header, returning a token for a
          successfully authenticated customer, otherwise it throws an
          AuthenticationFailedException.
          Type session - authenticates the customer (anonymous or registered)
          based on the dwsid and dwsecuretoken cookies. It returns a token for a
          successfully authenticated customer, otherwise it throws an
          AuthenticationFailedException.
          Type refresh - examines the token passed in the HTTP
          Authorization:Bearer request header and when valid returns a new token
          with an updated expiry time.
          

          For a request of type credentials:
          
          Updates profile attributes for the customer (for example,
          "last-visited").
          Handles the maximum number of failed login attempts.
          
          For a request of type session:
          
          The session and corresponding dwsecuretoken must be active and valid. An expired session can't be
          used. The dwsecuretoken cookie must have been used for at least one
          previous HTTPS request with the same dwsid cookie.
          Does not touch profile attributes for the registered customer (for example,
          "last-visited"), since this is not a real login.
          Returns different tokens for multiple requests with the same session ID. Means, there should be
          only one call per session.
          
          
          About JWT The token contains 3 sections:
          
          The header section (specifies token type and algorithm used),
          the payload section (contains customer information, client ID,
          issue, and expiration time),
          finally the signature section records the token signature.
          
          A token is created and returned to the client whenever a registered
          customer logs in (type "credentials") or a guest customer requests it (type
          "guest"). The token is returned in the response header as 
          Authorization: Bearer --token--
          
          The client has to include the token in the request header as 
          Authorization: Bearer --token-- 
          in any follow-up request. The server declines any follow-up requests
          without a token or which cannot be verified based on the token signature
          or expiration time. A token nearing its expiration time should be
          exchanged for a new one (type "refresh").
          
          See "API Usage > JWT" for more details on using JWT as an authentication
          mechanism.
        displayName: authorizeCustomer
        is:
          - CommerceCloudStandards.SiteSpecific:
          - ApiStandards.RateLimited3:
              responseStatus: 200
              responseStatus2: 400
              responseStatus3: 401
          - CustomerTraits.BadRequest
          - CustomerTraits.CustomerAuthenticationFailed
        responses:
          '200':
            headers:
              authorization: 
                type: string
                example: 'Bearer xxxxxxxxxxx-xxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxx'
            description: Success
            body:
              application/json:
                type: Customer
                examples:
                  customer: !include Examples/guestAuth.raml
        headers:
          Authorization:
            description: |-
                              Authorization:Basic for type credentials
                              Authorization:Bearer for type refresh
            type: string
            required: false
        body:
          application/json:
            type: AuthRequest
            (oas-body-name): body
            example:  { 
                "type" : "credentials" 
              }
        securedBy:
          - clientId
        (oas-tags):
          - customers
      /trusted-system:
        post:
          description: |-
            Obtain the JSON Web Token (JWT) for registered customers whose credentials are stored using a third party system. Accepts loginId and clientId, returns a customer object in the response body and the JWT generated against the clientId in the response header.
          displayName: authorizeTrustedSystem
          is:
            - CommerceCloudStandards.SiteSpecific:
            - ApiStandards.RateLimited2:
                responseStatus: 200
                responseStatus2: 401            
            - CustomerTraits.CustomerAuthenticationFailed
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: Customer
                  examples:
                    customer: !include Examples/Customer.raml
          securedBy:
            - OAuth2_0
          body:
            application/json:
              type: TrustedSystemAuthRequest
              (oas-body-name): body
              example: { 
                  "login" : "guest@email.com",
                  "clientId": "abdtkZzH6sqInJGIHNR1yUw90A" 
                }
          (oas-tags):
            - customers
    /password/actions/reset:
      post:
        description: Reset customer password.
        displayName: postResetPassword
        is:
          - CommerceCloudStandards.SiteSpecific:
          - ApiStandards.RateLimited2:
              responseStatus: 200
              responseStatus2: 400
          - CustomerTraits.BadRequest
        responses:
          '200':
            description: Reset password successful.
        securedBy:
            - OAuth2_0
        body:
          application/json:
            type: ResetPasswordRequest
            (oas-body-name): body
            example: !include Examples/ResetPasswordRequest.raml
        (oas-tags):
          - customers
    /password/actions/create-reset-token:
      post:
        description: Create reset password token.
        displayName: postResetPasswordToken
        is:
          - CommerceCloudStandards.SiteSpecific:
          - ApiStandards.RateLimited2:
              responseStatus: 200
              responseStatus2: 400
          - CustomerTraits.BadRequest
        responses:
          '200':
            description: Reset password token generated and returned successfully.
            body:
              application/json:
                type: ResetPasswordToken
                example: !include Examples/ResetTokenResult.raml
        securedBy:
            - OAuth2_0
        body:
          application/json:
            type: ResetPasswordTokenRequest
            (oas-body-name): body
            example: {
              "login": "loginId"
            }
        (oas-tags):
          - customers
    /{customerId}:
      get:
        description: Gets a customer.
        displayName: getCustomer
        is:
          - CommerceCloudStandards.SiteSpecific:
          - ApiStandards.RateLimited3:
              responseStatus: 200
              responseStatus2: 400
              responseStatus3: 404 
          - CustomerTraits.BadRequest
          - CustomerTraits.NotFound
        queryParameters:
          expand:
            type: string
            required: false
            example: "addresses,paymentinstruments"  
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: Customer
                example: !include Examples/Customer.raml
        securedBy:
          - ShopperJWT
        (oas-tags):
          - customers
      patch:
        description: Updates a customer.
        displayName: updateCustomer
        is:
          - CommerceCloudStandards.SiteSpecific:
          - ApiStandards.RateLimited3:
              responseStatus: 200
              responseStatus2: 400
              responseStatus3: 404           
          - CustomerTraits.BadRequest
          - CustomerTraits.NotFound
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: Customer
                examples: 
                  customer: !include Examples/Customer.raml
        securedBy:
          - ShopperJWT
        body:
          application/json:
            type: Customer
            (oas-body-name): body
            example: {
                "customerNo" : "12323465",
                "lastName" : "Doe",
                "email" : "jdoe@yourstore.com",
                "fax" : "+49 03641 78393 343"
              }
        (oas-tags):
          - customers
      uriParameters:
        customerId:
          description: The customer ID.
          minLength: 1
          type: string
          example: abfTEMDZOgi3JPrkHjv9IhoziM
      /addresses:
        get:
          description: |-
            Returns a sorted pageable list of all customer addresses in the address book. The default page size is 10
            customer addresses. The addresses are sorted so that the preferred address is always sorted first, with the remaining
            addresses sorted alphabetically by ID.
          
            When the customer cannot be found, NotFoundException
            is thrown in a case of an agent, or an empty result list is returned in a case of JWT.
          displayName: getCustomerAddresses
          is:
            - CommerceCloudStandards.SiteSpecific:
            - ApiStandards.RateLimited3:
                responseStatus: 200
                responseStatus2: 400
                responseStatus3: 404             
            - CustomerTraits.BadRequest
            - CustomerTraits.NotFound
            - CustomerTraits.offset-paginated:
                maxLimit: 50
                defaultSize: 25
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: CustomerAddressResult
                  examples: 
                    customerAddressResult: !include Examples/CustomerAddressResult.raml
          securedBy:
            - ShopperJWT
          (oas-tags):
            - customers
        post:
          description: Creates a new address with the given name for the given customer.
          displayName: createCustomerAddress
          is:
            - CommerceCloudStandards.SiteSpecific:
            - ApiStandards.RateLimited3:
                responseStatus: 200
                responseStatus2: 400
                responseStatus3: 404 
            - CustomerTraits.BadRequest
            - CustomerTraits.NotFound
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: CustomerAddress
                  examples: 
                    customerAddress: !include Examples/CustomerAddress.raml
          securedBy:
            - ShopperJWT
          body:
            application/json:
              type: CustomerAddress
              (oas-body-name): body
              examples: 
                body: !include Examples/CustomerAddress.raml
          (oas-tags):
            - customers
        /{addressName}:
          get:
            description: Retrieves a customer's address by address name.
            displayName: getCustomerAddress
            is:
              - CommerceCloudStandards.SiteSpecific:
              - ApiStandards.RateLimited3:
                  responseStatus: 200
                  responseStatus2: 400
                  responseStatus3: 404
              - CustomerTraits.BadRequest
              - CustomerTraits.NotFound
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: CustomerAddress
            securedBy:
              - ShopperJWT
          delete:
            description: Deletes a customer's address by address name.
            displayName: removeCustomerAddress
            is:
              - CommerceCloudStandards.SiteSpecific:
              - ApiStandards.RateLimited3:
                  responseStatus: 204
                  responseStatus2: 400
                  responseStatus3: 404
              - CustomerTraits.BadRequest
              - CustomerTraits.NotFound
            responses:
              '204':
                description: No Content
            securedBy:
              - ShopperJWT
            (oas-tags):
              - customers
          patch:
            description: Updates a customer's address by address name.
            displayName: updateCustomerAddress
            is:
              - CommerceCloudStandards.SiteSpecific:
              - ApiStandards.RateLimited3:
                  responseStatus: 200
                  responseStatus2: 400
                  responseStatus3: 404
              - CustomerTraits.BadRequest
              - CustomerTraits.NotFound
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: CustomerAddress
                    examples: 
                      customerAddress: !include Examples/CustomerAddress.raml
            securedBy:
              - ShopperJWT
            body:
              application/json:
                type: CustomerAddress
                (oas-body-name): body
                examples: 
                  body: !include Examples/CustomerAddress.raml
            (oas-tags):
              - customers
          uriParameters:
            addressName:
              description: The name of the address to update.
              maxLength: 256
              minLength: 1
              type: string
              example: homeAddress
    
      /baskets:
        get:
          description: Gets the baskets of a customer.
          displayName: getCustomerBaskets
          is:
            - CommerceCloudStandards.SiteSpecific:
            - ApiStandards.RateLimited3:
                responseStatus: 200
                responseStatus2: 400
                responseStatus3: 404
            - CustomerTraits.BadRequest
            - CustomerTraits.NotFound
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: BasketsResult
                  examples: 
                    basketsResult: !include Examples/CustomerBasketsResult.raml
          securedBy:
            - ShopperJWT
          (oas-tags):
            - customers
      /orders:
        get:
          description: Returns a pageable list of all customer's orders. The default page size is 10.
          displayName: getCustomerOrders
          is:
            - CommerceCloudStandards.SiteSpecific:
            - ApiStandards.RateLimited3:
                responseStatus: 200
                responseStatus2: 400
                responseStatus3: 404
            - CustomerTraits.BadRequest
            - CustomerTraits.NotFound
            - CustomerTraits.offset-paginated:
                maxLimit: 50
                defaultSize: 10
          queryParameters:
            crossSites:
              type: boolean
              required: false
              example: false
            from:
              type: string
              required: false
              example: 2012-10-31 08:46
            until:
              type: string
              required: false
              example: 2012-10-31 08:46
            status:
              type: string
              required: false
              example: new  
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: CustomerOrderResult
                  examples: 
                    customerOrderResult: !include Examples/CustomersOrdersResult.raml
          securedBy:
            - ShopperJWT
          (oas-tags):
            - customers
      /password:
        put:
          description: Updates the customer's password.
          displayName: updateCustomerPassword
          is:
            - CommerceCloudStandards.SiteSpecific:
            - ApiStandards.RateLimited3:
                responseStatus: 204
                responseStatus2: 400
                responseStatus3: 404
            - CustomerTraits.BadRequest
            - CustomerTraits.NotFound
          responses:
            '204':
              description: No Content
          body:
            application/json:
              type: PasswordChangeRequest
              (oas-body-name): body
              example: {
                  "currentPassword": "01dpass", 
                  "password": "newpass"
                }
          securedBy:
            - ShopperJWT
          (oas-tags):
            - customers
      /payment-instruments:
        get:
          description: |-
            Gets customer payment instruments for an customer. Can be limited to a specific payment
            method by providing the query parameter paymentMethodId. 
            
            When the customer cannot be found NotFoundException
            is thrown in a case of an agent, but an empty result list is returned in a case of JWT.
          displayName: getCustomerPaymentInstruments
          is:
            - CommerceCloudStandards.SiteSpecific:
            - ApiStandards.RateLimited3:
                responseStatus: 200
                responseStatus2: 400
                responseStatus3: 404
            - CustomerTraits.BadRequest
            - CustomerTraits.NotFound
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: CustomerPaymentInstrumentResult
                  examples: 
                    customerPaymentInstrumentResult: !include Examples/CustomerPaymentInstrumentResult.raml
          securedBy:
            - ShopperJWT
          (oas-tags):
            - customers
        post:
          description: Adds a payment instrument to the customer information.
          displayName: createCustomerPaymentInstrument
          is:
            - CommerceCloudStandards.SiteSpecific:
            - ApiStandards.RateLimited3:
                responseStatus: 200
                responseStatus2: 400
                responseStatus3: 404
            - CustomerTraits.BadRequest
            - CustomerTraits.NotFound
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: CustomerPaymentInstrument
                  examples: 
                    customerPaymentInstrument: !include Examples/CustomerPaymentInstrument.raml
          securedBy:
            - ShopperJWT
          body:
            application/json:
              type: CustomerPaymentInstrumentRequest
              (oas-body-name): body
              examples: 
                customerPaymentInstrumentRequest: !include Examples/CustomerPaymentInstrumentRequest.raml
          (oas-tags):
            - customers
        /{paymentInstrumentId}:
          delete:
            description: Deletes a customer's payment instrument.
            displayName: deleteCustomerPaymentInstrument
            is:
              - CommerceCloudStandards.SiteSpecific:
              - ApiStandards.RateLimited3:
                  responseStatus: 204
                  responseStatus2: 400
                  responseStatus3: 404
              - CustomerTraits.BadRequest
              - CustomerTraits.NotFound
            responses:
              '204':
                description: No Content
            securedBy:
              - ShopperJWT
            (oas-tags):
              - customers
          get:
            description: Retrieves a customer's payment instrument by its ID.
            displayName: getCustomerPaymentInstrument
            is:
              - CommerceCloudStandards.SiteSpecific:
              - ApiStandards.RateLimited3:
                  responseStatus: 200
                  responseStatus2: 400
                  responseStatus3: 404
              - CustomerTraits.BadRequest
              - CustomerTraits.NotFound
            responses:
              200:
                description: Success
                body:
                  application/json:
                    type: CustomerPaymentInstrument
                    example: !include Examples/CustomerPaymentInstrument.raml
            securedBy:
              - ShopperJWT
            (oas-tags):
              - customers      
          uriParameters:
            paymentInstrumentId:
              description: The ID of the payment instrument to be retrievedCustomer.
              minLength: 1
              type: string
      /product-lists:
        get:
          description: Returns all customer product lists.
          displayName: getCustomerProductLists
          is:
            - CommerceCloudStandards.SiteSpecific:
            - ApiStandards.RateLimited3:
                responseStatus: 200
                responseStatus2: 400
                responseStatus3: 404
            - CustomerTraits.BadRequest
            - CustomerTraits.NotFound
          queryParameters:
            expand:
              type: array
              items:
                type: string
              required: false 
              example: [product, images, availability] 
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: CustomerProductListResult
                  examples: 
                    customerProductListResult: !include Examples/CustomerProductListResult.raml
          securedBy:
            - ShopperJWT
          (oas-tags):
            - customers
        post:
          description: Creates a customer product list.
          displayName: createCustomerProductList
          is:
            - CommerceCloudStandards.SiteSpecific:
            - ApiStandards.RateLimited3:
                responseStatus: 200
                responseStatus2: 400
                responseStatus3: 404
            - CustomerTraits.BadRequest
            - CustomerTraits.NotFound
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: CustomerProductList
                  examples: 
                    customerProductList: !include Examples/CustomerProductList.raml
          securedBy:
            - ShopperJWT
          body:
            application/json:
              type: CustomerProductList
              examples: 
                customerProductList: !include Examples/CustomerProductListRequest.raml
              (oas-body-name): body
          (oas-tags):
            - customers
        /{listId}:
          delete:
            description: Deletes a customer product list.
            displayName: deleteCustomerProductList
            is:
              - CommerceCloudStandards.SiteSpecific:
              - ApiStandards.RateLimited3:
                  responseStatus: 204
                  responseStatus2: 400
                  responseStatus3: 404
              - CustomerTraits.BadRequest
              - CustomerTraits.NotFound
            responses:
              '204':
                description: No Content
            securedBy:
              - ShopperJWT
            (oas-tags):
              - customers
          get:
            description: Returns a customer product list of the given customer.
            displayName: getCustomerProductList
            is:
              - CommerceCloudStandards.SiteSpecific:
              - ApiStandards.RateLimited3:
                  responseStatus: 200
                  responseStatus2: 400
                  responseStatus3: 404
              - CustomerTraits.BadRequest
              - CustomerTraits.NotFound
            queryParameters:
              expand:
                type: array
                items:
                  type: string
                required: false  
                example: [product, images, availability]
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: CustomerProductList
                    examples: 
                      customerProductList: !include Examples/CustomerProductList.raml
            securedBy:
              - ShopperJWT
            (oas-tags):
              - customers
          patch:
            description: Changes a product list. Changeable properties are the name, description, and if the list is public.
            displayName: updateCustomerProductList
            is:
              - CommerceCloudStandards.SiteSpecific:
              - ApiStandards.RateLimited3:
                  responseStatus: 200
                  responseStatus2: 400
                  responseStatus3: 404
              - CustomerTraits.BadRequest
              - CustomerTraits.NotFound
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: CustomerProductList
                    examples: 
                      customerProductList: !include Examples/CustomerProductList.raml
            securedBy:
              - ShopperJWT
            body:
              application/json:
                type: CustomerProductList
                example: {
                    "description": "Description"
                  }
                (oas-body-name): body
            (oas-tags):
              - customers
          uriParameters:
            listId:
              description: The product list ID.
              maxLength: 28
              minLength: 1
              type: string
              example: bcedkiWbxCM2MaaadkRhB2IBzM
          /items:
            get:
              description: |- 
                Returns a pageable list of all items of a customer's product list. The default page size is 10. 
              displayName: getCustomerProductListItems
              is:
                - CommerceCloudStandards.SiteSpecific:
                - ApiStandards.RateLimited3:
                    responseStatus: 200
                    responseStatus2: 400
                    responseStatus3: 404
                - CustomerTraits.BadRequest
                - CustomerTraits.NotFound
                - CustomerTraits.offset-paginated:
                    maxLimit: 50
                    defaultSize: 10
              queryParameters:
                expand:
                  type: array
                  items:
                    type: string
                  required: false
                  example: [product, images, availability]
              responses:
                '200':
                  description: Success
                  body:
                    application/json:
                      type: CustomerProductListItemResult
                      examples: 
                        customerProductListItemResult: !include Examples/CustomerProductListItemResult.raml
              securedBy:
                - ShopperJWT
              (oas-tags):
                - customers
            post:
              description: |-
                Adds an item to the customer's product list. Considered values from the request body are:
                
                type: A valid type, mandatory. This is the type of the item to be added to the customer's product.
                list.
                priority: This is the priority of the item to be added to the customer's product list.
                public: This is the flag whether the item to be added to the customer's product list is public.
                product_id: A valid product ID, used for product item type only. This is the ID (SKU)
                of the product related to the item to be added to the customer's product list. It is mandatory for
                product item type, and it must be a valid product id, otherwise
                ProductListProductIdMissingException or ProductListProductNotFoundException
                will be thrown.
                quantity: Used for product item type only. This is the quantity of the item to be
                added to the customer's product list.
                custom properties in the form c_<CUSTOM_NAME>: The custom property must correspond to a custom
                attribute (<CUSTOM_NAME>) defined for ProductListItem. The value of this property must be valid for the
                type of custom attribute defined for ProductListItem.
                
              displayName: createCustomerProductListItem
              is:
                - CommerceCloudStandards.SiteSpecific:
                - ApiStandards.RateLimited3:
                    responseStatus: 200
                    responseStatus2: 400
                    responseStatus3: 404
                - CustomerTraits.BadRequest
                - CustomerTraits.NotFound
              responses:
                '200':
                  description: Success
                  body:
                    application/json:
                      type: CustomerProductListItem
                      examples: 
                        customerProductListItem: !include Examples/CustomerProductListItem.raml
              securedBy:
                - ShopperJWT
              body:
                application/json:
                  type: CustomerProductListItem
                  examples: 
                      customerProductListItem: !include Examples/CustomerProductListItemRequest.raml
                  (oas-body-name): body
              (oas-tags):
                - customers
            /{itemId}:
              delete:
                description: Removes an item from a customer product list.
                displayName: deleteCustomerProductListItem
                is:
                  - CommerceCloudStandards.SiteSpecific:
                  - ApiStandards.RateLimited2:
                      responseStatus: 204
                      responseStatus2: 404
                  - CustomerTraits.NotFound
                responses:
                  '204':
                    description: No Content
                securedBy:
                  - ShopperJWT
                (oas-tags):
                  - customers
              get:
                description: Returns an item of a customer product list.
                displayName: getCustomerProductListItem
                is:
                  - CommerceCloudStandards.SiteSpecific:
                  - ApiStandards.RateLimited3:
                      responseStatus: 200
                      responseStatus2: 400
                      responseStatus3: 404
                  - CustomerTraits.BadRequest              
                  - CustomerTraits.NotFound
                responses:
                  '200':
                    description: Success
                    body:
                      application/json:
                        type: CustomerProductListItem
                        example: !include Examples/CustomerProductListItem.raml
                securedBy:
                  - ShopperJWT
                queryParameters:
                  expand:
                    type: array
                    items:
                      type: string
                    required: false
                    example: [product, images, availability]   
                (oas-tags):
                  - customers                
              patch:
                description: |-
                  Updates an item of a customer's product list.
                  Considered values from the request body are:
                  
                  priority: This is the priority of the customer's product list item.
                  public: This is the flag whether the customer's product list item is public.
                  quantity: This is the quantity of
                  the customer's product list item. Used for product item type only. 
                  custom properties in the form c_<CUSTOM_NAME>: The custom property
                  must correspond to a custom attribute (<CUSTOM_NAME>) defined for ProductListItem.
                  The value of this property must be valid for the type of custom attribute defined for ProductListItem.
                  
                displayName: updateCustomerProductListItem
                is:
                  - CommerceCloudStandards.SiteSpecific:
                  - ApiStandards.RateLimited2:
                      responseStatus: 200
                      responseStatus2: 404
                  - CustomerTraits.NotFound
                responses:
                  '200':
                    description: Success
                    body:
                      application/json:
                        type: CustomerProductListItem
                        examples: 
                          customerProductListItem: !include Examples/CustomerProductListItem.raml
                securedBy:
                  - ShopperJWT
                body:
                  application/json:
                    type: CustomerProductListItem
                    examples: 
                      customerProductListItem: !include Examples/CustomerProductListItemRequest.raml
                    (oas-body-name): body
                (oas-tags):
                  - customers
              uriParameters:
                itemId:
                  description: The ID of the product list item to update.
                  maxLength: 28
                  minLength: 1
                  type: string
                  example: "nikon-d90-wlens"
  /product-lists:
    get:
      description: Retrieves all public product lists as defined by the given search term (for example, email, first name, or last name).
      displayName: getPublicProductListsBySearchTerm
      queryParameters:
        email:
          description: The email address of the customer the product lists belong to.
          type: string
          required: false
          example: ltest@test.org
        firstName:
          description: The first name of the customer the product lists belong to.
          type: string
          required: false
          example : ltest
        lastName:
          description: The last name of the customer the product lists belong to.
          type: string
          required: false
          example: test
      is:
        - CommerceCloudStandards.SiteSpecific:
        - ApiStandards.RateLimited4:
            responseStatus: 200
            responseStatus2: 400
            responseStatus3: 401
            responseStatus4: 404
        - CustomerTraits.BadRequest
        - CustomerTraits.NotFound
        - CustomerTraits.Unauthorized
      responses:
        '200':
          description: Success
          body:
            application/json:
              type: PublicProductListResult
              examples: 
                publicProductListResult: !include Examples/productLists-result-example.raml
      securedBy:
        - ShopperJWT
      (oas-tags):
        - product-lists
    /{listId}:
      get:
        description: Retrieves a public product list by ID.
        displayName: getPublicProductList
        queryParameters:
          expand:
            type: array
            items:
              type: string
            required: false
            example: [items,product,images,availability]
        is:
          - CommerceCloudStandards.SiteSpecific:
          - ApiStandards.RateLimited4:
              responseStatus: 200
              responseStatus2: 400
              responseStatus3: 401
              responseStatus4: 404
          - CustomerTraits.BadRequest
          - CustomerTraits.NotFound
          - CustomerTraits.Unauthorized
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: PublicProductList
                examples: 
                  publicProductList:  !include Examples/productListsID-result-example.raml
        securedBy:
          - ShopperJWT
        (oas-tags):
          - product-lists
      uriParameters:
        listId:
          description: The ID of the list.
          maxLength: 28
          minLength: 1
          type: string
          example: ad3276983c7a778ee4644cfa93
      /items:
        get:
          description: Retrieves the items of a public product list.
          displayName: getProductListItems
          queryParameters:
            expand:
              type: array
              items:
                type: string
              required: false
              example: [product, images, availability]
          is:
            - CommerceCloudStandards.SiteSpecific:
            - ApiStandards.RateLimited4:
                responseStatus: 200
                responseStatus2: 400
                responseStatus3: 401
                responseStatus4: 404
            - CustomerTraits.BadRequest
            - CustomerTraits.NotFound
            - CustomerTraits.Unauthorized      
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: PublicProductListItemResult
                  examples: 
                    publicProductListItemResult : !include Examples/productListsIDItems-result-example.raml
          securedBy:
            - ShopperJWT
          (oas-tags):
            - product-lists
        /{itemId}:
          get:
            description: Retrieves an item from a public product list.
            displayName: getProductListItem
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: PublicProductListItem
            queryParameters:
              expand:
                type: array
                items:
                  type: string
                required: false
                example: [product, images, availability]
            is:
              - CommerceCloudStandards.SiteSpecific:
              - ApiStandards.RateLimited4:
                  responseStatus: 200
                  responseStatus2: 400
                  responseStatus3: 401
                  responseStatus4: 404
              - CustomerTraits.BadRequest
              - CustomerTraits.NotFound
              - CustomerTraits.Unauthorized      
            securedBy:
              - ShopperJWT
            (oas-tags):
              - product_lists
          uriParameters:
            itemId:
              description: The ID of the item.
              minLength: 1
              type: string

                      