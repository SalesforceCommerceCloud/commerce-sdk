
import { StaticClient, BaseClient, ClientConfig, ResponseError } from "@commerce-apps/core";
import _ from "lodash";

import {
{{#each dataTypes}}
    {{#if (isTypeDefinition .)}}
        {{getValue name}},
    {{/if}}
{{/each}}
} from "./{{apiSpec}}.types";

export {
{{#each dataTypes}}
    {{#if (isTypeDefinition .)}}
        {{getValue name}},
    {{/if}}
{{/each}}
} from "./{{apiSpec}}.types";

/**
* Instantiate a Client object with desired ClientConfig to perform operations
* available in this API client.
*
* Note: When performing operations that require ShopperJWT authentication, an
* Authorization header containing a JWT can be added to the headers field of the
* ClientConfig object. The Client will use that Authorization header for all the
* operations it is used to perform.
*/
export class Client extends BaseClient {
  constructor(config: ClientConfig) {
    super(config);

    if (!!!config.baseUri) {
      this.clientConfig.baseUri = "{{getBaseUri models.[0] }}";
    }

  }

{{#each models}}
    {{> operationsPartial model=. }}
{{/each}}

}

export default Client;
export { ClientConfig };
