
import { ShopperToken, stripBearer, ResponseError } from "@commerce-apps/core"
import  * as sdk from "./"

//type of the input parameter of auth function
type authFuncParamType = Parameters<typeof sdk.{{shopperAuthClient}}.prototype.{{shopperAuthApi}}>[0];

/**
 * @description This wraps the parameters for the authorization call to retrieve a token.
 * That call can be made directly, this is here just for convenience
 * @example
 * const clientConfig: ClientConfig = {
    parameters: {
        clientId: "XXXXXX",
        organizationId: "XXXX",
        shortCode: "XXX",
        siteId: "XX"
    }
   };
   helpers.getShopperToken(clientConfig, { type: "guest" })
 * @param clientConfig Client configuration properties
 * @param body Post body required for authorization
 * @returns {Promise<ShopperToken>}
 */
export async function getShopperToken (
    clientConfig: sdk.ClientConfig,
    body: authFuncParamType["body"]
): Promise<ShopperToken>{
    let client = new sdk.{{shopperAuthClient}}(clientConfig);

    const response: Response = (await client.{{shopperAuthApi}}({
        body: body
    }, true));
    if (!response.ok) {
        throw new ResponseError(response);
    }
    return new ShopperToken(stripBearer(response.headers.get("Authorization")));
}
