
import { ShopperToken, stripBearer } from "@commerce-apps/core"
import  * as sdk from "./"


const shopperAuthApi = sdk.{{shopperAuthClient}}.Client.prototype.{{shopperAuthApi}};

/**
 * @description This wraps the parameters for the authCall to retrieve a token. 
 *  That call can be called directly, this is here just for convenience
 * @export
 * @template T A template used to extend the parameters of the shopper authentication call
 * @param clientConfig Client configuration properties
 * @param options Properties to get the auth token. Properties that are already set in clientConfig can be omitted
 * @returns {Promise<ShopperToken>}
 */
export async function getAuthToken<T extends typeof shopperAuthApi>(
        clientConfig: sdk.ClientConfig,
        options: T extends (arg: infer A) => any ? A : never
    ): Promise<ShopperToken>{

        let client = new sdk.{{shopperAuthClient}}.Client(clientConfig);

        options.rawResponse = true;

        let response = await client.authorizeCustomer(options) as Response;
        if (!response.ok) {
                throw new Error(`${response.status}: ${response.statusText}`)
        }
        
        return new ShopperToken(stripBearer(response.headers.get("Authorization")));
}
