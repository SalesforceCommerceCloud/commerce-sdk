
import { StaticClient, BaseClient, ClientConfig, Response, ResponseError } from "@commerce-apps/core";
import _ from "lodash";
import { OperationOptions } from "retry";

export namespace {{capitalize metadata.specName}} {
  {{#each dataTypes}}
      {{#if (isTypeDefinition .)}}
      export type {{getValue name}} = {{> dtoPartial typeDto=.}}
      {{/if}}
  {{/each}}
}

/**
* [{{{metadata.name}}}](https://developer.commercecloud.com/s/api-details/{{{getObjectIdByAssetId metadata.assetId}}})
* ==================================
*
* *{{metadata.description}}*<br />
*
* Simple example:
*
* ```typescript
*   import { {{pascalcase metadata.categories.[CC API Family].[0]}}, ClientConfig } from "commerce-sdk";
*   // or
*   const { {{pascalcase metadata.categories.[CC API Family].[0]}}, ClientConfig } = require("commerce-sdk");
*
*   const clientConfig: ClientConfig = { ... };
*   const {{metadata.specName}}Client = new {{pascalcase metadata.categories.[CC API Family].[0]}}.{{capitalize metadata.specName}}(clientConfig);
* ```
*
* Example with shopper auth
* ```typescript
* const clientConfig: ClientConfig = {
*   parameters: {
*     clientId: "XXXXXX",
*     organizationId: "XXXX",
*     shortCode: "XXX",
*     siteId: "XX"
*   }
* };
* token = await helpers.getShopperToken(clientConfig, { type: "guest" });
* clientConfig.headers["authorization"] = token.getBearerHeader();
* const {{metadata.specName}}Client = new {{pascalcase metadata.categories.[CC API Family].[0]}}.{{capitalize metadata.specName}}(clientConfig);
* ```
*
* <span style="font-size:.7em; display:block; text-align: right">
* API Version: {{metadata.version}}<br />
* Last Updated: {{metadata.updatedDate}}<br />  
* </span>
{{#if (eq (lowercase metadata.categories.[CC Version Status].[0]) "beta")}}
* @beta 
* {{/if}}
* 

*/
export class {{capitalize metadata.specName}} extends BaseClient {
  constructor(config: ClientConfig) {
    super(config);

    if (!!!config.baseUri) {
      this.clientConfig.baseUri = "{{getBaseUriFromDocument apiModel}}";
    }

  }

  {{> operationsPartial model=.}}

}
