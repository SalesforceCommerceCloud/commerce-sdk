#%RAML 1.0
title: Shopper Customers
version: v1
mediaType: application/json
protocols: HTTPS
baseUri: https://{shortCode}.api.commercecloud.salesforce.com/customer/shopper-customers/v1
description: Let's customers to register, get authorization tokens, reset passwords, add/delete payment instruments, set up a wish list, add, delete, or modify addresses, and so on. 

types:
  Customer:
    description: Person or entity who shops on Commerce Cloud storefronts by creating a shopper account in Commerce Cloud.
    properties:
      addresses:
        description: The customer's addresses.
        type: array
        items:
          type: CustomerAddress
        required: false
      authType:
        description: |-
          The customer's authorization type (indicates if the customer is a guest
           or a registered customer).
        type: string
        enum:
          - guest
          - registered
        required: false
        example: registered
      birthday:
        description: The customer's birthday.
        type: date-only
        required: false
      companyName:
        description: The customer's company name.
        maxLength: 256
        type: string
        required: false
        example: "Acme"
      creationDate:
        description: Returns the value of attribute 'creationDate'.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      customerId:
        description: |-
          The customer's number (ID). Both registered and guest customers have a
           customer ID.
        maxLength: 28
        type: string
        required: false
        example: "dfuisydifu2342usyf"
      customerNo:
        description: |-
          The customer's number (ID). Only a registered customer has a customer
           number.
        maxLength: 100
        type: string
        required: false
        example: "D0000123"
      email:
        description: The customer's email address.
        maxLength: 256
        type: string
        required: false
        example: "rustin.peece@myemail.com"
      enabled:
        description: A flag indicating whether this customer is enabled and can log in.
        type: boolean
        required: false
        example: true
      fax:
        description: The customer's fax number. The length is restricted to 32 characters.
        maxLength: 32
        type: string
        required: false
        example: 555-555-5555
      firstName:
        description: The customer's first name.
        maxLength: 256
        type: string
        required: false
        example: "Rustin"
      gender:
        description: The customer's gender.
        type: integer
        format: int32
        enum:
          - 1
          - 2
        required: false
        example: 1
      jobTitle:
        description: The customer's job title.
        maxLength: 256
        type: string
        required: false
        example: "Boss"
      lastLoginTime:
        description: The time when the customer last logged in.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      lastModified:
        description: Returns the value of attribute 'lastModified'.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      lastName:
        description: The customer's last name.
        maxLength: 256
        type: string
        required: false
        example: "Peece"
      lastVisitTime:
        description: The time when the customer last visited.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      login:
        description: The customer's login.
        maxLength: 256
        type: string
        required: false
        example: "rpeece"
      note:
        description: The customer's note.
        type: string
        required: false
        example: "customer-note"
      paymentInstruments:
        description: The customer's payment instruments.
        type: array
        items:
          type: CustomerPaymentInstrument
        required: false
      phoneBusiness:
        description: The customer's business phone number.
        maxLength: 32
        type: string
        required: false
        example: 555-555-5555
      phoneHome:
        description: The customer's home phone number.
        maxLength: 32
        type: string
        required: false
        example: 555-555-5555
      phoneMobile:
        description: The customer's mobile phone number.
        maxLength: 32
        type: string
        required: false
        example: 555-555-5555
      preferredLocale:
        description: The customer's preferred locale.
        type: string
        required: false
        example: "us-en"
      previousLoginTime:
        description: The time when the customer previously logged in.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      previousVisitTime:
        description: The time when the customer last visited the store.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      salutation:
        description: The salutation to use for the customer.
        maxLength: 256
        type: string
        required: false
        example: "Mr."
      secondName:
        description: The customer's second name.
        maxLength: 256
        type: string
        required: false
        example: "Peece"
      suffix:
        description: The customer's suffix (for example, "Jr." or "Sr.").
        maxLength: 256
        type: string
        required: false
        example: "Jr."
      title:
        description: The customer's title (for example, "Mrs" or "Mr").
        maxLength: 256
        type: string
        required: false
        example: "Mr."
  CustomerAddress:
    description: Address that is associated with a shopper (billing, shipping, mailing, and so on).
    properties:
      address1:
        description: The first address.
        maxLength: 256
        type: string
        required: false
        example: "10 Presidential Way"
      address2:
        description: The second address.
        maxLength: 256
        type: string
        required: false
        example: "Apt-616"
      addressId:
        description: The ID of the address as specified by account owner.
        maxLength: 256
        type: string
        example: "Home"
      city:
        description: The city.
        maxLength: 256
        type: string
        required: false
        example: "Gotham"
      companyName:
        description: The company name.
        maxLength: 256
        type: string
        required: false
        example: "PymTech"
      countryCode:
        description: The two-letter ISO 3166-1 (Alpha-2) country code.
        maxLength: 2
        type: string
        enum:
          - US
          - FR
          - IT
          - JP
          - CN
          - GB
      creationDate:
        description: Returns the value of attribute 'creationDate'.
        type: datetime
        required: false
        example: 9999-12-31T17:12:56.670Z
      firstName:
        description: The first name.
        maxLength: 256
        type: string
        required: false
        example: "Rustin"
      fullName:
        description: The full name.
        maxLength: 256
        type: string
        required: false
        example: "Rustin Peece"
      jobTitle:
        description: The job title.
        maxLength: 256
        type: string
        required: false
        example: "Supreme"
      lastModified:
        description: Returns the value of attribute 'lastModified'.
        type: datetime
        required: false
        example: 9999-12-31T17:12:56.670Z
      lastName:
        description: The last name.
        maxLength: 256
        type: string
        example: "Peece"
      phone:
        description: The phone number.
        maxLength: 32
        type: string
        required: false
        example: "555-555-5555"
      postBox:
        description: The post box.
        maxLength: 256
        type: string
        required: false
        example: "12345"
      postalCode:
        description: The postal code.
        maxLength: 256
        type: string
        required: false
        example: "N5"
      preferred:
        description: The preferred attribute.
        type: boolean
        required: false
        example: true
      salutation:
        description: The salutation.
        maxLength: 256
        type: string
        required: false
        example: "Sir"
      secondName:
        description: The second name.
        maxLength: 256
        type: string
        required: false
        example: "Al Coholic"
      stateCode:
        description: The state code.
        maxLength: 256
        type: string
        required: false
        example: "UT"
      suffix:
        description: The suffix.
        maxLength: 256
        type: string
        required: false
        example: "Sr."
      suite:
        description: The suite.
        maxLength: 32
        type: string
        required: false
        example: "100"
      title:
        description: The title.
        maxLength: 256
        type: string
        required: false
        example: "Batman"
  CustomerAddressInfo:
    description: Result document of product list addresses.
    properties:
      addressId:
        description: The ID of the address.
        maxLength: 256
        type: string
        example: "Home"
      title:
        description: The link title.
        type: string
        example: "title"
  CustomerAddressResult:
    description: Result document containing an array of customer addresses.
    properties:
      limit:
        description: The number of returned documents.
        type: integer
        format: int32
        example: 1
      data:
        description: The array of customer address documents.
        type: CustomerAddress[]
      offset:
        description: The zero-based index of the first search hit to include in the result.
        minimum: 0
        type: integer
        format: int32
        example: 0
      total:
        description: The total number of documents.
        type: integer
        format: int32
        example: 3
  CustomerInfo:
    description: Document representing information used to identify a customer.
    properties:
      customerId:
        description: The customer's number (ID).
        maxLength: 100
        type: string
        required: false
        example: "3034s93875939348394hk3348"
      customerName:
        description: The customer's name.
        type: string
        required: false
        example: "Al Coholic"
      customerNo:
        description: The customer's number (ID).
        maxLength: 100
        type: string
        (label):
          default: Customer No.
        example: "123"
      email:
        description: The customer's email address.
        type: string
        (oas-format): email
        (label):
          default: Email
        example: "myemail@email.com"
  



/organizations/{organizationId}:
  /customers:
    /auth:
      delete:
        description: Invalidates the JSON Web Token (JWT) provided in the header.
        displayName: invalidateCustomerAuth
        responses:
          '204':
            description: No Content
      post:
        description: |-
          Obtains a new JSON Web Token (JWT)for a guest or registered
          customer. Tokens are returned as an HTTP Authorization:Bearer response
          header entry. These kinds of request are supported, as specified by the
          type:
          
          Type guest - creates a guest (non-authenticated) customer
          and returns a token for the customer.
          Type credentials - authenticates credentials passed in the
          HTTP Authorization:Basic request header, returning a token for a
          successfully authenticated customer, otherwise it throws an
          AuthenticationFailedException.
          Type session - authenticates the customer (anonymous or registered)
          based on the dwsid and dwsecuretoken cookies. It returns a token for a
          successfully authenticated customer, otherwise it throws an
          AuthenticationFailedException.
          Type refresh - examines the token passed in the HTTP
          Authorization:Bearer request header and when valid returns a new token
          with an updated expiry time.
          

          For a request of type credentials:
          
          Updates profile attributes for the customer (for example,
          "last-visited").
          Handles the maximum number of failed login attempts.
          
          For a request of type session:
          
          The session and corresponding dwsecuretoken must be active and valid. An expired session can't be
          used. The dwsecuretoken cookie must have been used for at least one
          previous HTTPS request with the same dwsid cookie.
          Does not touch profile attributes for the registered customer (for example,
          "last-visited"), since this is not a real login.
          Returns different tokens for multiple requests with the same session ID. Means, there should be
          only one call per session.
          
          
          About JWT The token contains 3 sections:
          
          The header section (specifies token type and algorithm used),
          the payload section (contains customer information, client ID,
          issue, and expiration time),
          finally the signature section records the token signature.
          
          A token is created and returned to the client whenever a registered
          customer logs in (type "credentials") or a guest customer requests it (type
          "guest"). The token is returned in the response header as 
          Authorization: Bearer --token--
          
          The client has to include the token in the request header as 
          Authorization: Bearer --token-- 
          in any follow-up request. The server declines any follow-up requests
          without a token or which cannot be verified based on the token signature
          or expiration time. A token nearing its expiration time should be
          exchanged for a new one (type "refresh").
          
          See "API Usage > JWT" for more details on using JWT as an authentication
          mechanism.
        displayName: authorizeCustomer
        responses:
          '200':
            headers:
              authorization: 
                type: string
                example: 'Bearer xxxxxxxxxxx-xxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxx'
            description: Success
            body:
              application/json:
                type: Customer
                examples:
                  customer: !include Examples/guestAuth.raml
        headers:
          Authorization:
            description: |-
                              Authorization:Basic for type credentials
                              Authorization:Bearer for type refresh
            type: string
            required: false
        body:
          application/json:
            type: AuthRequest
            example:  { 
                "type" : "credentials" 
              }
  