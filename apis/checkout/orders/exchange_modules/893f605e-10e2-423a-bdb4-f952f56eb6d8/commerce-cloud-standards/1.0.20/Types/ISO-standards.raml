#%RAML 1.0 Library
usage: |-
  This data type library holds fields that have data types that conform to well established standards, such as ISOs. Each should link to the appropriate standards document.

types:
  ISOCurrency:
    description: |-
      A three letter uppercase currency code conforming to the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
    type: string
    pattern: ^[A-Z][A-Z][A-Z]$
    example:
      USD
  NoValue:
    description: A specialized value indicating the lack of definition of a currency, for example, if the value of the monetary value of the currency is an undefined number.
    type: string
    example: N/A
    default: N/A
    enum: 
      - N/A
  Currency:
    description: |-
      A three letter uppercase currency code conforming to the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard, or the string `N/A` indicating that a currency is not applicable.
#    type: ISOCurrency | NoValue
    type: string
  MoneyMnemonic:
    description: |-
      A combination of a Currency and an amount of that Currency.
    type: object
    properties:
      currencyMnemonic?: Currency
      value?:
        description: The amount of money for the given currency.
        type: number
        format: double
        example: 1234.56
  Country:
    description: |-
      A two letter uppercase country code conforming to the [ISO 3166-1](https://www.iso.org/iso-3166-country-codes.html) alpha-2 standard.
    type: string
    pattern: ^[A-Z][A-Z]$
    example:
      US
  Language:
    description: |-
      A two letter lowercase language code conforming to the [ISO 639-1](https://www.iso.org/iso-639-language-codes.html) standard. Additionally, this may be used to submit requests with the header parameter `Accept-Language`, following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766).
    type: string
    pattern: ^[a-z][a-z]$
    example:
      en
  LanguageCountry:
    description: |-
      A concatenated version of the standard Language and Country codes, combined with a hyphen '`-`'.
    type: string
    pattern: ^[a-z][a-z]-[A-Z][A-Z]$
    example: en-US
  Locale:
    description: |-
      A descriptor for a geographical region by both a language and country code. By combining these two, regional differences in a language can be addressed, such as with the request header parameter `Accept-Language` following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766). This can also just refer to a language code, also RFC 2616/1766 compliant, as a default if there is no specific match for a country. Finally, can also be used to define default behavior if there is no locale specified.
#    type: LanguageCountry | Language | DefaultFallback
    type: string
  DefaultFallback:
    description: A specialized value indicating the system default values for locales.
    type: string
    example: default
    default: default
    enum: 
      - default
  L10nString:
    description: |-
      A string with content that can differ by locale. Rather than being stored as an individual value, it is stored as a map of a LocaleCode and the translated value in that locale. 
      
      Acceptable keys are two-character language codes, the language code followed by a hyphen and a two-character country code, or the term default, representing a fallback locale if no other locale could be resolved.
    type: object
    properties:
      /^(default|[a-z]{2}|[a-z]{2}-[A-Za-z]{2})$/:
        type: string
        required: false
    example:
      default: The quick brown fox jumps over the lazy dog.
      en: The quick brown fox jumps over the lazy dog.
      en-US: The quick brown fox jumps over the lazy dog.
      en-CA: The quick brown fox jumps over the lazy dog.
      es: El rápido zorro marrón salta sobre el perro perezoso.
