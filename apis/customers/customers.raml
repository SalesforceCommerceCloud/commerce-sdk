#%RAML 1.0
title: Customers
version: v1
mediaType: application/json
protocols: HTTPS
baseUri: https://{shortCode}.api.commercecloud.salesforce.com/customer/customers/{version}
baseUriParameters:
  shortCode:
    description: A region-specific merchant identifier.
    example: 0dnz6oep
    pattern: ^([a-z0-9]+)(-[a-z0-9]+)*$

description: Contains endpoints for Customer Lists.

uses:
  CustomerListsTraits: data-customer-traits-library.raml
  ApiStandards: exchange_modules/893f605e-10e2-423a-bdb4-f952f56eb6d8/api-standards/1.1.8/api-standards.raml
  CommerceCloudStandards: exchange_modules/893f605e-10e2-423a-bdb4-f952f56eb6d8/commerce-cloud-standards/1.0.15/commerce-cloud-standards.raml

types:
  Credentials:
    description: Document representing the credentials of a customer.
    properties:
      enabled:
        description: A flag indicating whether the customer is enabled and can log in.
        type: boolean
        required: false
        example: true
      locked:
        description: A flag indicating whether the customer account is locked.
        type: boolean
        required: false
        example: false
      login:
        description: The login of the customer.
        maxLength: 256
        type: string
        example: "rustin.peece"
      passwordQuestion:
        description: The password question.
        maxLength: 256
        type: string
        required: false
        example: "Pet Name?"
  Customer:
    description: Person or entity who shops on Commerce Cloud storefronts by creating a shopper account in Commerce Cloud.
    properties:
      birthday:
        description: The customer's birthday.
        type: date-only
        required: false
        example: 1999-12-31
      companyName:
        description: The customer's company name.
        maxLength: 256
        type: string
        required: false
        example: "Acme"
      creationDate:
        description: Returns the value of attribute 'creationDate'.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      credentials:
        description: The customer's credentials.
        type: Credentials
        required: false
      customerId:
        description: |-
          The customer's ID. Both registered and guest customers have a
           customer ID.
        maxLength: 28
        type: string
        required: false
        example: "rustin.peece"
      customerNo:
        description: The customer's number.
        maxLength: 100
        type: string
        example: "D100201"
      email:
        description: The customer's email address.
        maxLength: 256
        type: string
        required: false
        example: "rustin.peece@sample-email.com"
      fax:
        description: |-
          The customer's fax number.
           The length is restricted to 32 characters.
        maxLength: 32
        type: string
        required: false
        example: "555-555-5555"
      firstName:
        description: The customer's first name.
        maxLength: 256
        type: string
        required: false
        example: "Rustin"
      gender:
        description: The customer's gender.
        type: integer
        format: int32
        enum:
          - 1
          - 2
        required: false
        example: 1
      jobTitle:
        description: The customer's job title.
        maxLength: 256
        type: string
        required: false
        example: "Batman"
      lastLoginTime:
        description: The last login time of the customer.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      lastModified:
        description: Returns the value of attribute 'lastModified'.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      lastName:
        description: The customer's last name.
        maxLength: 256
        type: string
        example: "Peece"
      lastVisitTime:
        description: The last visit time of the customer.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      phoneBusiness:
        description: The customer's business phone number.
        maxLength: 32
        type: string
        required: false
        example: "555-555-5555"
      phoneHome:
        description: The customer's home phone number.
        maxLength: 32
        type: string
        required: false
        example: "555-555-5556"
      phoneMobile:
        description: The customer's mobile phone number.
        maxLength: 32
        type: string
        required: false
        example: "555-555-5555"
      preferredLocale:
        description: The customer's preferred locale.
        type: string
        required: false
        example: "en_US"
      previousLoginTime:
        description: The time when the customer previously logged in.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      previousVisitTime:
        description: The time when the customer previously visited the store.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      primaryAddress:
        description: The customers primary or default address.
        type: CustomerAddress
        required: false
      salutation:
        description: The customer's salutation.
        maxLength: 256
        type: string
        required: false
        example: "Mr."
      secondName:
        description: The customer's second name.
        maxLength: 256
        type: string
        required: false
        example: "Peece"
      suffix:
        description: The customer's suffix (for example, "Jr." or "Sr.").
        maxLength: 256
        type: string
        required: false
        example: "Sr."
      title:
        description: The customer's title (for example, "Mrs" or "Mr").
        maxLength: 256
        type: string
        required: false
        example: "Mr."
  CustomerAddress:
    description:  Any address that is associated with a customer (billing, shipping, mailing, and so on). 
    properties:
      address1:
        description: The customer's first address.
        maxLength: 256
        type: string
        required: false
        example: "10 Presidential Way"
      address2:
        description: The customer's second address value.
        maxLength: 256
        type: string
        required: false
        example: "Suite 100"
      addressId:
        description: The customer address ID.
        maxLength: 256
        type: string
        example: "Home"
      city:
        description: The customer's city.
        maxLength: 256
        type: string
        required: false
        example: "Gotham"
      companyName:
        description: The customer's company name.
        maxLength: 256
        type: string
        required: false
        example: "Acme"
      countryCode:
        description: The customer's two-character country code per ISO 3166-1 alpha-2.
        maxLength: 2
        type: string
        enum:
          - US
          - FR
          - IT
          - JP
          - CN
          - GB
        example: "US"
      creationDate:
        description: Returns the value of attribute 'creationDate'.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      etag:
        description: The generated eTag representing the state of the customer address.
        type: string
        required: false
      firstName:
        description: The customer's first name.
        maxLength: 256
        type: string
        required: false
        example: "Rustin"
      fullName:
        description: The concatenation of the customer's first, middle, last names, and suffix.
        type: string
        required: false
        example: "Mr. Rustin Peece Sr."
      jobTitle:
        description: The customer's job title.
        maxLength: 256
        type: string
        required: false
        example: "Batman"
      lastModified:
        description: Returns the value of attribute 'lastModified'.
        type: datetime
        required: false
        example: 9999-12-31T00:00:00.0Z
      lastName:
        description: The customer's last name.
        maxLength: 256
        type: string
        example: "Peece"
      phone:
        description: The customer's phone number.
        maxLength: 32
        type: string
        required: false
        example: "555-555-5555"
      postBox:
        description: The customer's post box.
        maxLength: 256
        type: string
        required: false
        example: "A-12345"
      postalCode:
        description: The customer's postal code.
        maxLength: 256
        type: string
        required: false
        example: "12345"
      salutation:
        description: The customer's salutation.
        maxLength: 256
        type: string
        required: false
        example: "Mr."
      secondName:
        description: The customer's second name.
        maxLength: 256
        type: string
        required: false
        example: "Peece"
      stateCode:
        description: The customer's state.
        maxLength: 256
        type: string
        required: false
        example: "NC"
      suffix:
        description: The customer's suffix.
        maxLength: 256
        type: string
        required: false
        example: "Sr."
      suite:
        description: The customer's suite.
        maxLength: 32
        type: string
        required: false
        example: "100"
      title:
        description: The customer's title.
        maxLength: 256
        type: string
        required: false
        example: "Duke"
  CustomerAddressResult:
    description: Result document containing an array of customer addresses.
    properties:
      limit:
        description: The number of returned documents.
        type: integer
        format: int32
        required: false
        example: 10
      data:
        description: The array of customer address documents.
        type: CustomerAddress[]
        required: false
      offset:
        description: The zero-based index of the first search hit to include in the result.
        minimum: 0
        type: integer
        format: int32
        required: false
        example: 0
      total:
        description: The total number of documents.
        type: integer
        format: int32
        required: false
        example: 10
  CustomerList:
    description: Document representing a customer list.
    properties:
      id:
        description: The ID of the customer list.
        minLength: 1
        type: string
        example: "Site1CustomerList"
  CustomerSearchHit:
    description: Document representing a customer search hit.
    properties:
      data:
        description: List of found customers.
        type: Customer
      relevance:
        description: The hit's relevance score.
        type: number
        format: double
        example: 1.0
  CustomerSearchResult:
    description: Document representing a customer search result.
    type: CommerceCloudStandards.PaginatedSearchResult
    properties:
      hits:
        description: The sorted array of search hits. Can be empty.
        type: CustomerSearchHit[]

/organizations/{organizationId}:
  type: CommerceCloudStandards.Organization
  /customer-lists:
    /{customerListId}/customer-search:
      post:
        description: |-
          Action to search for customers in a customer list.
          The query attribute specifies a complex query that can be used to narrow down the search. These are the list
          of searchable attributes:
            
          | Attribute | Type |
          |-----------|--------|
          | customerNo| String |
          | firstName | String |
          | secondName | String |
          | lastName | String |
          | suffix | String |
          | salutation | String |
          | title | String |
          | fax| String |
          | phoneHome | String |
          | phoneBusiness | String |
          | phoneMobile | String |
          | email | String |
          | gender | Integer |
          | companyName | String |  
          | credentials.login | String |  
          | credentials.enabled | Boolean |  

            
        displayName: searchCustomerInCustomerList
        is:
          - ApiStandards.RateLimited4:
              responseStatus: 200
              responseStatus2: 400
              responseStatus3: 401
              responseStatus4: 404
          - CustomerListsTraits.Unauthorized
          - CustomerListsTraits.BadRequest
          - CustomerListsTraits.NotFound
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: CustomerSearchResult
                examples:
                  result: !include Examples/customerSearchResult.raml
        body:
          application/json:
            type: CommerceCloudStandards.SearchRequest
            examples:
              result: !include Examples/customerSearchBody.raml
        securedBy:
          - CommerceCloudStandards.BearerToken: { scopes: [sfcc.customerlists] }
          - CommerceCloudStandards.AmOAuth2
      uriParameters:
        customerListId:
          description: The customer list ID to search in.
          maxLength: 256
          minLength: 1
          type: string
          example: "Site1CustomerList"
    /{listId}/customers:      
      post:
        description: |
          Action to create a new customer. The customer is created using the specified credentials and customer
          information. This action verifies the following:
          
            - Login acceptance criteria and uniqueness.
            - Mandatory customer properties.
          
          If the action fails to create the customer, it returns a 400 fault with an appropriate message.
        displayName: createCustomerList
        is:
          - ApiStandards.RateLimited4:
              responseStatus: 200
              responseStatus2: 400
              responseStatus3: 401
              responseStatus4: 404
          - CustomerListsTraits.Unauthorized
          - CustomerListsTraits.NotFound
          - CustomerListsTraits.BadRequest
        responses:
          '200':
            description: Success
            body:
              application/json:
                type: Customer
                examples:
                  customers-result: !include Examples/post-customers.raml
        body:
          application/json:
            type: Customer
            examples:
              body: !include Examples/post-customer-body.raml
        securedBy:
          - CommerceCloudStandards.BearerToken: { scopes: [sfcc.customerlists.rw] }
          - CommerceCloudStandards.AmOAuth2
      /{customerNo}:
        delete:
          description: Deletes the customer, including all related information like the customer addresses.
          displayName: deleteCustomerFromCustomerList
          is:
            - ApiStandards.RateLimited4:
                responseStatus: 204
                responseStatus2: 400
                responseStatus3: 401
                responseStatus4: 404
            - CustomerListsTraits.Unauthorized
            - CustomerListsTraits.NotFound
            - CustomerListsTraits.BadRequest
          responses:
            '204': 
              description: No Content
          securedBy:
            - CommerceCloudStandards.BearerToken: { scopes: [sfcc.customerlists.rw] }
            - CommerceCloudStandards.AmOAuth2
        get:
          description: Action to get customer information.
          displayName: getCustomerFromCustomerList
          is:
            - ApiStandards.RateLimited4:
                responseStatus: 200
                responseStatus2: 400
                responseStatus3: 401
                responseStatus4: 404
            - CustomerListsTraits.Unauthorized
            - CustomerListsTraits.NotFound
            - CustomerListsTraits.BadRequest
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: Customer
                  examples:
                    get-customer: !include Examples/post-customers.raml
          securedBy:
            - CommerceCloudStandards.BearerToken: { scopes: [sfcc.customerlists] }
            - CommerceCloudStandards.AmOAuth2
        patch:
          description: |-
            Updates the customer with the specified information. The customer number is allowed to be updated but results in a
            CustomerNumberAlreadyInUseException if there is another customer with the same customer number existing.
          displayName: updateCustomerInCustomerList
          is:
            - ApiStandards.RateLimited4:
                responseStatus: 200
                responseStatus2: 400
                responseStatus3: 401
                responseStatus4: 404
            - CustomerListsTraits.Unauthorized
            - CustomerListsTraits.NotFound
            - CustomerListsTraits.BadRequest
          responses:
            '200':
              description: Success
              body:
                application/json:
                  type: Customer
                  examples:
                    patch-example: !include Examples/post-customers.raml
          body:
            application/json:
              type: Customer
              examples:
                patch-body: !include Examples/post-customer-body.raml
          securedBy:
            - CommerceCloudStandards.BearerToken: { scopes: [sfcc.customerlists.rw] }
            - CommerceCloudStandards.AmOAuth2
        put:
          description: |
            Action to create a new customer. The customer is created using the specified customer number, credentials, and
            customer information. This action verifies the following:
            
            - Login acceptance criteria and uniqueness.
            - Mandatory customer properties.
            
            If the action fails to create the customer, it returns a 400 fault with an appropriate message.
          displayName: createCustomerInCustomerList
          is:
            - ApiStandards.RateLimited5:
                responseStatus: 200
                responseStatus2: 201
                responseStatus3: 400
                responseStatus4: 401
                responseStatus5: 404
            - CustomerListsTraits.Unauthorized
            - CustomerListsTraits.NotFound
            - CustomerListsTraits.BadRequest
          responses:
            '201':
              description: Created
              body:
                application/json:
                  type: Customer
                  examples:
                    put-example: !include Examples/post-customers.raml
            '200':
              description: Success
              body:
                application/json:
                  type: Customer
                  examples:
                    put-example: !include Examples/post-customers.raml
          body:
            application/json:
              type: Customer
              examples:
                put-body: !include Examples/post-customer-body.raml
          securedBy:
            - CommerceCloudStandards.BearerToken: { scopes: [sfcc.customerlists.rw] }
            - CommerceCloudStandards.AmOAuth2
        uriParameters:
          customerNo:
            description: The customer number.
            minLength: 1
            type: string
            example: "D100201"
        /addresses:
          get:
            description: |-
              Action that returns a pageable list of all customer addresses. The
              default page size is 10 customer addresses.
            displayName: getAddressesForCustomerFromCustomerList
            is:
              - ApiStandards.RateLimited4:
                  responseStatus: 200
                  responseStatus2: 400
                  responseStatus3: 401
                  responseStatus4: 404
              - CustomerListsTraits.BadRequest
              - CustomerListsTraits.Unauthorized
              - CustomerListsTraits.NotFound
              - CustomerListsTraits.offset-paginated:
                  maxLimit: 50
                  defaultSize: 25
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: CustomerAddressResult
                    examples:
                      address-example: !include Examples/addresses-get.raml
            securedBy:
              - CommerceCloudStandards.BearerToken: { scopes: [sfcc.customerlists] }
              - CommerceCloudStandards.AmOAuth2
          post:
            description: |-
              The action creates a new customer address with the given address
              information.
            displayName: createAddressForCustomerInCustomerList
            is:
              - ApiStandards.RateLimited4:
                  responseStatus: 200
                  responseStatus2: 400
                  responseStatus3: 401
                  responseStatus4: 404
              - CustomerListsTraits.BadRequest
              - CustomerListsTraits.Unauthorized
              - CustomerListsTraits.NotFound
            responses:
              '200':
                description: Success
                body:
                  application/json:
                    type: CustomerAddress
                    examples:
                      address-example: !include Examples/addresses-post.raml
            body:
              application/json:
                type: CustomerAddress
                examples:
                  address-body: !include Examples/addresses-body.raml
            securedBy:
              - CommerceCloudStandards.BearerToken: { scopes: [sfcc.customerlists.rw] }
              - CommerceCloudStandards.AmOAuth2
          /{addressId}:
            get:
              description: |-
                Action that returns a single customer address from a customer list.
              displayName: getAddressForCustomerFromCustomerList
              is:
                - ApiStandards.RateLimited4:
                    responseStatus: 200
                    responseStatus2: 400
                    responseStatus3: 401
                    responseStatus4: 404
                - CustomerListsTraits.BadRequest
                - CustomerListsTraits.Unauthorized
                - CustomerListsTraits.NotFound
              responses:
                '200':
                  description: Success
                  body:
                    application/json:
                      type: CustomerAddress
                      examples:
                        address-example: !include Examples/address-get.raml
              securedBy:
                - CommerceCloudStandards.BearerToken: { scopes: [sfcc.customerlists] }
                - CommerceCloudStandards.AmOAuth2
            delete:
              description: Action which deletes a customer address.
              displayName: removeAddressForCustomerInCustomerList
              is:
                - ApiStandards.RateLimited4:
                    responseStatus: 204
                    responseStatus2: 400
                    responseStatus3: 401
                    responseStatus4: 404
                - CustomerListsTraits.BadRequest
                - CustomerListsTraits.Unauthorized
                - CustomerListsTraits.NotFound
              responses:
                '204': 
                  description: No Content
              securedBy:
                - CommerceCloudStandards.BearerToken: { scopes: [sfcc.customerlists.rw] }
                - CommerceCloudStandards.AmOAuth2
            patch:
              description: Action which updates an address of a customer with the given address information.
              displayName: updateAddressForCustomerInCustomerList
              is:
                - ApiStandards.RateLimited4:
                    responseStatus: 200
                    responseStatus2: 400
                    responseStatus3: 401
                    responseStatus4: 404
                - CustomerListsTraits.BadRequest
                - CustomerListsTraits.Unauthorized
                - CustomerListsTraits.NotFound
              responses:
                '200':
                  description: Success
                  body:
                    application/json:
                      type: CustomerAddress
                      examples:
                        address: !include Examples/addresses-post.raml
              body:
                application/json:
                  type: CustomerAddress
                  examples:
                    address-body: !include Examples/addresses-body.raml
              securedBy:
                - CommerceCloudStandards.BearerToken: { scopes: [sfcc.customerlists.rw] }
                - CommerceCloudStandards.AmOAuth2
            uriParameters:
              addressId:
                description: The address ID.
                minLength: 1
                type: string
                example: "Home"
