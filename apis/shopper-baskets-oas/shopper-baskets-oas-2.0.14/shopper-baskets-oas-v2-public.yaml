openapi: 3.0.3
info:
  title: Shopper Baskets
  version: v2
  description: |-
    # API Overview

    Shopper Baskets V2 provides all Shopper Basket V1 functionality and adds support for temporary baskets.
    Temporary baskets can perform calculations to generate totals, line items, promotions, and item availability without affecting the shopper’s storefront cart, and you can use those calculations for temporary basket checkout. You can also use a temporary basket for an immediate order request.

    **Note**: `dw.ocapi.shop.basket.beforePOST` hook is no longer supported and is replaced by the `dw.ocapi.shop.basket.beforePOST_v2` hook.

    Use the Shopper Baskets API to create a basket in the B2C Commerce system and populate it with all the data required to ready the basket for checkout.

    To create a basket, start with the [Create basket](https://developer.salesforce.com/docs/commerce/commerce-api/references/shopper-baskets-v2?meta=createBasket) endpoint. The endpoint creates the basket in the B2C Commerce system and returns a JSON representation of the basket with a `basketId` property.

    If you provide the JSON for a prepopulated basket to the [Create basket](https://developer.salesforce.com/docs/commerce/commerce-api/references/shopper-baskets-v2?meta=createBasket) endpoint, you can create a basket using a single API request.

    You can also create a basket and gradually populate it with data using subsequent API requests that reference the same `basketId`. The gradual approach allows you to validate the input data as you go.

    The Shopper Baskets API includes endpoints to populate each part of a basket separately, including:

    -   Billing address
    -   Customer information
    -   Line items
        -   Products
        -   Coupons
        -   Gift certificates
    -   Payment methods
    -   Price books
    -   Shipments
    -   Taxation (for items and the basket itself)

    In addition to creating a basket, the main `/baskets` resource offers endpoints to get, transfer, merge, and delete baskets, depending on the HTTP method that you use and the parameters that you supply. These endpoints can you help you handle a variety of complex scenarios, such as when a user starts shopping as a guest and then logs in before checkout.

    You can also use the main `/baskets` resource to add custom properties to your basket, prefixed with `c_` (example: `c_faxNumber`).

    When your basket is fully populated, you can use its `basketId` property to create an order with the [Shopper Orders API](https://developer.salesforce.com/docs/commerce/commerce-api/references/shopper-orders?meta=Summary).

    For more detail on building baskets, see [Build Baskets and Place Orders](https://developer.salesforce.com/docs/commerce/commerce-api/guide/work-with-baskets-orders.html).

    ## Authentication & Authorization

    The client requesting the basket information must have access to the `/baskets` resource. The Shopper Baskets API requires a shopper access token from the Shopper Login and API Access Service (SLAS).

    For details on how to request a shopper access token from SLAS, see the guest user flows for [public clients](https://developer.salesforce.com/docs/commerce/commerce-api/guide/slas-public-client.html#guest-user) and [private clients](https://developer.salesforce.com/docs/commerce/commerce-api/guide/slas-private-client.html#guest-user) in the SLAS guides.

    You must include the relevant scope(s) in the client ID used to generate the SLAS token. For details, see the  [Authorization Scopes Catalog.](https://developer.salesforce.com/docs/commerce/commerce-api/guide/auth-z-scope-catalog.html)

    The following resources require an Account Manager OAuth token with a client ID:

    -   `/baskets/{basketId}/taxes`
    -   `/baskets/{basketId}/items/{itemId}/taxes`
    -   `/baskets/{basketId}/price-books`

    ## Use Cases

    ### Use Hooks

    For details on working with hooks, see [Extensibility with Hooks.](https://developer.salesforce.com/docs/commerce/commerce-api/guide/extensibility_via_hooks.html)

    ## Basket Calculation

    Unless you’re using [hooks](https://developer.salesforce.com/docs/commerce/commerce-api/guide/extensibility_via_hooks.html), each modification to a basket triggers the following calculations:

    1.  Calculate product prices:
        -   Iterate through the product line items and determine the base price of each using its price model. If multiple price books apply to a product, the lowest price is used.
        -   Calculate product option line item prices using the product option model.
        -   For bonus products, check dependent adjustments in the basket to determine the price.
    2.  Iterate through the gift certificate line items and calculate the price of each by multiplying the base price by the quantity.
    3.  Recalculate for all promotions, adding and removing them as appropriate.
    4.  Apply product-specific shipping costs.
    5.  Calculate the total shipping cost.
    6.  Recalculate for all promotions, adding and removing them as appropriate.
    7.  Calculate prices for products added by the promotion engine.
    8.  Calculate taxes using line item tax class codes.
        -   For internal tax mode, use the tax tables.
        -   For external tax mode, use the tax rates returned by the tax API endpoints.
    9.  Calculate the order’s net, tax, and gross totals by adding up the line totals.

    ## External Taxation

    The B2C Commerce API calculates taxes internally using tax tables. If you want to integrate with a third-party tax provider, or calculate tax on your own, you can use the external taxation feature to add a taxation rate and optional taxation value. When setting a taxation rate, the taxation is calculated for this specific rate. If you pass a value, this value is used as taxation value, as well, without recalculation. To use this feature, set the `taxMode` parameter to `external` when creating the basket.

    When using external taxation, you must set a tax rate either in one request to the `/baskets/{basketId}/taxes` or with separate requests for each line item, using `/baskets/{basketId}/items/{lineItemId}/taxes`.

    If the tax mode of a basket is set to `external`,  a tax item is required for all line items even for zero-tax items to avoid oversights.

    ### External Taxation with Hooks Enabled

    To use external tax calculation with [hooks](https://developer.salesforce.com/docs/commerce/commerce-api/guide/extensibility_via_hooks.html), use the following API methods in the [Calculate Hook](https://developer.salesforce.com/docs/commerce/commerce-api/guide/extensibility_via_hooks.html#calculate-hook):
    - `dw.order.LineItemCtnr#isExternallyTaxed`: Returns true if the basket was created with `taxMode = external`
    - `dw.order.TaxMgr#applyExternalTax`: Applies externally set tax rates to the given basket. Only use when `dw.order.LineItemCtnr#isExternallyTaxed` returns true.

    The following example shows an implementation of external tax calculation with hooks enabled in the [Calculate Hook](https://developer.salesforce.com/docs/commerce/commerce-api/guide/extensibility_via_hooks.html#calculate-hook):

        exports.calculate = function (basket) {
           if ( basket.isExternallyTaxed() )
           {
              TaxMgr.applyExternalTaxation( basket ); // apply the external tax calculation based on the tax rates set by the SCAPI external taxation APIs
           }
           else
           {
              // calculation with tax tables or customization
           }
        }

    ## Temporary Baskets

    A temporary basket is populated with all the data required to ready the basket for checkout, but differs from a shopper basket in the following ways:
    - Basket lifetime is limited to 15 minutes.
    - The shopper can have up to 10 (default 4) temporary baskets, which can be configured via Basket Preferences (Sites -> Merchant Tools -> Basket Preferences) and specifying the preference **Temporary Baskets per Customer**.
    - Available to all shoppers (guest and registered shoppers), as well as agents.

    To create a temporary basket, set the `temporary` parameter to `true` with the [Create basket](https://developer.salesforce.com/docs/commerce/commerce-api/references/shopper-baskets-v2?meta=createBasket) endpoint.
servers:
  - url: https://{shortCode}.api.commercecloud.salesforce.com/checkout/shopper-baskets/v2
    variables:
      shortCode:
        default: shortCode
paths:
  /organizations/{organizationId}/baskets:
    post:
      description: |-
        Creates a new basket.

        The created basket is initialized with default values. Optional JSON data provided in the request body is populated into the created basket. It can be updated with other endpoints offered by the Shopper Baskets API.

        Each customer can have just one open basket. When a basket is created, it is said to be open. It remains open until either an order is created from it or it is deleted.
      operationId: createBasket
      summary: Create a new basket.
      parameters:
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/taxMode'
        - $ref: '#/components/parameters/temporary'
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Basket'
            examples:
              PostBasketBody:
                $ref: '#/components/examples/BasketPost'
        required: true
      responses:
        '200':
          description: The initialized basket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BasketsPostSuccess:
                  $ref: '#/components/examples/examples-BasketPost'
        '400':
          description: |-
            Possible reasons:
            - the provided payment method is invalid or not applicable.
            - the customerId URL parameter does not match the verified customer
            represented by the JSON Web Token (JWT).
            - a new basket cannot be created because the maximum number
            of baskets per customer would be exceeded.
            - a new temporary basket cannot be created because the maximum number
            of temporary baskets per customer would be exceeded.
            - the same shipment ID appeared twice in the body.
            - the coupon number is not provided.
            - a fixed price adjustment was added at order level which is disallowed.
            - a promotion ID was used twice, while attempting to add a price adjustment.
            - a system promotion ID was used as a manual promotion ID, while attempting to add a price adjustment.
            - more than one hundred price adjustments would have been created.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
                CustomerBasketQuotaExceededException:
                  $ref: '#/components/examples/CustomerBasketQuotaExceededException'
                TemporaryBasketQuotaExceededException:
                  $ref: '#/components/examples/TemporaryBasketQuotaExceededException'
        '404':
          description: Thrown if the shipment with the given shipment ID is unknown.
          content:
            application/problem+json:
              examples:
                ShipmentNotFound:
                  $ref: '#/components/examples/ShipmentNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
  /organizations/{organizationId}/baskets/actions/transfer:
    post:
      description: |-
        Transfer the previous shopper's basket to the current shopper by updating the basket's owner. No other values change. You must obtain the shopper authorization token via SLAS and you must provide the ‘guest usid‘ in both the ‘/oauth2/login‘ and ‘/oauth2/token‘ calls while fetching the registered user JWT token.

        A success response contains the transferred basket.

        If the current shopper has an active basket, and the `overrideExisting` request parameter is `false`, then the transfer request returns a BasketTransferException (HTTP status 409). You can proceed with one of these options:
        - Keep the current shopper's active basket.
        - Merge the previous and current shoppers' baskets by calling the `baskets/merge` endpoint.
        - Force the transfer by calling the `baskets/transfer` endpoint again, with the parameter `overrideExisting=true`. Forcing the transfer deletes the current shopper's active basket.
      operationId: transferBasket
      summary: Transfer an existing basket.
      parameters:
        - $ref: '#/components/parameters/overrideExisting'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: The transferred basket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BasketPost:
                  $ref: '#/components/examples/examples-BasketPost'
        '403':
          description: The call returns this error if no SLAS token for a registered shopper is available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ForbiddenMissingPrevCustomerInfo:
                  $ref: '#/components/examples/ForbiddenMissingPrevCustomerInfo'
        '409':
          description: |-
            The call returns this response in either of these cases:
            - The previous shopper has no active basket.
            - The current shopper has an active basket and the `overrideExisting` query parameter was `false` (default value).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                SourceBasketException:
                  $ref: '#/components/examples/SourceBasketException'
                BasketTransferException:
                  $ref: '#/components/examples/BasketTransferException'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/organizationId'
  /organizations/{organizationId}/baskets/actions/merge:
    post:
      description: |-
        Merge data from the previous shopper's basket into the current shopper's active basket and delete the previous shopper's basket. This endpoint doesn't merge Personally Identifiable Information (PII). You must obtain the shopper authorization token via SLAS and you must provide the ‘guest usid‘ in both the ‘/oauth2/login‘ and ‘/oauth2/token‘ calls while fetching the registered user JWT token. After the merge, all basket amounts are recalculated and totaled, including lookups for prices, taxes, shipping, and promotions, unless hooks are enabled.

        The following information is merged:
        - custom attributes on the basket and on all copied records
        - product items
        - gift certificate items
        - coupon items
        - shipments
        - ad-hoc price adjustments

        To control the merging of products that exist in both baskets, use the `productItemMergeMode` parameter. By default, the higher of the two basket quantities is used for each product. Products in both baskets are considered to be the same when all of the following values match (if one product doesn't have a value, the other product is a match only if it also doesn't have that value):
        - shipment
        - productId
        - option values
        - wishlist reference
        - inventory list id
        - gift flag & message
        - ad-hoc price adjustments

        If any of the listed values don't match, then the item in the previous shopper's basket is copied to a new line item in the current shopper's basket. If the listed values all match, but the matching products have different values for any custom attribute, the merged line item keeps the custom attribute value from the current shopper's basket.

        A success response contains the current shopper's active basket. The previous guest shopper's active basket is deleted.

        If the current shopper doesn't have an active basket, and the createDestinationBasket request parameter is false, then the merge request returns a BasketMergeException (HTTP status 409). You can proceed with one of these options:
        - Transfer the previous shopper's active basket to the current logged-in shopper by calling the `baskets/transfer` endpoint.
        - Force the merge by calling the `baskets/merge` endpoint again, with the parameter `createDestinationBasket=true`. Forcing the merge creates a new basket for the current shopper and copies information from the previous shopper's basket into it. Because the merge doesn't copy all basket data, a forced merge is not the same as a transfer. For example, the new basket doesn't contain any Personally Identifiable Information (PII) from the previous basket.

        ### before merge
        | Previous Shopper's Basket, SKU: Quantity, Custom Attributes | Current Shopper's Basket, SKU: Quantity, Custom Attributes  |
        |-------------------------------------------------------------|-------------------------------------------------------------|
        | SKU_A: 5<br> SKU_B: 3<br> SKU_C: 4<br> c_customAttr_1: 'ABC' <br> c_customAttr_2: 'DEF'   | SKU_A: 2<br> SKU_D: 6<br> SKU_E: 7<br> c_customAttr_1: 'UVW' <br> c_customAttr_3: 'XYZ'   |

        ### after merge - (previous shopper's basket is deleted)
        | productItemMergeMode | Current Shopper's Basket - SKU: Quantity, Custom Attributes  |
        |----------------------|--------------------------------------------------------------|
        | sum_quantities         | SKU_A: 7<br> SKU_B: 3<br> SKU_C: 4<br> SKU_D: 6<br> SKU_E: 7<br> c_customAttr_1: 'UVW' <br> c_customAttr_2: 'DEF' <br> c_customAttr_3: 'XYZ'              |
        | higher_quantity      | SKU_A: 5<br> SKU_B: 3<br> SKU_C: 4<br> SKU_D: 6<br> SKU_E: 7<br> c_customAttr_1: 'UVW' <br> c_customAttr_2: 'DEF' <br> c_customAttr_3: 'XYZ'              |
        | saved_quantity       | SKU_A: 2<br> SKU_B: 3<br> SKU_C: 4<br> SKU_D: 6<br> SKU_E: 7<br> c_customAttr_1: 'UVW' <br> c_customAttr_2: 'DEF' <br> c_customAttr_3: 'XYZ'              |
        | separate_item        | SKU_A: 5<br> SKU_B: 3<br> SKU_C: 4<br> SKU_A: 2<br> SKU_D: 6<br> SKU_E: 7<br> c_customAttr_1: 'UVW' <br> c_customAttr_2: 'DEF' <br> c_customAttr_3: 'XYZ' |
      operationId: mergeBasket
      summary: Merge baskets.
      parameters:
        - $ref: '#/components/parameters/createDestinationBasket'
        - $ref: '#/components/parameters/productItemMergeMode'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: The current shopper's active basket, including items merged from the previous shopper's basket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BasketPost:
                  $ref: '#/components/examples/examples-BasketPost'
        '403':
          description: The call returns this error if no SLAS token for a registered shopper is available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ForbiddenMissingPrevCustomerInfo:
                  $ref: '#/components/examples/ForbiddenMissingPrevCustomerInfo'
        '409':
          description: |-
            The call returns this response in either of these cases:
            - The previous shopper has no active basket.
            - The current shopper has no active basket and the `createDestinationBasket` query parameter was `false` (default value).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                SourceBasketException:
                  $ref: '#/components/examples/SourceBasketException'
                BasketMergeException:
                  $ref: '#/components/examples/BasketMergeException'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/organizationId'
  /organizations/{organizationId}/baskets/{basketId}:
    get:
      description: Gets a basket.
      operationId: getBasket
      summary: Retrieve an existing basket.
      parameters:
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success, the response body contains the retrieved basket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                GetBasket:
                  $ref: '#/components/examples/BasketGet'
        '400':
          description: |-
            The customer assigned to the basket does not
            match the verified customer represented by the JSON Web Token (JWT).
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                CustomerInfoJwtMismatch:
                  $ref: '#/components/examples/CustomerInfoJwtMismatch'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders
            - sfcc.shopper-baskets-orders.rw
    delete:
      description: Removes a basket.
      operationId: deleteBasket
      summary: Delete a basket.
      responses:
        '204':
          description: Success, without a body.
        '400':
          description: |-
            The customer assigned to the basket does not
            match the verified customer represented by the JSON Web Token (JWT).
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                CustomerInfoJwtMismatch:
                  $ref: '#/components/examples/CustomerInfoJwtMismatch'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    patch:
      description: |-
        Updates a basket. Only the currency of the basket, source code, the custom
        properties of the basket, and the shipping items will be considered.
      operationId: updateBasket
      summary: Update a basket.
      parameters:
        - $ref: '#/components/parameters/removeExternalTax'
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Basket'
            examples:
              BasketPatch:
                $ref: '#/components/examples/BasketPatch'
        required: true
      responses:
        '200':
          description: Success, the response body contains the updated basket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BasketPatch:
                  $ref: '#/components/examples/examples-BasketPatch'
        '400':
          description: |-
            Possible reasons:
            - the customer assigned to the basket does not
            match the verified customer represented by the JSON Web Token (JWT).
            - the basket cannot be updated because the
            requested currency is not supported by the site.
            - the given shipping item ID is null or empty.
            - a few shipping items with the same item ID are
            provided.
            - the provided code is not currently active.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                CustomerInfoJwtMismatch:
                  $ref: '#/components/examples/CustomerInfoJwtMismatch'
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: |-
            Possible reasons:
            - the basket with the given basket ID is unknown.
            - the shipping item with the given item ID is
            unknown for the basket.
            - the provided code was not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/agent:
    put:
      description: Marks a basket as an agent basket.
      operationId: updateAsAgentBasket
      summary: Designate a basket as an agent basket.
      parameters:
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success, the response body contains basket that is set as an agent basket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BasketPutAgent:
                  $ref: '#/components/examples/BasketPutAgent'
        '400':
          description: Marking this basket as an agent basket would exceed the open agent basket limit for the basket customer.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                CustomerInfoJwtMismatch:
                  $ref: '#/components/examples/CustomerBasketQuotaExceededException'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperTokenTaob:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/billing-address:
    put:
      description: Sets the billing address of a basket.
      operationId: updateBillingAddressForBasket
      summary: Add a billing address to a basket.
      parameters:
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/useAsShipping'
        - $ref: '#/components/parameters/removeExternalTax'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAddress'
            examples:
              BillingAddressPut:
                $ref: '#/components/examples/BillingAddressPut'
        required: true
      responses:
        '200':
          description: Success, the response body contains basket with the added billing address.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BillingAddress:
                  $ref: '#/components/examples/examples-BillingAddressPut'
        '400':
          description: |-
            The customer assigned to the basket does not
            match the verified customer represented by the JSON Web Token (JWT).
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                CustomerInfoJwtMismatch:
                  $ref: '#/components/examples/CustomerInfoJwtMismatch'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/coupons:
    post:
      description: Adds a coupon to an existing basket.
      operationId: addCouponToBasket
      summary: Add a coupon to a basket.
      parameters:
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponItem'
            examples:
              CouponCodePost:
                $ref: '#/components/examples/CouponCodePost'
        required: true
      responses:
        '200':
          description: Success, the response body contains the basket with the added coupon.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                CouponCodePost:
                  $ref: '#/components/examples/examples-CouponCodePost'
        '400':
          description: |-
            Possible Reasons:
            - the customer assigned to the basket does not
            match the verified customer represented by the JSON Web Token (JWT).
            - the coupon number is not provided.
            - the coupon code specified is invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                CustomerInfoJwtMismatch:
                  $ref: '#/components/examples/CustomerInfoJwtMismatch'
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/coupons/{couponItemId}:
    delete:
      description: Removes a coupon from the basket.
      operationId: removeCouponFromBasket
      summary: Remove a coupon from a basket.
      parameters:
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success, the response body contains the basket without the deleted coupon.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                Basket:
                  $ref: '#/components/examples/examples-BasketPost'
        '400':
          description: |-
            The customer assigned to the basket does not
            match the verified customer represented by the JSON Web Token (JWT).
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                CustomerInfoJwtMismatch:
                  $ref: '#/components/examples/CustomerInfoJwtMismatch'
        '404':
          description: |-
            Possible reasons:
            - the basket with the given basket ID is unknown.
            - the couponItemId URL parameter does not match any
            coupon item ID in the basket.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
      - $ref: '#/components/parameters/couponItemId'
  /organizations/{organizationId}/baskets/{basketId}/customer:
    put:
      description: Sets customer information for an existing basket.
      operationId: updateCustomerForBasket
      summary: Add shopper information to a basket.
      parameters:
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInfo'
            examples:
              BillingAddressPut:
                $ref: '#/components/examples/CustomerPut'
        required: true
      responses:
        '200':
          description: Success, the response body contains the basket with the added customer information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BillingAddress:
                  $ref: '#/components/examples/examples-CustomerPut'
        '400':
          description: |-
            Possible reasons:
            - the customer assigned to the basket does not match the verified
            customer represented by the JSON Web Token (JWT).
            - the customer cannot be set to the basket because the
            max number of baskets per customer would be exceeded.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                CustomerInfoJwtMismatch:
                  $ref: '#/components/examples/CustomerInfoJwtMismatch'
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: |-
            Possible reasons:
            - the customer with the given customer number is unknown.
            - the basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/gift-certificate-items:
    post:
      description: Adds a gift certificate item to an existing basket.
      operationId: addGiftCertificateItemToBasket
      summary: Add a gift certificate to a basket.
      parameters:
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiftCertificateItem'
            examples:
              GiftCertificateItemPost:
                $ref: '#/components/examples/GiftCertPost'
      responses:
        '200':
          description: Success, the response body contains the basket with the added gift certificate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                GiftCertPost:
                  $ref: '#/components/examples/examples-GiftCertPost'
        '400':
          description: The gift certificate item amount is negative.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: |-
            Possible reasons:
              - the basket with the given basket ID is unknown.
              - the shipment with the given shipment ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/gift-certificate-items/{giftCertificateItemId}:
    delete:
      description: Deletes a gift certificate item from an existing basket.
      operationId: removeGiftCertificateItemFromBasket
      summary: Remove a gift certificate from a basket.
      parameters:
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success, the response body contains the basket without the deleted gift certificate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
        '404':
          description: |-
            Possible reasons:
            - the basket with the given basket ID is unknown.
            - the gift certificate item with the given gift certificate item ID is unknown.
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    patch:
      description: Updates a gift certificate item of an existing basket.
      operationId: updateGiftCertificateItemInBasket
      summary: Update gift certificate information for a basket.
      parameters:
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiftCertificateItem'
            examples:
              GiftCertificateItemPost:
                $ref: '#/components/examples/GiftCertPatch'
      responses:
        '200':
          description: Success, the response body contains the basket with the updated gift certificate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                GiftCertPatch:
                  $ref: '#/components/examples/examples-GiftCertPatch'
        '400':
          description: The gift certificate item amount is negative.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: |-
            Possible reasons:
            - the basket with the given basket ID is unknown.
            - the gift certificate item with the given gift certificate item ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
      - $ref: '#/components/parameters/giftCertificateItemId'
  /organizations/{organizationId}/baskets/{basketId}/items:
    post:
      description: |-
        Adds new items to a basket. The added items are associated with the
        specified shipment. If no shipment id is specified, the added items are associated with the default shipment.
        Considered values from the request body, for each item are:

        - productId: a valid product ID. This is the ID of the product to be added to the basket. If the
        product is already in the basket, the API either increments the quantity of the existing product line item or
        creates a new product line item, based on the site preference 'Add Product Behavior'. For option products and
        product bundles containing variation masters, the API creates a new product line item regardless of the site
        preference.
        - shipmentId: a valid shipment ID (optional). This is the ID of the shipment in which the product item
        is created.
        - quantity: a number between 0.01 and 999. This is the quantity of the product to order.
        - inventoryId: a valid inventory ID (optional). This is the ID of the inventory from which the item is
        allocated.
        - bonusDiscountLineItemId: a valid bonus discount line item ID (optional). This is the ID of the
        bonus discount line item for which the added product is a selected bonus product.
        - optionItems/optionValueId: a valid option value ID. This is an option value for an option item of
        an option product.  This is only possible if the product item is an option
        product. To set option values, you must specify a collection of option items in the optionItems
        property. These option items must contain optionId and optionValueId. Also,
        the values you specify must be valid for the option product that this product item represents. Otherwise, the
        server throws an InvalidProductOptionItemException or an
        InvalidProductOptionValueItemException.
        - custom properties in the form c_<CUSTOM_NAME>: the custom property must correspond to a custom
        attribute (<CUSTOM_NAME>) defined for ProductLineItem. The value of this property must be valid for the
        type of custom attribute defined for ProductLineItem.
      operationId: addItemToBasket
      summary: Add an item to a basket.
      parameters:
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductItem'
            examples:
              ItemPost:
                $ref: '#/components/examples/ItemPost'
        required: true
      responses:
        '200':
          description: Success, the response body contains the basket with the added items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BasketsPostSuccess:
                  $ref: '#/components/examples/examples-BasketPost'
        '400':
          description: |-
            Possible reasons:
            - the given product ID is null or invalid.
            - the product with the given product ID is unknown, offline or
            not assigned to site catalog or the given product item quantity is null or invalid.
            - a null quantity value.
            - the requested product quantity is not available.
            - the product cannot be added to the basket because of its type.
            - an option with the specified option ID is unknown.
            - an option with the specified option value ID is
            unknown.
            - the maximum allowed number of products added to the basket,
            has been exceeded.
            - the customer assigned to the basket does not match the verified
            customer represented by the JSON Web Token (JWT).
            - the provided bonus discount line item ID is not
            present in the current basket.
            - the quantity of the product to be added will result in the
            number of selected bonus choice products to exceed the amount that the user is permitted to select.
            - the selected bonus product is not an applicable product for
            the bonus discount line item provided.
            body:
            application/problem+json:
                type: ErrorResponse
                examples:
                  dataTypes.ErrorResponse: !include exchange_modules/893f605e-10e2-423a-bdb4-f952f56eb6d8/checkout-data-types/2.0.6/examples/errors/bad-request-example.raml
        '404':
          description: |-
            Possible reasons:
            - the basket with the given basket ID is unknown.
            - the basket does not contain a shipment with the given shipment ID.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    patch:
      description: |-
        Updates multiple items in a basket. This behaviour matches that of updating a
        single item, but the body contains an array of ProductItems to be updated that are identified by `itemId`.
        The items to update can include bundled product items, although the
        kind of update supported for bundled product items is limited to `productId`, `gift`, `giftMessage`
        and custom properties.
        The following values in the request body are considered by the server:

        - `itemId` (mandatory): identifies an item to be updated.
        - `productId`: a valid product ID. The purpose of this
        value is to change the variation of a variation product.
        - `shipmentId`: a valid shipment ID. The purpose of
        this value is to move a product item to another shipment.
        - `quantity`: a number between 0 and 999. The purpose of
        this value is to change the quantity of the product item. If the quantity is 0,
        the product item is removed.
        - `optionItems`/`optionValueId`: a valid option value
        ID. The purpose of this value is to exchange an option value for an
        option item of an option product.
        This is only possible if the product item is an option product. To change
        option values, a collection of the option items to be changed must be
        provided in the property `optionItems`. Those
        `optionItems` must contain `optionId`
        and `optionValueId`. The provided values must be valid
        for the option product that this product item represents. Otherwise,
        `InvalidProductOptionItemException` or
        `InvalidProductOptionValueItemException` is thrown.
        - custom properties `c_<CUSTOM_NAME>`: a
        value corresponding to the type defined for custom attribute
        `<CUSTOM_NAME>` of the ProductLineItem. The purpose of this value is to
        add or change the value of a custom attribute defined for the
        ProductLineItem.
        - `gift`: a boolean value that specifies whether the item is a gift.
        - `giftMessage`: a message to include with the gift.
      operationId: updateItemsInBasket
      summary: Update a basket item.
      parameters:
        - $ref: '#/components/parameters/removeExternalTax'
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductItem'
            examples:
              ItemPatch:
                $ref: '#/components/examples/ItemPatch'
        required: true
      responses:
        '200':
          description: Success, the response body contains the basket with the updated item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BasketsPostSuccess:
                  $ref: '#/components/examples/examples-BasketPost'
        '400':
          description: |-
            Possible reasons:
            - no product item with a given item ID was found for the basket.
            - the product with the given product ID in the
            request body is invalid.
            - a null quantity value.
            - an option with a specified option ID is unknown.
            - an option with a specified option value ID is unknown.
            - the given shipment ID is invalid.
            - the customer assigned to the basket does not
            match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: 'Possible reasons: basket not found'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
      - $ref: '#/components/parameters/siteId'
  /organizations/{organizationId}/baskets/{basketId}/items/{itemId}:
    delete:
      description: Removes a product item from the basket.
      operationId: removeItemFromBasket
      summary: Remove an item from a basket.
      parameters:
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success, the response body contains the basket without the deleted item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BasketPost:
                  $ref: '#/components/examples/examples-BasketPost'
        '400':
          description: |-
            The customer assigned to the basket does not
            match the verified customer represented by the JSON Web Token (JWT).
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                CustomerInfoJwtMismatch:
                  $ref: '#/components/examples/CustomerInfoJwtMismatch'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    patch:
      description: |-
        Updates an item in a basket. The item to be updated can be a bundled product item, although the
        kind of update supported for bundled product items is limited to `productId` (to support
        variation products), `gift`, `giftMessage` and custom properties.
        The following values in the request body are considered by the server:

        - `productId`: a valid product ID. The purpose of this
        value is to exchange a variation of a variation product.
        - `shipmentId`: a valid shipment ID. The purpose of
        this value is to move a product item to another shipment.
        - `quantity`: a number between 0 and 999. The purpose of
        this value is to change quantity of the product item. If quantity is 0,
        the product item is removed.
        - `optionItems`/`optionValueId`: a valid option value
        ID. The purpose of this value is to exchange an option value for an
        option item of an option product.
        This is only possible if the product item is an option product. To change
        option values a collection of option items to be changed need to be
        provided in property optionItems. Those
        optionItems need to contain optionId
        and `optionValueId`. The provided values must be valid
        for the option product that this product item represents. Otherwise,
        `InvalidProductOptionItemException` or
        `InvalidProductOptionValueItemException` is thrown.
        - custom properties `c_<CUSTOM_NAME>`: a
        value corresponding to the type defined for custom attribute
        `<CUSTOM_NAME>` of ProductLineItem. The purpose of this value is to
        add or change the value of a custom attribute defined for
        ProductLineItem.
        - `gift`: a boolean value that specifies whether the item is a gift
        - `giftMessage`: a message for the gift
      operationId: updateItemInBasket
      summary: Update an item in a basket.
      parameters:
        - $ref: '#/components/parameters/removeExternalTax'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductItem'
            examples:
              ItemPatch:
                $ref: '#/components/examples/ItemPatch'
        required: true
      responses:
        '200':
          description: Success, the response body contains the basket with the updated item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BasketsPostSuccess:
                  $ref: '#/components/examples/examples-BasketPost'
        '400':
          description: |-
            Possible reasons:
            - no product item with given item ID was found for the basket.
            - the product with the given product ID in the
            request body is invalid.
            - a null quantity value.
            - an option with the specified option id is unknown.
            - an option with the specified option value id is unknown.
            - the given shipment ID is invalid.
            - the customer assigned to the basket does not.
            match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: |-
            Possible reasons:
            - the basket with the given basket ID is unknown.
            - a shipment with it's given ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/itemId'
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/items/{itemId}/taxes:
    put:
      description: This method allows you to apply external taxation data to an existing basket to be able to pass tax rates and optional values for a specific taxable line item. This endpoint can be called only if external taxation mode was used for basket creation. See POST /baskets for more information.
      operationId: addTaxesForBasketItem
      summary: Add taxation information for a basket item.
      parameters:
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxItems'
            examples:
              BasketItemTaxPut:
                $ref: '#/components/examples/BasketItemTaxPut'
        required: true
      responses:
        '204':
          description: Success, without body.
        '404':
          description: |-
            Possible reasons:
            - The basket with the given basket ID is unknown.
            - The item with the given item ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
        '409':
          description: |-
            Possible Reasons:
            - The tax mode of the referenced basket is not set to EXTERNAL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnsupportedRequest:
                  $ref: '#/components/examples/UnsupportedRequest'
      security:
        - AmOAuth2:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/itemId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/payment-instruments:
    post:
      description: Adds a payment instrument to a basket.
      operationId: addPaymentInstrumentToBasket
      summary: Add a payment instrument to a basket.
      parameters:
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasketPaymentInstrumentRequest'
            examples:
              PaymentInstrumentPost:
                $ref: '#/components/examples/PaymentInstrumentPost'
        required: true
      responses:
        '200':
          description: Success, the response body contains the basket with the added payment instrument.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BasketsPostSuccess:
                  $ref: '#/components/examples/examples-BasketPost'
        '400':
          description: |-
            Possible reasons:
            - the provided payment method is invalid or not applicable.
            - the customer assigned to the basket does not match the verified
            customer represented by the JSON Web Token (JWT).
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/payment-instruments/{paymentInstrumentId}:
    delete:
      description: Removes a payment instrument of a basket.
      operationId: removePaymentInstrumentFromBasket
      summary: Remove a payment instrument from a basket.
      parameters:
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success, the response body contains the basket without the deleted payment instrument.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BasketPost:
                  $ref: '#/components/examples/examples-BasketPost'
        '400':
          description: |-
            The customer assigned to the basket does not
            match the verified customer represented by the JSON Web Token (JWT).
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                CustomerInfoJwtMismatch:
                  $ref: '#/components/examples/CustomerInfoJwtMismatch'
        '404':
          description: |-
            Possible reasons:
            - the basket with the given basket ID is unknown.
            - the payment instrument with the given basket payment
            instrument ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    patch:
      description: Updates payment instrument of an existing basket.
      operationId: updatePaymentInstrumentInBasket
      summary: Update a payment instrument for a basket.
      parameters:
        - $ref: '#/components/parameters/removeExternalTax'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPaymentInstrument'
            examples:
              PaymentInstrumentPatch:
                $ref: '#/components/examples/PaymentInstrumentPatch'
        required: true
      responses:
        '200':
          description: Success, the response body contains the basket with the updated payment instrument.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                PaymentInstrumentPatch:
                  $ref: '#/components/examples/examples-PaymentInstrumentPatch'
        '400':
          description: |-
            Possible reasons:
            - the provided payment method is invalid or not applicable.
            - the basket payment intsrument with the given id is already permanently masked.
            - The customer assigned to the basket does not match the
            verified customer represented by the JSON Web Token (JWT).
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: |-
            Possible reasons:
            - the basket with the given basket ID is unknown.
            - the payment instrument item with the given payment instrument ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/paymentInstrumentId'
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/payment-methods:
    get:
      description: Gets applicable payment methods for an existing basket considering the open payment amount only.
      operationId: getPaymentMethodsForBasket
      summary: Retrieve payment instruments for a basket.
      parameters:
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success, the response body contains the applicable payment methods for the basket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodResult'
              examples:
                PaymentMethodsGet:
                  $ref: '#/components/examples/PaymentMethodsGet'
        '400':
          description: |-
            The customer assigned to the basket does not
            match the verified customer represented by the JSON Web Token (JWT).
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                CustomerInfoJwtMismatch:
                  $ref: '#/components/examples/CustomerInfoJwtMismatch'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/price-adjustments:
    post:
      description: Adds a custom manual price adjustment to the basket.
      operationId: addPriceAdjustmentToBasket
      summary: Add a price adjustment to a basket.
      parameters:
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceAdjustmentRequest'
            examples:
              PriceAdjustmentPost:
                $ref: '#/components/examples/PriceAdjustmentPost'
        required: true
      responses:
        '200':
          description: Success, the response body contains the basket with added price adjustment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                PriceAdjustmentPost:
                  $ref: '#/components/examples/examples-PriceAdjustmentPost'
        '400':
          description: |-
            Possible reasons:
            - a fixed price adjustment was already created for the given level.
            - a fixed price adjustment was added at `order` level.
            - a promotion ID was used twice.
            - a system promotion ID was used as a manual promotion ID.
            - more than one hundred price adjustments would have been created.
            - the price adjustment limit had exceeded.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperTokenTaob:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/price-adjustments/{priceAdjustmentId}:
    delete:
      description: Removes a custom manual price adjustment from the basket.
      operationId: removePriceAdjustmentFromBasket
      summary: Remove a price adjustment from a basket.
      parameters:
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success, the response body contains the basket without the deleted price adjustment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BasketPost:
                  $ref: '#/components/examples/examples-BasketPost'
        '400':
          description: The priceAdjustmentId is missing, empty or whitespace.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperTokenTaob:
            - sfcc.shopper-baskets-orders.rw
    patch:
      description: |-
        Updates a custom manual price adjustment on the basket. Only the following path values are considered for the update; all other attributes are ignored.
        - `discount`
        - `itemText`
        - `reasonCode`
        - `custom properties`
        The discount `type` of a price adjustment cannot be updated and therefore, the value of the existing type must be passed. For an adjustment of type `percentage`, the `percentage` attribute is mandatory. For adjustments of type `amount` and `fixed_price`, the `amount` attribute is mandatory.
      operationId: updatePriceAdjustmentInBasket
      summary: Update a price adjustment for a basket.
      parameters:
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceAdjustment'
            examples:
              PriceAdjustmentPatch:
                $ref: '#/components/examples/PriceAdjustmentPatch'
        required: true
      responses:
        '200':
          description: Success, the response body contains the basket with the updated price adjustment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                PriceAdjustmentPatch:
                  $ref: '#/components/examples/examples-PriceAdjustmentPatch'
        '400':
          description: |-
            Possible reasons:
            - the price adjustment is not manual and cannot be updated.
            - the expected attributes are missing in the input.
            - the type of a price adjustment does not match the adjustment type of the input data.
            - the price adjustment limit is exceeded.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: The price adjustment ID is not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                PriceAdjustmentIdNotFoundException:
                  $ref: '#/components/examples/PriceAdjustmentIdNotFoundException'
      security:
        - ShopperTokenTaob:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/priceAdjustmentId'
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/price-books:
    get:
      description: "( DEPRECATED ) Gets applicable price books for an existing basket. This endpoint is deprecated. \nUse [Shopper Context](https://developer.salesforce.com/docs/commerce/commerce-api/references/shopper-context?meta=Summary),\nhooks or `dw.catalog.PriceBookMgr#getApplicablePriceBooks()` instead."
      operationId: getPriceBooksForBasket
      summary: Retrieve price books for a basket.
      parameters:
        - $ref: '#/components/parameters/siteId'
      responses:
        '200':
          description: Success, the response body contains the priceBookIds for the basket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceBookIds'
              examples:
                PriceBooksGet:
                  $ref: '#/components/examples/PriceBooksGet'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - AmOAuth2:
            - sfcc.shopper-baskets-orders
            - sfcc.shopper-baskets-orders.rw
    put:
      description: "( DEPRECATED ) This method allows you to put an array of priceBookIds to an existing basket, which will be used for basket calculation. This endpoint is deprecated.  \nUse [Shopper Context](https://developer.salesforce.com/docs/commerce/commerce-api/references/shopper-context?meta=Summary), \nhooks or `dw.catalog.PriceBookMgr#setApplicablePriceBooks()` instead."
      operationId: addPriceBooksToBasket
      summary: Add price books to a basket.
      parameters:
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceBookIds'
            examples:
              PriceBooksPut:
                $ref: '#/components/examples/PriceBooksPut'
        required: true
      responses:
        '204':
          description: Success, without body.
        '404':
          description: The basket with the given basket ID is unknown or contains a price book ID that does not correspond to an existing price book.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - AmOAuth2:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/shipments:
    post:
      description: |-
        Creates a new shipment for a basket.

        The created shipment is initialized with values provided in the body
        document and can be updated with further data API calls. Considered from
        the body are the following properties if specified:

        - the ID
        - the shipping address
        - the shipping method
        - gift boolean flag
        - gift message
        - custom properties
      operationId: createShipmentForBasket
      summary: Create a shipment for a basket.
      parameters:
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shipment'
            examples:
              ShipmentsPost:
                $ref: '#/components/examples/ShipmentsPost'
        required: true
      responses:
        '200':
          description: Success, the response body contains the basket with added shipment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                ShipmentsPost:
                  $ref: '#/components/examples/examples-ShipmentsPost'
        '400':
          description: |-
            Possible reasons:
            - a shipment id is not provided.
            - a shipment with the provided ID already.
            exists for the basket.
            - a shipment with the provided shipment number
            already exists for the basket.
            - a shipping method with an ID was specified
            which is not a valid shipping method ID.
            - the customer assigned to the basket does not match the
            verified customer represented by the JSON Web Token (JWT).
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: |-
            The basket with the given basket ID is
            unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/shipments/{shipmentId}:
    delete:
      description: |-
        Removes a specified shipment and all associated product, gift certificate,
        shipping, and price adjustment line items from a basket.
        It is not allowed to remove the default shipment.
      operationId: removeShipmentFromBasket
      summary: Remove a shipment from a basket.
      parameters:
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success, the response body contains the basket without the deleted shipment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BasketPost:
                  $ref: '#/components/examples/examples-BasketPost'
        '400':
          description: |-
            Possible reasons:
            - the given shipment ID is invalid.
            - the customer assigned to the basket does not match the
            verified customer represented by the JSON Web Token (JWT).
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '403':
          description: |-
            The given shipment ID corresponds to the
            default shipment and cannot be removed.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/Forbidden'
        '404':
          description: |-
            The basket with the given basket ID is
            unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    patch:
      description: |-
        Updates a shipment for a basket.

        The shipment is initialized with values provided in the body
        document and can be updated with further data API calls. Considered from
        the body are the following properties if specified:
        - the ID
        - the shipping address
        - the shipping method
        - gift boolean flag
        - gift message
        - custom properties
      operationId: updateShipmentForBasket
      summary: Update a shipment for a basket.
      parameters:
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shipment'
            examples:
              ShipmentsPatch:
                $ref: '#/components/examples/ShipmentsPatch'
        required: true
      responses:
        '200':
          description: Success, the response body contains the basket with the updated shipment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                ShipmentsPatch:
                  $ref: '#/components/examples/examples-ShipmentsPatch'
        '400':
          description: |-
            Possible reasons:
            - the given shipment ID was invalid.
            - a shipment with the provided ID already
            exists for the basket.
            - a shipment with the provided shipment number
            already exists for the basket.
            - a missing shipping method.
            - an invalid shipping method.
            - the customer assigned to the basket does not match the
            verified customer represented by the JSON Web Token (JWT).
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/shipmentId'
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/shipments/{shipmentId}/shipping-address:
    put:
      description: Sets a shipping address of a specific shipment of a basket.
      operationId: updateShippingAddressForShipment
      summary: Update the shipping address for a shipment.
      parameters:
        - $ref: '#/components/parameters/useAsBilling'
        - $ref: '#/components/parameters/removeExternalTax'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAddress'
            examples:
              ShipmentsAddressPut:
                $ref: '#/components/examples/ShipmentsAddressPut'
        required: true
      responses:
        '200':
          description: Success, the response body contains the basket with the added shipping address.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                ShipmentsAddressPut:
                  $ref: '#/components/examples/examples-ShipmentsAddressPut'
        '400':
          description: |-
            Possible reasons:
            - the shipment with the given shipment ID is unknown.
            - the customer assigned to the basket does not
            match the verified customer represented by the JSON Web Token (JWT).
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/shipmentId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/shipments/{shipmentId}/shipping-method:
    put:
      description: Sets a shipping method to a specific shipment of a basket.
      operationId: updateShippingMethodForShipment
      summary: Update the shipping method for a shipment.
      parameters:
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingMethod'
            examples:
              ShipmentsMethodPut:
                $ref: '#/components/examples/ShipmentsMethodPut'
        required: true
      responses:
        '200':
          description: Success, the response body contains the basket with the added shipping method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                ShipmentsMethodPut:
                  $ref: '#/components/examples/examples-ShipmentsMethodPut'
        '400':
          description: |-
            Possible reasons:
            - the id of the shipping method is missing.
            - a shipping method with an ID was specified
            which is not a valid shipping method ID.
            - the customer assigned to the basket does not match the
            verified customer represented by the JSON Web Token (JWT).
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/shipmentId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/shipments/{shipmentId}/shipping-methods:
    get:
      description: Gets the applicable shipping methods for a certain shipment of a basket.
      operationId: getShippingMethodsForShipment
      summary: Retrieve the shipping methods for a shipment.
      parameters:
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success, the response body contains the applicable shipping methods for a certain shipment of the basket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingMethodResult'
              examples:
                ShipmentsMethodGet:
                  $ref: '#/components/examples/ShipmentsMethodGet'
        '400':
          description: |-
            The customer assigned to the basket does not
            match the verified customer represented by the JSON Web Token (JWT).
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                CustomerInfoJwtMismatch:
                  $ref: '#/components/examples/CustomerInfoJwtMismatch'
        '404':
          description: |-
            Possible reasons:
            - The basket with the given basket ID is unknown.
            - The shipment with the given shipment ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/shipmentId'
      - $ref: '#/components/parameters/basketId'
  /organizations/{organizationId}/baskets/{basketId}/storefront:
    put:
      description: Marks a basket as a storefront basket.
      operationId: updateAsStorefrontBasket
      summary: Designate a basket as a storefront basket.
      parameters:
        - $ref: '#/components/parameters/exchange'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success, the response body contains a basket that is set as a storefront basket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
              examples:
                BasketPutStorefront:
                  $ref: '#/components/examples/BasketPutStorefront'
        '400':
          description: Thrown if a storefront basket already exists and the query parameter `exchange` is false.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                CustomerBasketQuotaExceededException:
                  $ref: '#/components/examples/CustomerBasketQuotaExceededException'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperTokenTaob:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
      - $ref: '#/components/parameters/siteId'
  /organizations/{organizationId}/baskets/{basketId}/taxes:
    get:
      description: This method gives you the external taxation data set by the PUT taxes API. This endpoint can be called only if external taxation mode was used for basket creation. See POST /baskets for more information.
      operationId: getTaxesFromBasket
      summary: Retrieve the external taxation information for a basket.
      parameters:
        - $ref: '#/components/parameters/siteId'
      responses:
        '200':
          description: Success, the response body contains the external taxation from all line items from the referenced basket.
          content:
            application/json:
              examples:
                PostBasketBody:
                  $ref: '#/components/examples/BasketTaxGet'
              schema:
                $ref: '#/components/schemas/Taxes'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
        '409':
          description: |-
            Possible Reasons:
            - The tax mode of the referenced basket is not set to EXTERNAL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                InvalidTaxMode:
                  $ref: '#/components/examples/InvalidTaxMode'
                UnsupportedRequest:
                  $ref: '#/components/examples/UnsupportedRequest'
      security:
        - AmOAuth2:
            - sfcc.shopper-baskets-orders
            - sfcc.shopper-baskets-orders.rw
    put:
      description: This method allows you to apply external taxation data to an existing basket to be able to pass tax rates and optional values for all taxable line items. This endpoint can be called only if external taxation mode was used for basket creation. See POST /baskets for more information.
      operationId: addTaxesForBasket
      summary: Add external taxation information to a basket.
      parameters:
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Taxes'
            examples:
              BasketTaxPut:
                $ref: '#/components/examples/BasketTaxPut'
        required: true
      responses:
        '204':
          description: Success, without body.
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
        '409':
          description: |-
            Possible Reasons:
            - The tax mode of the referenced basket is not set to EXTERNAL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UnsupportedRequest:
                  $ref: '#/components/examples/UnsupportedRequest'
      security:
        - AmOAuth2:
            - sfcc.shopper-baskets-orders.rw
    parameters:
      - $ref: '#/components/parameters/organizationId'
      - $ref: '#/components/parameters/basketId'
components:
  securitySchemes:
    ShopperToken:
      type: oauth2
      description: "ShopperToken authentication follows the authorization code grant flow, as defined by the OAuth 2.1 standard. Depending on the type of OAuth client (public or private), this authorization flow has further requirements. \nFor a detailed description of the authorization flow, see the [SLAS overview](https://developer.salesforce.com/docs/commerce/commerce-api/references?meta=shopper-login:Summary).\nA shopper token allows you to access the Shopper API endpoints of both OCAPI and the B2C Commerce API. These endpoints can be used to build headless storefronts and other applications.\nThe `ShopperToken` security scheme is a parent of other security schemes, such as `ShopperTokenTsob`. A Shopper API endpoint can require a specific child scheme (`ShopperTokenTsob`, for example) that cannot be accessed with a regular shopper token.\n"
      flows:
        clientCredentials:
          tokenUrl: https://{shortCode}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/token
          scopes:
            sfcc.shopper-baskets-orders: Scope granting read-access to shopper basket or orders endpoints
            sfcc.shopper-baskets-orders.rw: Scope granting read and write access to shopper basket or orders endpoints
        authorizationCode:
          authorizationUrl: https://{short-code}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/authorize
          tokenUrl: https://{short-code}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/token
          scopes:
            sfcc.shopper-baskets-orders: Scope granting read-access to shopper basket or orders endpoints
            sfcc.shopper-baskets-orders.rw: Scope granting read and write access to shopper basket or orders endpoints
    ShopperTokenTaob:
      type: oauth2
      description: "`ShopperTokenTaob` (Taob = trusted agent on behalf) is a child of the `ShopperToken` security scheme and extends the functionality of `ShopperToken` for specific use cases. \nA token of type `ShopperTokenTaob` allows you to access Shopper API endpoints, including OCAPI and Salesforce Commerce API for headless applications. Besides endpoints that require this specific subtype, all other endpoints secured by the `ShopperToken` parent scheme can be accessed with a `ShopperTokenTaob`.\nTo get a `ShopperTokenTaob` token, a `Taob` session needs to be created first (see [getTrustedAgentAuthorizationToken](https://developer.salesforce.com/docs/commerce/commerce-api/references/shopper-login?meta=getTrustedAgentAuthorizationToken)). \nAfterwards the `ShopperTokenTaob` token can be gained (see [getTrustedAgentAccessToken](https://developer.salesforce.com/docs/commerce/commerce-api/references/shopper-login?meta=getTrustedAgentAccessToken)).\nFor more information regarding the `Taob` flow see also [Trusted Agent Authorization](https://developer.salesforce.com/docs/commerce/commerce-api/guide/slas-trusted-agent.html).\n"
      flows:
        clientCredentials:
          tokenUrl: https://{short-code}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/trusted-agent/token
          scopes:
            sfcc.shopper-baskets-orders: Scope granting read-access to shopper basket or orders endpoints
            sfcc.shopper-baskets-orders.rw: Scope granting read and write access to shopper basket or orders endpoints
    AmOAuth2:
      type: oauth2
      description: AccountManager OAuth 2.0 bearer token Authentication.
      flows:
        clientCredentials:
          tokenUrl: https://account.demandware.com/dwsso/oauth2/access_token
          scopes:
            sfcc.shopper-baskets-orders: Scope granting read-access to shopper basket or orders endpoints
            sfcc.shopper-baskets-orders.rw: Scope granting read and write access to shopper basket or orders endpoints
        authorizationCode:
          authorizationUrl: https://account.demandware.com/dwsso/oauth2/authorize
          tokenUrl: https://account.demandware.com/dwsso/oauth2/access_token
          scopes:
            sfcc.shopper-baskets-orders: Scope granting read-access to shopper basket or orders endpoints
            sfcc.shopper-baskets-orders.rw: Scope granting read and write access to shopper basket or orders endpoints
  schemas:
    SiteId:
      minLength: 1
      maxLength: 32
      description: The identifier of the site that a request is being made in the context of. Attributes might have site specific values, and some objects may only be assigned to specific sites
      example: RefArch
      type: string
    OrganizationId:
      description: An identifier for the organization the request is being made by
      example: f_ecom_zzxy_prd
      type: string
      minLength: 1
      maxLength: 32
    LanguageCountry:
      pattern: ^[a-z][a-z]-[A-Z][A-Z]$
      description: A concatenated version of the standard Language and Country codes, combined with a hyphen '`-`'.
      example: en-US
      type: string
    LanguageCode:
      pattern: ^[a-z][a-z]$
      description: A two letter lowercase language code conforming to the [ISO 639-1](https://www.iso.org/iso-639-language-codes.html) standard. Additionally, this may be used to submit requests with the header parameter `Accept-Language`, following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766).
      example: en
      type: string
    DefaultFallback:
      default: default
      description: A specialized value indicating the system default values for locales.
      example: default
      enum:
        - default
      type: string
    LocaleCode:
      description: A descriptor for a geographical region by both a language and country code. By combining these two, regional differences in a language can be addressed, such as with the request header parameter `Accept-Language` following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766). This can also just refer to a language code, also RFC 2616/1766 compliant, as a default if there is no specific match for a country. Finally, can also be used to define default behavior if there is no locale specified.
      oneOf:
        - $ref: '#/components/schemas/LanguageCountry'
        - $ref: '#/components/schemas/LanguageCode'
        - $ref: '#/components/schemas/DefaultFallback'
    CountryCode:
      pattern: ^[A-Z][A-Z]$
      description: A two letter uppercase country code conforming to the [ISO 3166-1](https://www.iso.org/iso-3166-country-codes.html) alpha-2 standard.
      example: US
      type: string
    OrderAddress:
      description: Document representing an order address.
      properties:
        address1:
          description: The first address line.
          example: 45 Main Rd.
          type: string
        address2:
          description: The second address line.
          example: Apartment 204
          type: string
        city:
          description: The city.
          example: Boston
          type: string
        companyName:
          description: The company name.
          example: Salesforce
          type: string
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        firstName:
          description: The first name.
          example: Max
          type: string
        fullName:
          description: The full name.
          example: Max Mustermann
          type: string
        id:
          description: The ID of the address.
          example: me
          type: string
        jobTitle:
          description: The job title.
          example: Software Engineer
          type: string
        lastName:
          description: The last name.
          example: Mustermann
          type: string
        phone:
          description: The phone number.
          example: '6175555555'
          type: string
        postBox:
          description: The post office box.
          example: PO BOX 109
          type: string
        postalCode:
          description: The postal code.
          example: '05408'
          type: string
        salutation:
          description: The salutation.
          example: Mr
          type: string
        secondName:
          description: The second name.
          type: string
        stateCode:
          description: The state code.
          example: MA
          type: string
        suffix:
          description: The suffix.
          example: Sr
          type: string
        suite:
          description: The suite.
          example: 24A
          type: string
        title:
          description: The title.
          example: Dr.
          type: string
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
    ProductId:
      minLength: 1
      maxLength: 100
      type: string
      description: The id (SKU) of the product.
      example: apple-ipod-classic
    ProductDetailsLink:
      description: Document representing a link to the resource for product details.
      properties:
        productDescription:
          description: The description of the product.
          example: Nintendo DS revolutionizes handheld gameplay.
          type: string
        productId:
          $ref: '#/components/schemas/ProductId'
        productName:
          description: The name of the product.
          example: Nintendo DS Game Console
          type: string
        title:
          description: The link title.
          example: Nintendo DS Game Console
          type: string
      type: object
      required:
        - productId
      additionalProperties: false
    BonusDiscountLineItem:
      description: Document representing a bonus discount line item.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      type: object
      properties:
        bonusProducts:
          description: The bonus products the customer can choose from.
          type: array
          items:
            $ref: '#/components/schemas/ProductDetailsLink'
        couponCode:
          description: The coupon code that triggered the promotion, if applicable.
          example: 5ties
          type: string
        id:
          description: The ID of the line item. It is read only.
          example: 91f4dd8bfa0653d58b7783b04f
          type: string
        maxBonusItems:
          format: int32
          description: The maximum number of bonus items the user can select for this promotion.
          type: integer
        promotionId:
          description: The ID of the promotion that triggered the creation of the line item.
          example: Buy1Get2
          type: string
    CouponItemId:
      minLength: 1
      type: string
      description: The coupon item ID
      example: d4c9c0141e9c74c150225580f3
    CouponItem:
      description: Document representing a coupon item.
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        code:
          maxLength: 256
          description: The coupon code.
          example: 5ties
          type: string
        couponItemId:
          description: The coupon item ID. It is read only.
          allOf:
            - $ref: '#/components/schemas/CouponItemId'
        statusCode:
          description: The status of the coupon item. It is read only.
          example: no_applicable_promotion
          enum:
            - coupon_code_already_in_basket
            - coupon_code_already_redeemed
            - coupon_code_unknown
            - coupon_disabled
            - redemption_limit_exceeded
            - customer_redemption_limit_exceeded
            - timeframe_redemption_limit_exceeded
            - no_active_promotion
            - coupon_already_in_basket
            - no_applicable_promotion
            - applied
            - adhoc
          type: string
        valid:
          description: |-
            A flag indicating whether the coupon item is valid. A coupon line item is valid if
            the status code is "applied" or "no_applicable_promotion". It is read only.
          example: true
          type: boolean
      required:
        - code
    ISOCurrency:
      pattern: ^[A-Z][A-Z][A-Z]$
      description: A three letter uppercase currency code conforming to the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
      example: USD
      type: string
    NoValue:
      default: N/A
      description: A specialized value indicating the lack of definition of a currency, for example, if the value of the monetary value of the currency is an undefined number.
      example: N/A
      enum:
        - N/A
      type: string
    CurrencyCode:
      description: A three letter uppercase currency code conforming to the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard, or the string `N/A` indicating that a currency is not applicable.
      example: USD
      oneOf:
        - $ref: '#/components/schemas/ISOCurrency'
        - $ref: '#/components/schemas/NoValue'
    CustomerInfo:
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      description: The customer information for guest or logged-in customers.
      type: object
      properties:
        customerId:
          maxLength: 100
          description: The customer ID. It is read only.
          example: abMKqMaNYOBMnNdDNzyC5oNTi5
          type: string
        customerName:
          description: The customer name.
          example: Max Mustermann
          type: string
        customerNo:
          maxLength: 100
          description: The customer number.
          example: '0002352'
          type: string
        email:
          description: The customer's email address.
          example: no-reply@salesforce.com
          type: string
      required:
        - email
    GiftCertificateItemId:
      example: 629dea6e7b61e58da629b57b21
      type: string
      minLength: 1
    GiftCertificateItem:
      description: A gift certificate item.
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        amount:
          format: double
          description: The gift certificate item amount.
          example: 20
          type: number
        giftCertificateItemId:
          description: The item ID. It is read only.
          allOf:
            - $ref: '#/components/schemas/GiftCertificateItemId'
        message:
          maxLength: 4000
          description: The gift certificate message.
          example: Birthday present.
          type: string
        recipientEmail:
          minLength: 1
          description: The recipient email.
          example: no-reply@salesforce.com
          type: string
        recipientName:
          description: The recipient's name.
          example: Daniel Mustermann
          type: string
        senderName:
          description: The sender's name.
          example: Max Mustermann
          type: string
        shipmentId:
          description: The ID of the shipment this item belongs to.
          example: me
          type: string
      required:
        - amount
        - recipientEmail
    GroupedTaxItem:
      description: Document representing the grouped tax item.
      type: object
      properties:
        taxRate:
          description: The tax rate. It is read only.
          type: number
          format: double
          example: 0.1
        taxValue:
          description: The summed up tax total for the tax rate. It is read only.
          type: number
          format: double
          example: 10.03
      additionalProperties: false
    Discount:
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      description: Document representing a discount.
      type: object
      properties:
        amount:
          format: double
          description: The discount amount for discount types that define specific discount amounts. It is read only.
          example: 130.88
          type: number
        percentage:
          format: double
          description: The discount percent for discount types that define percentage discounts. It is read only.
          example: 0.19
          type: number
        priceBookId:
          description: The price book ID that is used with some types. It is read only.
          example: usd-sale-prices
          type: string
        type:
          description: The type of discount. It is read only.
          example: fixed_price
          enum:
            - percentage
            - fixed_price
            - amount
            - free
            - price_book_price
            - bonus
            - total_fixed_price
            - bonus_choice
            - percentage_off_options
          type: string
      required:
        - type
    PriceAdjustmentId:
      example: ba248424e3eee797f062161f8b
      type: string
    PriceAdjustment:
      description: |-
        Document representing a price adjustment within a basket or order. Price adjustments
        can be assigned at the order, product, or shipping level.
      properties:
        appliedDiscount:
          description: |-
            Details describing the discount this price adjustment is based on. For adjustments
            not based on a discount, this value is null.
          allOf:
            - $ref: '#/components/schemas/Discount'
        couponCode:
          description: |-
            The coupon code of the coupon this price adjustment is based on. For adjustments
            not based on a coupon, this value is null. It is read only.
          example: 5ties
          type: string
        createdBy:
          description: The user who created the price adjustment. It is read only.
          example: Support
          type: string
        creationDate:
          description: The timestamp when the price adjustment was created. It is read only.
          example: '2015-05-19T15:23:18.000Z'
          type: string
          format: date-time
        custom:
          description: |-
            A flag indicating whether this price adjustment was created by custom logic. This
            flag is set to true unless the price adjustment was created by the promotion
            engine.
          example: true
          type: boolean
        itemText:
          description: The text describing the item.
          type: string
        lastModified:
          description: The timestamp when the price adjustment was last modified. It is read only.
          example: '2021-02-25T09:58:08.715Z'
          type: string
          format: date-time
        manual:
          description: |-
            A flag indicating whether this price adjustment was created by a manual process.
            If the price adjustment was created by the promotion engine, this value is always
            false.
          example: true
          type: boolean
        price:
          format: double
          description: The adjustment price. It is read only.
          example: 120.88
          type: number
        priceAdjustmentId:
          description: The price adjustment ID. It is read only.
          allOf:
            - $ref: '#/components/schemas/PriceAdjustmentId'
        promotionId:
          description: |-
            The ID of the related promotion. Custom price adjustments
            can be assigned any promotion ID so long it is not
            used by a price adjustment belonging to the same item,
            and is not used by a promotion defined in the promotion engine.
            If not specified, a promotion ID is generated.
          type: string
        reasonCode:
          description: The reason for the price adjustment.
          type: string
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
    Status:
      description: Document representing an object status.
      properties:
        code:
          description: The status code.
          type: string
        message:
          description: The status message.
          type: string
        status:
          format: int32
          description: |-
            The status.
            For more information on the status values see Status.OK and Status.ERROR.
          type: integer
      type: object
      additionalProperties: false
    PaymentCard:
      additionalProperties: false
      description: Document representing a payment card.
      type: object
      properties:
        cardType:
          maxLength: 256
          description: The payment card type.
          example: Visa
          type: string
        creditCardExpired:
          description: A flag indicating if the credit card is expired. It is read only.
          example: true
          type: boolean
        creditCardToken:
          description: |-
            A credit card token. If a credit card is tokenized, the token can be used to look up the credit card data
            in the token store.
          example: E67TY8GQ27X
          type: string
        expirationMonth:
          format: int32
          description: The month when the payment card expires.
          example: 3
          type: integer
        expirationYear:
          format: int32
          description: The year when the payment card expires.
          example: 2025
          type: integer
        holder:
          maxLength: 256
          description: The payment card holder.
          example: Max Mustermann
          type: string
        issueNumber:
          maxLength: 256
          description: The payment card issue number.
          example: '2'
          type: string
        maskedNumber:
          maxLength: 4000
          description: The masked payment card number.
          example: '*********4422'
          type: string
        numberLastDigits:
          maxLength: 4000
          description: The last digits of the payment card number. It is read only.
          example: '4422'
          type: string
        validFromMonth:
          minimum: 1
          maximum: 12
          format: int32
          description: The month the payment card is valid from.
          example: 5
          type: integer
        validFromYear:
          format: int32
          description: The year the payment card is valid from.
          example: 2015
          type: integer
    PaymentInstrumentId:
      description: The payment instrument ID
      example: ba248424e3eee797f062162f8b
      type: string
    OrderPaymentInstrument:
      description: Document representing an order payment instrument.
      properties:
        amount:
          format: double
          description: The payment transaction amount.
          example: 130.88
          type: number
        authorizationStatus:
          description: The authorization status of the payment transaction. It is read only.
          allOf:
            - $ref: '#/components/schemas/Status'
        bankRoutingNumber:
          maxLength: 256
          description: The bank routing number.
          example: '12030000'
          type: string
        maskedGiftCertificateCode:
          description: The gift certificate code with the last 4 characters not masked.
          example: '******Gzzy'
          type: string
        paymentCard:
          description: The payment card.
          allOf:
            - $ref: '#/components/schemas/PaymentCard'
        paymentInstrumentId:
          description: The payment instrument ID. It is read only.
          allOf:
            - $ref: '#/components/schemas/PaymentInstrumentId'
        paymentMethodId:
          maxLength: 256
          description: The payment method ID. It is read only.
          example: CREDIT_CARD
          type: string
      type: object
    ProductItem:
      description: Document representing a product item.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      type: object
      properties:
        adjustedTax:
          format: double
          description: The tax on the line item, including any adjustments. It is read only.
          example: 19
          type: number
        basePrice:
          format: double
          description: |-
            The base price of the line item, which is the unit price not including
            adjustments. If the taxation policy is net, it doesn't include tax. If the
            taxation policy is gross, it includes tax. It is read only.
          example: 130
          type: number
        bonusDiscountLineItemId:
          description: The ID of the bonus discount line item this bonus product relates to. It is read only.
          type: string
        bonusProductLineItem:
          description: A flag indicating whether the product item is a bonus.
          example: true
          type: boolean
        bundledProductItems:
          description: The bundled product items.
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        gift:
          description: Returns true if the item is a gift. It is read only.
          example: true
          type: boolean
        giftMessage:
          description: The gift message.
          example: Happy Birthday
          type: string
        inventoryId:
          maxLength: 256
          description: The inventory list ID associated with this item.
          example: inventory
          type: string
        itemId:
          description: |-
            The product item ID. Use it to identify this item when updating its quantity or
            creating a custom price adjustment for it. It is read only.
          allOf:
            - $ref: '#/components/schemas/ItemId'
        itemText:
          description: The text describing the item.
          type: string
        optionItems:
          description: The option items.
          type: array
          items:
            $ref: '#/components/schemas/OptionItem'
        price:
          format: double
          description: |-
            The price of the line item before applying any adjustments. If the line item is based on net pricing
            then the net price is returned. If the line item is based on gross
            pricing then the gross price is returned. It is read only.
          type: number
        priceAdjustments:
          description: The price adjustments.
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        priceAfterItemDiscount:
          format: double
          description: |-
            The price of the product line item including item-level adjustments, but not
            including order-level adjustments or shipping charges. If the taxation policy is
            net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 20.99
          type: number
        priceAfterOrderDiscount:
          format: double
          description: |-
            The price of the product line item including item-level adjustments and prorated
            order-level adjustments, but not including shipping charges. If the taxation
            policy is net, it doesn't include tax. If the taxation policy is gross, it
            includes tax. It is read only.
          example: 15.5
          type: number
        productId:
          maxLength: 100
          description: The ID of the product.
          example: nintendo-ds-console
          type: string
        productListItem:
          description: |-
            If this product line item was added from a product list, this value is a reference
            to the corresponding product list item.
          allOf:
            - $ref: '#/components/schemas/ProductListItemReference'
        productName:
          description: The name of the product.
          example: Nintendo DS Game Console
          type: string
        quantity:
          minimum: 0
          format: double
          description: The quantity of the products represented by this item.
          example: 1
          type: number
        shipmentId:
          description: The ID of the shipment this item belongs to.
          example: me
          type: string
        shippingItemId:
          description: |-
            If the product line item has a related shipping item, this value is its ID. A
            related shipping item represents a surcharge applied to individual products using
            a particular shipping method. It is read only.
          example: 006490dcc338feeafc71c964bf
          type: string
        tax:
          format: double
          description: The tax for the product item, not including price adjustments. It is read only.
          example: 0.3
          type: number
        taxBasis:
          format: double
          description: The price used to calculate the tax for this product item. It is read only.
          example: 30
          type: number
        taxClassId:
          description: |-
            The tax class ID for the product item, or null
            if no tax class ID is associated with the product item. It is read only.
          type: string
        taxRate:
          format: double
          description: |-
            The tax rate, which is the decimal tax rate to be applied
            to the product represented by this item. It is read only.
          example: 0.9
          type: number
    ItemId:
      description: The item id.
      example: 430ef5aad3a24de59378458434
      type: string
    OptionItem:
      description: |-
        An option item represents an optional purchase related to a product item, and is always associated with that parent product
        item. An option item can have different values from which to select. For example, a refrigerator item can have an option item representing an extended warranty, with a set of option item values representing different warranty lengths. When a shopper purchases the warranty option item together with the parent refrigerator item, they select one of the available warranty option item values.
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        adjustedTax:
          format: double
          description: The tax on the line item, including any adjustments. It is read only.
          example: 19
          type: number
        basePrice:
          format: double
          description: |-
            The base price of the line item, which is the unit price not including adjustments.
            If the taxation policy is net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 50
          type: number
        bonusDiscountLineItemId:
          description: The ID of the bonus discount line item this bonus product relates to. It is read only.
          example: ba248414e3eee797f062162f8b
          type: string
        bonusProductLineItem:
          description: A flag indicating whether the product item is a bonus. It is read only.
          example: false
          type: boolean
        bundledProductItems:
          description: The bundled product items.
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        gift:
          description: Returns true if the item is a gift. It is read only.
          example: false
          type: boolean
        giftMessage:
          description: The gift message.
          example: Happy Birthday
          type: string
        inventoryId:
          maxLength: 256
          description: The inventory list ID associated with this item. It is read only.
          example: inventory
          type: string
        itemId:
          description: The product item ID. Use it to identify this item when updating its quantity or creating a custom price adjustment for it. It is read only.
          allOf:
            - $ref: '#/components/schemas/ItemId'
        itemText:
          description: The text describing the item.
          example: The item text.
          type: string
        optionId:
          maxLength: 256
          description: The ID of the option. It is read only.
          example: consoleWarranty
          type: string
        optionItems:
          description: The option items.
          type: array
          items:
            $ref: '#/components/schemas/OptionItem'
        optionValueId:
          maxLength: 256
          description: The ID of the option value. It is read only.
          example: '000'
          type: string
        price:
          format: double
          description: |-
            The price of the line item before applying any adjustments. If the taxation policy is net, it doesn't include tax.
            If the taxation policy is gross, it includes tax. It is read only.
          example: 150.99
          type: number
        priceAdjustments:
          description: The price adjustments.
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        priceAfterItemDiscount:
          format: double
          description: |-
            The price of the product line item including item-level adjustments, but not including order-level adjustments or
            shipping charges. If the taxation policy is net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 50.99
          type: number
        priceAfterOrderDiscount:
          format: double
          description: |-
            The price of the product line item including item-level adjustments and prorated order-level adjustments, but not
            including shipping charges. If the taxation policy is net, it doesn't include tax. If the taxation policy is gross, it
            includes tax. It is read only.
          example: 40.5
          type: number
        productId:
          $ref: '#/components/schemas/ProductId'
        productListItem:
          description: If this product line item was added from a product list, this value is a reference to the corresponding product list item.
          allOf:
            - $ref: '#/components/schemas/ProductListItemReference'
        productName:
          description: The name of the product.
          example: Nintendo DS Game Console
          type: string
        quantity:
          minimum: 0
          format: double
          description: The ordered quantity of the products represented by this item.
          example: 1
          type: number
        shipmentId:
          description: The ID of the shipment this item belongs to.
          example: me
          type: string
        shippingItemId:
          description: |-
            If the product line item has a related shipping item, this value is its ID. A related shipping item represents a
            surcharge applied to individual products using a particular shipping method. It is read only.
          example: 006490dcc338feeafc71c964bf
          type: string
        tax:
          format: double
          description: The tax on the line item before applying any adjustments. It is read only.
          example: 0
          type: number
        taxBasis:
          format: double
          description: The amount used to calculate the tax for this item. It is read only.
          example: 50
          type: number
        taxClassId:
          description: |-
            The tax class ID for the product item, or null
            if no tax class ID is associated with the product item. It is read only.
          type: string
        taxRate:
          format: double
          description: |-
            The tax rate, which is the decimal tax rate to be applied
            to the product represented by this item. It is read only.
          example: 0.19
          type: number
      required:
        - optionId
        - optionValueId
    ProductListLink:
      description: Document representing a link to a product list.
      properties:
        description:
          description: The description of this product list.
          type: string
        name:
          description: The name of this product list.
          type: string
        public:
          description: |-
            A flag indicating whether the owner made this product list available for access
            by other customers. It is read only.
          example: true
          type: boolean
        title:
          description: The link title.
          type: string
        type:
          description: The type of the product list.
          example: shopping_list
          enum:
            - wish_list
            - gift_registry
            - shopping_list
            - custom_1
            - custom_2
            - custom_3
          type: string
      type: object
      additionalProperties: false
    ProductListItemReference:
      description: Document representing product list item details.
      type: object
      additionalProperties: false
      properties:
        id:
          description: The ID of the product list item. It is read only.
          allOf:
            - $ref: '#/components/schemas/ItemId'
        priority:
          format: int32
          description: The priority of the product list item.
          example: 1
          type: integer
        productDetailsLink:
          $ref: '#/components/schemas/ProductDetailsLink'
        productList:
          description: A reference to the associated product list. It is read only.
          allOf:
            - $ref: '#/components/schemas/ProductListLink'
        public:
          example: false
          type: boolean
        purchasedQuantity:
          format: double
          description: The total quantity of this item purchased from the product list.
          example: 0
          type: number
        quantity:
          minimum: 0
          format: double
          description: The number of products or gift certificates that get shipped when purchasing this product list item.
          example: 1
          type: number
        type:
          description: Specifies whether the item is a product or a gift certificate.
          example: product
          enum:
            - product
            - gift_certificate
          type: string
      required:
        - id
    ShipmentId:
      minLength: 1
      type: string
      example: me
      description: The identifier of the shipment
    ShippingPromotion:
      description: Document representing a shipping promotion.
      properties:
        calloutMsg:
          description: The localized callout message of the promotion.
          example: $30 Fixed Shipping Amount Above 150
          type: string
        promotionId:
          description: The unique ID of the promotion.
          example: $30FixedShippingAmountAbove150
          type: string
        promotionName:
          description: The localized promotion name.
          example: $30 Fixed Shipping Amount Above 150
          type: string
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
    ShippingMethod:
      description: Document representing a shipping method.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        description:
          description: The localized description of the shipping method.
          example: Order received within 7-10 business days
          type: string
        externalShippingMethod:
          description: The external shipping method.
          type: string
        id:
          maxLength: 256
          description: The shipping method ID.
          example: '001'
          type: string
        name:
          description: The localized name of the shipping method.
          example: Ground
          type: string
        price:
          format: double
          description: |-
            The shipping cost total, including shipment level costs,
            product level fix, and surcharge costs. It is read only.
          example: 15
          type: number
        shippingPromotions:
          description: |-
            The array of active customer shipping promotions for this shipping
            method. This array can be empty.
          type: array
          items:
            $ref: '#/components/schemas/ShippingPromotion'
      type: object
      required:
        - id
    Shipment:
      description: Document representing a shipment.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        adjustedMerchandizeTotalTax:
          format: double
          description: |-
            The total tax on products in the shipment, including item-level price adjustments but not including
            service charges such as shipping. If the Discount Taxation preference is set to Tax Products and
            Shipping Only Based on Adjusted Price, this amount also includes prorated order-level price adjustments. It is read only.
          example: 4.95
          type: number
        adjustedShippingTotalTax:
          format: double
          description: The total tax on shipping charges in the shipment, including shipping price adjustments. It is read only.
          example: 0.3
          type: number
        gift:
          description: A flag indicating whether the shipment is a gift. It is read only.
          example: true
          type: boolean
        giftMessage:
          description: The gift message.
          example: Happy Birthday
          type: string
        merchandizeTotalTax:
          format: double
          description: |-
            The total tax on products in the shipment, not including price adjustments or service charges such as
            shipping. It is read only.
          example: 4.95
          type: number
        productSubTotal:
          format: double
          description: |-
            The total price of all products in the shipment, including item-level adjustments, but not including
            order-level adjustments or shipping charges. If the taxation policy is net, it doesn't include tax. If
            the taxation policy is gross, it includes tax. It is read only.
          example: 99
          type: number
        productTotal:
          format: double
          description: |-
            The total price of all products in the shipment including item-level adjustments and prorated
            order-level adjustments, but not including shipping charges. If the taxation policy is net, it doesn't
            include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 99
          type: number
        shipmentId:
          description: The order-specific ID of the shipment. The default value is 'me'.
          default: me
          allOf:
            - $ref: '#/components/schemas/ShipmentId'
        shipmentNo:
          description: The shipment number of this shipment. This number is automatically generated. It is read only.
          type: string
        shipmentTotal:
          format: double
          description: |-
            The total price of all products in the shipment including item-level adjustments, shipping charges,
            and tax. It is read only.
          example: 39.99
          type: number
        shippingAddress:
          description: The shipping address.
          allOf:
            - $ref: '#/components/schemas/OrderAddress'
        shippingMethod:
          $ref: '#/components/schemas/ShippingMethod'
        shippingStatus:
          description: The shipping status of the shipment.
          example: shipped
          enum:
            - not_shipped
            - shipped
          type: string
        shippingTotal:
          format: double
          description: |-
            The total price of all shipping charges in the shipment, including shipping adjustments. If the
            taxation policy is net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 5.99
          type: number
        shippingTotalTax:
          format: double
          description: The total tax on shipping charges in the shipment, not including shipping price adjustments. It is read only.
          example: 0.3
          type: number
        taxTotal:
          format: double
          description: |-
            The total tax on the shipment, including item-level price adjustments and service charges such as
            shipping. If the Discount Taxation preference is set to Tax Products and Shipping Only Based on
            Adjusted Price, this amount also includes prorated order-level price adjustments. It is read only.
          example: 1.8
          type: number
        trackingNumber:
          description: The tracking number of the shipment.
          example: 1Z204E380338943508
          type: string
      type: object
    ShippingItem:
      description: Document representing a shipping item.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        adjustedTax:
          format: double
          description: The tax for the shipping item, including price adjustments. It is read only.
          example: 19
          type: number
        basePrice:
          format: double
          description: |-
            The base price of the shipping item, which is the unit price not including adjustments.
            If the taxation policy is net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 50
          type: number
        itemId:
          description: |-
            The shipping item ID. Use it to identify this shipping item when updating its quantity or creating a
            custom price adjustment for it. It is read only.
          example: 430ef5aad3a24de59378458434
          type: string
        itemText:
          description: The text describing the shipping item.
          example: Shipping
          type: string
        price:
          format: double
          description: |-
            The price of the line item before applying any adjustments. If the line item is based on net pricing
            then the net price is returned. If the line item is based on gross
            pricing then the gross price is returned. It is read only.
          type: number
        priceAdjustments:
          description: The price adjustments.
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        priceAfterItemDiscount:
          format: double
          description: |-
            The price of the shipping item including item-level adjustments, but not including order-level
            adjustments or shipping charges. If the taxation policy is net, it doesn't include tax.
            If the taxation policy is gross, it includes tax. It is read only.
          type: number
        shipmentId:
          description: The identifier of the shipment to which this item belongs.
          allOf:
            - $ref: '#/components/schemas/ShipmentId'
        tax:
          format: double
          description: The tax on the product item, not including adjustments. It is read only.
          example: 0.19
          type: number
        taxBasis:
          format: double
          description: The price used to calculate the tax for this shipping item. It is read only.
          type: number
        taxClassId:
          description: |-
            The tax class ID for the product item, or null
            if no tax class ID is associated with the product item. It is read only.
          type: string
        taxRate:
          format: double
          description: The tax rate applicable to this product line item. For a 10% tax rate, the value is 0.1. It is read only.
          type: number
      type: object
    Basket:
      description: Document representing a basket.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        adjustedMerchandizeTotalTax:
          format: double
          description: |-
            The total tax on products in the shipment, including item-level price adjustments but not
            including service charges such as shipping. If the Discount Taxation preference is set to Tax
            Products and Shipping Only Based on Adjusted Price, this amount also includes prorated
            order-level price adjustments. It is read only.
          example: 4.95
          type: number
        adjustedShippingTotalTax:
          format: double
          description: The total tax on shipping charges in the shipment, including shipping price adjustments. It is read only.
          example: 0.3
          type: number
        agentBasket:
          description: Is the basket created by an agent? It is read only.
          example: true
          type: boolean
        basketId:
          description: The unique identifier for the basket. It is read only.
          example: e78aa5646a8efebdd9cdd38be7
          type: string
        billingAddress:
          description: The billing address.
          allOf:
            - $ref: '#/components/schemas/OrderAddress'
        bonusDiscountLineItems:
          description: The bonus discount line items.
          type: array
          items:
            $ref: '#/components/schemas/BonusDiscountLineItem'
        channelType:
          description: The sales channel. It is read only.
          example: storefront
          enum:
            - storefront
            - callcenter
            - marketplace
            - dss
            - store
            - pinterest
            - twitter
            - facebookads
            - subscriptions
            - onlinereservation
            - customerservicecenter
            - instagramcommerce
            - tiktok
            - snapchat
            - google
            - whatsapp
            - youtube
          type: string
        couponItems:
          description: The coupon items.
          type: array
          items:
            $ref: '#/components/schemas/CouponItem'
        creationDate:
          description: The timestamp when the basket was created. It is read only.
          example: '2015-05-19T15:23:18.000Z'
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        customerInfo:
          description: The customer information, if the customer is logged in.
          allOf:
            - $ref: '#/components/schemas/CustomerInfo'
        giftCertificateItems:
          description: The gift certificate line items.
          type: array
          items:
            $ref: '#/components/schemas/GiftCertificateItem'
        groupedTaxItems:
          description: |-
            Tax values that are grouped and summed based on the tax rate. The tax totals of the line items with the same
            tax rate are grouped together and summed up. This does not affect the calculation in any way. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/GroupedTaxItem'
        inventoryReservationExpiry:
          description: The expiration datetime of the inventory reservation. It is read only.
          example: '2015-05-19T15:30:18.000Z'
          type: string
          format: date-time
        lastModified:
          description: The timestamp when the basket was last modified. It is read only.
          example: '2015-05-19T15:25:18.000Z'
          type: string
          format: date-time
        merchandizeTotalTax:
          format: double
          description: |-
            The total products tax in the purchase currency.
            Merchandise total price represents the sum of the product prices before
            services (such as shipping) or adjustments from promotions have
            been added. It is read only.
          example: 4.95
          type: number
        orderPriceAdjustments:
          description: The order-level price adjustments.
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        orderTotal:
          format: double
          description: The total price, including products, shipping and tax. It is read only.
          example: 110.24
          type: number
        paymentInstruments:
          description: The payment instruments list.
          type: array
          items:
            $ref: '#/components/schemas/OrderPaymentInstrument'
        productItems:
          description: The product items.
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        productSubTotal:
          format: double
          description: |-
            The total price of all products including item-level adjustments, but not including order-level adjustments or shipping
            charges. If the taxation policy is net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 99
          type: number
        productTotal:
          format: double
          description: |-
            The total price of all products including adjustments, but not including shipping charges. If the taxation policy is net,
            it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 88
          type: number
        shipments:
          description: The shipments.
          type: array
          items:
            $ref: '#/components/schemas/Shipment'
        shippingItems:
          description: The shipping items.
          type: array
          items:
            $ref: '#/components/schemas/ShippingItem'
        shippingTotal:
          format: double
          description: |-
            The total price of all shipping charges, including shipping adjustments. If the taxation policy is net, it doesn't
            include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 5.99
          type: number
        shippingTotalTax:
          format: double
          description: The total tax on all shipping charges, not including shipping adjustments. It is read only.
          example: 0.3
          type: number
        sourceCode:
          description: The source code assigned to the basket. It is read only.
          example: OUTDOOR1
          type: string
        taxTotal:
          format: double
          description: The total tax amount. It is read only.
          example: 5.25
          type: number
        taxation:
          description: The taxation policy (gross or net). It is read only.
          example: net
          enum:
            - gross
            - net
          type: string
        taxRoundedAtGroup:
          description: If the tax is rounded at the group level, this is set to true. If the tax is rounded at the item or unit level, it is set to false.
          example: true
          type: boolean
        temporaryBasket:
          description: If the created basket is a temporary basket, this is set to true. Otherwise, it is set to false.
          example: true
          type: boolean
      type: object
    ErrorResponse:
      type: object
      additionalProperties: true
      properties:
        title:
          description: "A short, human-readable summary of the problem\ntype.  It will not change from occurrence to occurrence of the \nproblem, except for purposes of localization\n"
          type: string
          maxLength: 256
          example: You do not have enough credit
        type:
          description: |
            A URI reference [RFC3986] that identifies the
            problem type.  This specification encourages that, when
            dereferenced, it provide human-readable documentation for the
            problem type (e.g., using HTML [W3C.REC-html5-20141028]).  When
            this member is not present, its value is assumed to be
            "about:blank". It accepts relative URIs; this means
            that they must be resolved relative to the document's base URI, as
            per [RFC3986], Section 5.
          type: string
          maxLength: 2048
          example: NotEnoughMoney
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
          example: Your current balance is 30, but that costs 50
        instance:
          description: |
            A URI reference that identifies the specific
            occurrence of the problem.  It may or may not yield further
            information if dereferenced.  It accepts relative URIs; this means
            that they must be resolved relative to the document's base URI, as
            per [RFC3986], Section 5.
          type: string
          maxLength: 2048
          example: /account/12345/msgs/abc
      required:
        - title
        - type
        - detail
    TaxItem:
      description: Object representing the taxation.
      properties:
        id:
          description: The taxation identifier.
          type: string
        rate:
          format: double
          description: The taxation rate.
          example: 0.13
          type: number
        value:
          format: double
          description: The tax amount. Will be computed if not set.
          type: number
      type: object
      additionalProperties: false
      required:
        - id
        - rate
    TaxItems:
      description: Taxation for a line item.
      type: object
      properties:
        taxItems:
          description: The list of tax items. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/TaxItem'
    OrderPaymentCardRequest:
      description: Document representing an order payment card request.
      type: object
      properties:
        cardType:
          maxLength: 256
          description: 'The payment card type (for example: Visa).'
          example: Visa
          type: string
        creditCardToken:
          description: |-
            A credit card token. If a credit card is tokenized, the token can be used to look up the credit card data
            in the token store.
          example: E67TY8GQ27X
          type: string
        expirationMonth:
          format: int32
          description: The month when the payment card expires.
          example: 3
          type: integer
        expirationYear:
          format: int32
          description: The year when the payment card expires.
          example: 2025
          type: integer
        holder:
          maxLength: 256
          description: The payment card holder.
          example: Max Mustermann
          type: string
        issueNumber:
          maxLength: 256
          description: The payment card issue number.
          example: '2'
          type: string
        maskedNumber:
          pattern: ^[0-9 -]{0,7}\D{6,15}\d{0,4}$
          maxLength: 25
          description: The masked payment card number.
          example: '*********4422'
          type: string
        validFromMonth:
          minimum: 1
          maximum: 12
          format: int32
          description: The month the payment card is valid from.
          example: 5
          type: integer
        validFromYear:
          format: int32
          description: The year the payment card is valid from.
          example: 2019
          type: integer
    BasketPaymentInstrumentRequest:
      description: Document representing a basket payment instrument request.
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        amount:
          format: double
          description: The payment transaction amount.
          example: 130.88
          type: number
        bankRoutingNumber:
          maxLength: 256
          description: The bank routing number.
          example: '12030000'
          type: string
        giftCertificateCode:
          maxLength: 256
          description: The gift certificate code.
          example: AFGRTUZ
          type: string
        paymentCard:
          description: The payment card.
          allOf:
            - $ref: '#/components/schemas/OrderPaymentCardRequest'
        paymentMethodId:
          maxLength: 256
          description: The payment method ID.
          example: CREDIT_CARD
          type: string
    PaymentCardSpec:
      description: Document representing the specification for a payment card.
      type: object
      properties:
        cardType:
          description: The payment card type. It is read only.
          example: Visa
          type: string
        checksumVerificationEnabled:
          description: A flag indicating whether the card number is verified using the Luhn checksum algorithm. It is read only.
          example: true
          type: boolean
        description:
          description: The localized description of the payment card. It is read only.
          type: string
        image:
          description: The URL to the image that represents the payment card. It is read only.
          type: string
        name:
          description: The localized name of the payment card. It is read only.
          type: string
        numberLengths:
          description: |-
            The sorted list of number lengths (individual lengths as well as
            length ranges). It is read only.
          type: array
          items:
            type: string
        numberPrefixes:
          description: |-
            The sorted list of number prefixes (individual prefixes as well
            as prefix ranges). It is read only.
          type: array
          items:
            type: string
        securityCodeLength:
          format: int32
          description: The length of the security code for this card. It is read only.
          type: integer
    PaymentMethod:
      description: Document representing a payment method.
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        cards:
          description: The sorted array of payment cards (included only when the system payment method is CREDIT_CARD). It is read only.
          type: array
          items:
            $ref: '#/components/schemas/PaymentCardSpec'
        description:
          description: The localized description of the payment method or card. It is read only.
          type: string
        id:
          maxLength: 256
          description: The ID of the payment method or card. It is read only.
          type: string
        image:
          description: The URL to the image that represents the payment method or card. It is read only.
          type: string
        name:
          description: The localized name of the payment method or card. It is read only.
          type: string
        paymentProcessorId:
          description: The payment processor ID. It is read only. It is read only.
          type: string
      required:
        - id
    PaymentMethodResult:
      description: Result document of payment methods applicable for a basket.
      properties:
        applicablePaymentMethods:
          description: The applicable payment methods. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
      type: object
    DiscountRequest:
      description: Request that represents a discount to be applied to a custom price adjustment.
      type: object
      additionalProperties: false
      properties:
        type:
          description: |-
            The type of discount.
            - `amount` describes a (unit) price discount, and its corresponding value (positive) defines the amount each unit is to be reduced by. Example: For a $10 discount, set `type` to `amount` and `value` to `10.00`.
            - `percentage` describes a percentage discount, and its corresponding value (positive) defines the percentage reduction. Example: For a 5% discount, set `type` to `percentage` and `value` to `5.00`.
            - `fixed_price` describes a fixed price discount, and its corresponding value (positive) defines the resulting fixed price for the item. Only one `fixed_price` discount can be set for each item. Example: To set a fixed price of $15, set `type` to `fixed_price` and `value` to `15.00`. **Important**: Setting `type` to `fixed_price` is not supported when `level` is set to `order`.
          example: percentage
          enum:
            - percentage
            - fixed_price
            - amount
          type: string
        value:
          format: double
          description: The amount of the discount.
          example: 20
          type: number
      required:
        - type
        - value
    PriceAdjustmentRequest:
      description: Request that represents a price adjustment.
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        discount:
          description: A discount that can be specified instead of a price.
          allOf:
            - $ref: '#/components/schemas/DiscountRequest'
        itemId:
          description: The item to which the price adjustment should be added, depending on the specified level. If the level is ´order´, item id is not needed. If `shipping`, specify the UUID of the shipping item. If `product`, specify the UUID of the product item.
          example: 93196fae953cbedbe54d67e760
          type: string
        itemText:
          description: The text describing the item in more detail.
          example: A discounted item
          type: string
        level:
          description: |-
            The level at which the adjustment is applied.
            - `order` indicates that the price adjustment should be added directly to basket.
            - `product` indicates that the price adjustment should be added to the product item.
            - `shipping` indicates that the price adjustment is added to the shipping item.
          example: order
          enum:
            - product
            - shipping
            - order
          type: string
        promotionId:
          description: The ID of the related promotion. Custom price adjustments can be assigned any promotion ID as long as it's not used by a price adjustment belonging to the same item and isn't used by a promotion defined in the promotion engine. If not specified, a promotion ID is generated.
          example: Shipping100
          type: string
        reasonCode:
          description: The reason for the price adjustment.
          example: Shipping promotion on order above $1,000 USD
          type: string
      required:
        - level
    PriceBookIds:
      maxItems: 10
      description: Array of price book IDs to use for the basket calculation.
      type: array
      items:
        maxLength: 256
        type: string
    ShippingMethodResult:
      description: Result document containing shipping methods.
      properties:
        applicableShippingMethods:
          description: The applicable shipping method documents. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/ShippingMethod'
        defaultShippingMethodId:
          description: The default shipping method. It is read only.
          example: me
          type: string
      type: object
    Taxes:
      description: Document representing the tax rates and (optionally) amounts for all items in a basket.
      properties:
        taxes:
          description: 'Map containing the TaxItems for the line item ids: Map<LineItemId, TaxItems []>'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TaxItems'
      type: object
      required:
        - taxes
      additionalProperties: false
  parameters:
    siteId:
      description: The identifier of the site that a request is being made in the context of. Attributes might have site specific values, and some objects may only be assigned to specific sites.
      name: siteId
      in: query
      required: true
      examples:
        SiteId:
          value: RefArch
      schema:
        $ref: '#/components/schemas/SiteId'
    organizationId:
      description: An identifier for the organization the request is being made by
      name: organizationId
      in: path
      required: true
      example: f_ecom_zzxy_prd
      schema:
        $ref: '#/components/schemas/OrganizationId'
    taxMode:
      name: taxMode
      in: query
      description: "Determines how taxes are calculated. \n\nThe default value is `internal` where the tax calculation is done automatically based on internal tax tables. Setting `taxMode` to `external` allows manual modification of the tax rates and values. \nExternal tax data is mandatory for product line items, option line items, shipping line items, coupon line items, and bonus discount line item. \nGift certificate line items are optional and use zero tax rate by default, which can be overwritten. Price adjustments cannot be set because they are either calculated or inherited. \nDepending on the type, the tax rate is either obtained from the related line item or computed as a prorate of the basket."
      schema:
        default: internal
        enum:
          - internal
          - external
        type: string
        example: external
    temporary:
      name: temporary
      in: query
      description: If set to true, the basket created is a temporary basket.
      schema:
        default: false
        type: boolean
    locale:
      description: A descriptor for a geographical region by both a language and country code. By combining these two, regional differences in a language can be addressed, such as with the request header parameter `Accept-Language` following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766). This can also just refer to a language code, also RFC 2616/1766 compliant, as a default if there is no specific match for a country. Finally, can also be used to define default behavior if there is no locale specified.
      name: locale
      in: query
      examples:
        LanguageCountry:
          value: en-US
        CountryCode:
          value: US
      schema:
        $ref: '#/components/schemas/LocaleCode'
    overrideExisting:
      name: overrideExisting
      in: query
      description: |-
        If the current shopper has no active basket, this parameter is ignored. If the current shopper has an active basket, this parameter controls the behavior:
        - `false` (default): Return a BasketTransferException (HTTP status 409). The basket owner doesn't change.
        - `true`: Force the transfer by deleting the current shopper's active basket and making the current shopper the owner of the previous shopper's basket. Returns the transferred basket (HTTP status 200).
      schema:
        default: false
        type: boolean
        example: false
    createDestinationBasket:
      name: createDestinationBasket
      in: query
      description: |-
        If the current shopper has an active basket, this parameter is ignored. If the current shopper has no active basket, this parameter controls the behavior:
        - `false` (default): Return a BasketMergeException (HTTP status 409).
        - `true`: Force the merge by creating a basket for the current shopper and copying information from the previous shopper's basket into it. Return success (HTTP status 200).
      schema:
        default: false
        type: boolean
    productItemMergeMode:
      name: productItemMergeMode
      in: query
      description: |-
        This parameter controls the quantity calculation for products that exist in both baskets.
        - higher_quantity (default): Compare the product's quantities in each basket, and use the higher value.
        - sum_quantities: Use the sum of the product's quantities from both baskets.
        - saved_quantity: Use the product's quantity in the current shopper's active basket. Ignore the quantity from the previous shopper's basket.
        - separate_item: Add a separate product item to the current shopper's basket for the quantity in the previous shopper's basket.
      schema:
        default: higher_quantity
        enum:
          - higher_quantity
          - sum_quantities
          - saved_quantity
          - separate_item
        type: string
    basketId:
      name: basketId
      in: path
      required: true
      schema:
        minLength: 1
        type: string
      description: The ID of the basket to be modified.
    removeExternalTax:
      name: removeExternalTax
      in: query
      description: 'If `true` (default value), the external tax rates are removed from the basket and set to null. To add external tax rates to a basket, use the `addTaxesForBasket` or `addTaxesForBasketItem` endpoint. The removal of external tax rates depends on the update performed on the basket, for example: an update to the `currency` triggers a removal. Set this parameter to `false` to disable the removal of external tax rates/values.'
      schema:
        default: true
        type: boolean
    useAsShipping:
      name: useAsShipping
      in: query
      schema:
        type: boolean
    couponItemId:
      name: couponItemId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/CouponItemId'
      description: The ID of the coupon item.
    giftCertificateItemId:
      name: giftCertificateItemId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/GiftCertificateItemId'
      description: the ID of the gift certificate item to be updated.
    itemId:
      name: itemId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ItemId'
      description: The ID of the item to be updated.
    paymentInstrumentId:
      name: paymentInstrumentId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/PaymentInstrumentId'
    priceAdjustmentId:
      name: priceAdjustmentId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/PriceAdjustmentId'
    shipmentId:
      name: shipmentId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ShipmentId'
      description: The ID of the shipment to be modified.
    useAsBilling:
      name: useAsBilling
      in: query
      schema:
        type: boolean
    exchange:
      name: exchange
      in: query
      description: If true, an existing storefront basket is exchanged and marked as an agent basket. If false, a `CustomerBasketsQuotaExceededException` is thrown.
      schema:
        type: boolean
  examples:
    BasketPost:
      value:
        customerInfo:
          email: shopper@salesforce-test.com
          customerNo: '000000001'
        billingAddress:
          firstName: Stephanie
          lastName: Miller
          address1: 104 Presidential Way
          city: Woburn
          postalCode: '01801'
          stateCode: MA
          countryCode: US
        shipments:
          - shippingMethod:
              id: '001'
            shippingAddress:
              firstName: Agustin
              lastName: Estes
              address1: 4162  Turkey Pen Road
              city: New York
              postalCode: '10016'
              stateCode: NY
              countryCode: US
        paymentInstruments:
          - paymentMethodId: CREDIT_CARD
            paymentCard:
              cardType: Visa
        couponItems:
          - code: 5ties
        productItems:
          - productId: green-umbrella
            quantity: 3
    examples-BasketPost:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: bfea663fd3de75d5be3ec02702
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: cc6ef43f207bf64099288aec36
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:29:55.340Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopper@salesforce-test.com
        lastModified: '2019-10-17T08:29:55.698Z'
        merchandizeTotalTax: 30
        orderTotal: 646.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: b7679bea661819b2de78b9de7d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 3d4e28425ce0b3a65b0ac4e163
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: ff9452ed11fcf5c80f9143a8f1
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: 4432af77112f7c2433248a48e8
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: d5ed0e58b8f8b5efe8d617a630
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        taxation: net
        taxTotal: 30.8
    BadRequest:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/bad-request
        title: Bad Request
        detail: Decoding of the property with path '$.failedExample.[1].intProperty' failed because the expected type is 'Integer|Decimal' but the actual type was 'String'.
    CustomerBasketQuotaExceededException:
      value:
        title: Customer Baskets Quota Exceeded
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/customer-baskets-quota-exceeded
        detail: The maximum number of baskets per customer was exceeded. Please reuse or delete one of the existing baskets (40e91e04aba6e42a6836f79308).
        basketIds: 40e91e04aba6e42a6836f79308
    TemporaryBasketQuotaExceededException:
      value:
        title: Customer Temporary Baskets Quota Exceeded,
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/customer-temporary-baskets-quota-exceeded
        detail: The maximum number of temporary baskets per customer was exceeded. Please reuse or delete one of the existing temporary baskets (40e91e04aba6e42a6836f79308, 73ca0f0860a67df946782c2688).
        basketIds: 40e91e04aba6e42a6836f79308, 73ca0f0860a67df946782c2688
    ShipmentNotFound:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/shipment-not-found
        title: Shipment Not Found
        detail: The shipping method with ID '123' is unknown or can't be applied to the basket.
    ForbiddenMissingPrevCustomerInfo:
      value:
        title: Forbidden
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/forbidden
        detail: Your access-token is valid, but it contains no previous customer to process this action.
    SourceBasketException:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/no-source-basket-exception
        title: Conflict
        detail: The previous customer with ID 'cdo7rJNie7ahERqXSb51Yvz2M4' has no active basket.
    BasketTransferException:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/basket-transfer-basket-already-exists-exception
        title: Conflict
        detail: The current customer with ID 'cdo7rJNie7ahERqXSb51Yvz2M4' has an active basket.
    BasketMergeException:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/basket-merge-no-current-basket-exception
        title: Conflict
        detail: The current customer with ID 'cdo7rJNie7ahERqXSb51Yvz2M4' has no active basket.
    BasketGet:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: bfea663fd3de75d5be3ec02702
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: cc6ef43f207bf64099288aec36
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:29:55.340Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopper@salesforce-test.com
        lastModified: '2019-10-17T08:29:55.698Z'
        merchandizeTotalTax: 30
        orderTotal: 646.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: b7679bea661819b2de78b9de7d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 3d4e28425ce0b3a65b0ac4e163
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: ff9452ed11fcf5c80f9143a8f1
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: 4432af77112f7c2433248a48e8
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: d5ed0e58b8f8b5efe8d617a630
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        taxation: net
        taxTotal: 30.8
    CustomerInfoJwtMismatch:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/bad-request
        title: Bad Request
        detail: The customer is invalid.
    BasketNotFound:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/basket-not-found
        title: Basket Not Found
        detail: No basket with ID '123' could be found.
    BasketPatch:
      value:
        c_textValue: oak
    examples-BasketPatch:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: 5f695b6f4bb63cb686483d65a0
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: 7800e0f611dac6caf77afb9df9
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:53:30.993Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopper@salesforce-test.com
        lastModified: '2019-10-17T08:53:35.747Z'
        merchandizeTotalTax: 30
        orderTotal: 646.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: 2b76b8644eb6da43e7e223b48d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 43c38652bc3844e14cd482ff28
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: b4ff13039bc7abd1b9d933b871
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: 193e99bc1205b870cebd36d970
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: ac7a3b62dc1df8de898d7a2141
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        taxation: net
        taxTotal: 30.8
        c_textValue: oak
    BasketPutAgent:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: true
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: bfea663fd3de75d5be3ec02702
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: cc6ef43f207bf64099288aec36
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:29:55.340Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopper@salesforce-test.com
        lastModified: '2019-10-17T08:29:55.698Z'
        merchandizeTotalTax: 30
        orderTotal: 646.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: b7679bea661819b2de78b9de7d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 3d4e28425ce0b3a65b0ac4e163
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: ff9452ed11fcf5c80f9143a8f1
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: 4432af77112f7c2433248a48e8
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: d5ed0e58b8f8b5efe8d617a630
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        taxation: net
        taxTotal: 30.8
    BillingAddressPut:
      value:
        firstName: Stephanie
        lastName: Miller
        address1: 385  Prospect Valley Road
        city: Woburn
        postalCode: '01801'
        stateCode: MA
        countryCode: US
    examples-BillingAddressPut:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 385  Prospect Valley Road
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: 5f695b6f4bb63cb686483d65a0
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: 7800e0f611dac6caf77afb9df9
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:53:30.993Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopper@salesforce-test.com
        lastModified: '2019-10-17T08:53:35.747Z'
        merchandizeTotalTax: 30
        orderTotal: 646.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: 2b76b8644eb6da43e7e223b48d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 43c38652bc3844e14cd482ff28
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: b4ff13039bc7abd1b9d933b871
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: 193e99bc1205b870cebd36d970
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: ac7a3b62dc1df8de898d7a2141
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        taxation: net
        taxTotal: 30.8
    CouponCodePost:
      value:
        code: 10_percent_off
    examples-CouponCodePost:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: bfea663fd3de75d5be3ec02702
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: cc6ef43f207bf64099288aec36
            statusCode: no_applicable_promotion
            valid: true
          - code: 10_percent_off
            couponItemId: 9372d0f511dac8caf77afc4kj2
            statusCode: applied
            valid: true
        creationDate: '2019-10-17T08:29:55.340Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopper@salesforce-test.com
        lastModified: '2019-10-17T08:29:55.698Z'
        merchandizeTotalTax: 30
        orderTotal: 646.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: b7679bea661819b2de78b9de7d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 3d4e28425ce0b3a65b0ac4e163
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: ff9452ed11fcf5c80f9143a8f1
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: 4432af77112f7c2433248a48e8
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: d5ed0e58b8f8b5efe8d617a630
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        taxation: net
        taxTotal: 30.8
    CustomerPut:
      value:
        email: shopperUpdate@salesforce-test.com
    examples-CustomerPut:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: bfea663fd3de75d5be3ec02702
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: cc6ef43f207bf64099288aec36
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:29:55.340Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopperUpdate@salesforce-test.com
        lastModified: '2019-10-17T08:29:55.698Z'
        merchandizeTotalTax: 30
        orderTotal: 646.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: b7679bea661819b2de78b9de7d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 3d4e28425ce0b3a65b0ac4e163
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: ff9452ed11fcf5c80f9143a8f1
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: 4432af77112f7c2433248a48e8
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: d5ed0e58b8f8b5efe8d617a630
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        taxation: net
        taxTotal: 30.8
    GiftCertPost:
      value:
        amount: 1
        recipientEmail: miller@salesforce-test.com
        shipmentId: me
    examples-GiftCertPost:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: bfea663fd3de75d5be3ec02702
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: cc6ef43f207bf64099288aec36
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:29:55.340Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopperUpdate@salesforce-test.com
        giftCertificateItems:
          - amount: 2
            giftCertificateItemId: 83726a8351540534af93f3b15f
            recipientEmail: miller@salesforce-test.com
            shipmentId: me
        lastModified: '2019-10-17T08:29:55.698Z'
        merchandizeTotalTax: 30
        orderTotal: 646.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: b7679bea661819b2de78b9de7d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 3d4e28425ce0b3a65b0ac4e163
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: ff9452ed11fcf5c80f9143a8f1
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: 4432af77112f7c2433248a48e8
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: d5ed0e58b8f8b5efe8d617a630
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        taxation: net
        taxTotal: 30.8
    GiftCertPatch:
      value:
        amount: 1
        recipientEmail: miller@salesforce-test.com
    examples-GiftCertPatch:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: bfea663fd3de75d5be3ec02702
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: cc6ef43f207bf64099288aec36
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:29:55.340Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopperUpdate@salesforce-test.com
        giftCertificateItems:
          - amount: 1
            giftCertificateItemId: 83726a8351540534af93f3b15f
            recipientEmail: miller@salesforce-test.com
            shipmentId: me
        lastModified: '2019-10-17T08:29:55.698Z'
        merchandizeTotalTax: 30
        orderTotal: 646.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: b7679bea661819b2de78b9de7d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 3d4e28425ce0b3a65b0ac4e163
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: ff9452ed11fcf5c80f9143a8f1
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: 4432af77112f7c2433248a48e8
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: d5ed0e58b8f8b5efe8d617a630
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        taxation: net
        taxTotal: 30.8
    ItemPost:
      value:
        - productId: green-bag
          quantity: 1
    ItemPatch:
      value:
        quantity: 1
    BasketItemTaxPut:
      value:
        taxItems:
          - id: DE_7
            rate: 0.07
            value: 13.99
          - id: DE_19
            rate: 0.19
    UnsupportedRequest:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/unsupported-request-if-scapi-hooks-enabled
        title: Unsupported Request If SCAPI Hooks Enabled
        detail: You can't call this endpoint because Salesforce Commerce API hook execution is enabled.
    PaymentInstrumentPost:
      value:
        amount: 1
        paymentCard:
          expirationYear: 1990
          expirationMonth: 7
          validFromMonth: 8
          validFromYear: 2007
          issueNumber: i117
          maskedNumber: '*********1234'
          holder: Miller
          cardType: Visa
        paymentMethodId: CREDIT_CARD
    PaymentInstrumentPatch:
      value:
        amount: 0
        paymentCard:
          holder: Miller
          cardType: Visa
        paymentMethodId: CREDIT_CARD
    examples-PaymentInstrumentPatch:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: bfea663fd3de75d5be3ec02702
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: cc6ef43f207bf64099288aec36
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:29:55.340Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopper@salesforce-test.com
        lastModified: '2019-10-17T08:29:55.698Z'
        merchandizeTotalTax: 30
        orderTotal: 646.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
              holder: Miller
            paymentInstrumentId: b7679bea661819b2de78b9de7d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 3d4e28425ce0b3a65b0ac4e163
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: ff9452ed11fcf5c80f9143a8f1
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: 4432af77112f7c2433248a48e8
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: d5ed0e58b8f8b5efe8d617a630
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        taxation: net
        taxTotal: 30.8
    PaymentMethodsGet:
      value:
        applicablePaymentMethods:
          - id: GIFT_CERTIFICATE
            name: Gift Certificate
            paymentProcessorId: BASIC_GIFT_CERTIFICATE
          - cards:
              - cardType: Visa
                checksumVerificationEnabled: true
                name: Visa
                numberLengths:
                  - '13'
                  - '16'
                numberPrefixes:
                  - '4'
              - cardType: Amex
                checksumVerificationEnabled: true
                name: American Express
                numberLengths:
                  - '15'
                numberPrefixes:
                  - '34'
                  - '37'
              - cardType: Master Card
                checksumVerificationEnabled: true
                name: MasterCard
                numberLengths:
                  - '16'
                numberPrefixes:
                  - 51-55
              - cardType: Discover
                checksumVerificationEnabled: true
                name: Discover
                numberLengths:
                  - '16'
                numberPrefixes:
                  - '6011'
                  - 622126-622925
                  - 644-649
                  - '65'
            id: CREDIT_CARD
            name: Credit Card
            paymentProcessorId: BASIC_CREDIT
          - id: PayPal
            name: Pay Pal
            paymentProcessorId: PAYPAL_EXPRESS
          - id: BML
            name: Bill Me Later
            paymentProcessorId: CYBERSOURCE_BML
    PriceAdjustmentPost:
      value:
        discount:
          value: 5
          type: percentage
        itemText: MyOrderAdjustment
        level: order
        promotionId: manual adjustment
    examples-PriceAdjustmentPost:
      value:
        adjustedMerchandizeTotalTax: 28.45
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: bfea663fd3de75d5be3ec02702
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: cc6ef43f207bf64099288aec36
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:29:55.340Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopper@salesforce-test.com
        lastModified: '2019-10-17T08:29:55.698Z'
        merchandizeTotalTax: 30
        orderPriceAdjustments:
          - appliedDiscount:
              amount: 0.05
              percentage: 5
              type: percentage
            createdBy: testAgent
            creationDate: '2015-05-25T09:13:10.942Z'
            custom: true
            itemText: MyOrderAdjustment
            manual: true
            price: -30
            promotionId: manual adjustment
            priceAdjustmentId: cdzoAiWbOmbiUaaadlfSpMDgNw
        orderTotal: 615.21
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: b7679bea661819b2de78b9de7d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 3d4e28425ce0b3a65b0ac4e163
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: ff9452ed11fcf5c80f9143a8f1
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 569.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 569.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 569.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: 4432af77112f7c2433248a48e8
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: d5ed0e58b8f8b5efe8d617a630
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        taxation: net
        taxTotal: 30.8
    PriceAdjustmentPatch:
      value:
        appliedDiscount:
          amount: 15
          type: amount
        itemText: AgentOrderAdjustment
        reasonCode: override manual promo
    examples-PriceAdjustmentPatch:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: bfea663fd3de75d5be3ec02702
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: cc6ef43f207bf64099288aec36
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:29:55.340Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopper@salesforce-test.com
        lastModified: '2019-10-17T08:29:55.698Z'
        merchandizeTotalTax: 30
        orderPriceAdjustments:
          - appliedDiscount:
              amount: 15
              type: amount
            createdBy: testWapiAgent
            creationDate: '2017-03-14T09:15:35.543Z'
            custom: true
            itemText: MyOrderAdjustment
            lastModified: '2017-03-14T09:15:35.594Z'
            manual: true
            price: -15
            priceAdjustmentId: e397cd21f9a9c0643277ba1011
            promotionId: manual adjustment
            reasonCode: override manual promo
        orderTotal: 631.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: b7679bea661819b2de78b9de7d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 3d4e28425ce0b3a65b0ac4e163
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: ff9452ed11fcf5c80f9143a8f1
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: 4432af77112f7c2433248a48e8
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: d5ed0e58b8f8b5efe8d617a630
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        taxation: net
        taxTotal: 30.8
    PriceAdjustmentIdNotFoundException:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/price-adjustment-not-found
        title: Price Adjustment Not Found
        detail: No price adjustment with ID '453599643347eac5e4ebd85b49' could be found.
    PriceBooksGet:
      value:
        - price-book-id1
        - price-book-id2
    PriceBooksPut:
      value:
        - price-book-id1
        - price-book-id2
    ShipmentsPost:
      value:
        shipmentId: me2
        shippingMethod:
          id: '001'
        shippingAddress:
          firstName: Stephanie
          lastName: Miller
          address1: 385  Prospect Valley Road
          city: Woburn
          postalCode: '01801'
          stateCode: MA
          countryCode: US
    examples-ShipmentsPost:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: bfea663fd3de75d5be3ec02702
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: cc6ef43f207bf64099288aec36
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:29:55.340Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopper@salesforce-test.com
        lastModified: '2019-10-17T08:29:55.698Z'
        merchandizeTotalTax: 30
        orderTotal: 646.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: b7679bea661819b2de78b9de7d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 3d4e28425ce0b3a65b0ac4e163
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: ff9452ed11fcf5c80f9143a8f1
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4911  Lincoln Street
              city: IDANHA
              countryCode: US
              firstName: Ward J
              fullName: Ward J Adamek
              id: b3e1269a2c1d0ad56694206741
              lastName: Adamek
            shippingMethod:
              description: Order received in 2 business days
              id: '002'
              name: 2-Day Express
              price: 20.99
            shippingStatus: not_shipped
            shippingTotal: 20.99
            shippingTotalTax: 1.05
            taxTotal: 36.05
          - adjustedMerchandizeTotalTax: 35
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 35
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me2
            shipmentTotal: 646.76
            shippingAddress:
              address1: 385  Prospect Valley Road
              city: Woburn
              stateCode: MA
              countryCode: US
              firstName: Stephanie
              fullName: Stephanie Miller
              id: 84f06786daa68ae33af7e21ec6
              lastName: Miller
            shippingMethod:
              description: Order received in 2 business days
              id: '001'
              name: 2-Day Express
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 35
        shippingItems:
          - adjustedTax: 1.05
            basePrice: 20.99
            itemId: d5ed0e58b8f8b5efe8d617a630
            itemText: Shipping
            price: 20.99
            priceAfterItemDiscount: 20.99
            shipmentId: me
            tax: 1.05
            taxBasis: 20.99
            taxClassId: standard
            taxRate: 0.05
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: 6fea9966277c94e06b482a5c43
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 36.98
        shippingTotalTax: 1.35
        taxation: net
        taxTotal: 36.35
    Forbidden:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/forbidden
        title: Forbidden
        detail: The shipment with ID 'me' corresponds to the default shipment and can't be deleted.
    ShipmentsPatch:
      value:
        shipmentId: me
        shipmentNo: ignored shipment no
        shippingMethod:
          id: '003'
        shippingAddress:
          firstName: Ward J
          lastName: Adamek
          address1: 4911  Lincoln Street
          city: IDANHA
          postalCode: '97350'
          stateCode: OR
          countryCode: US
        c_wapi-string: shipment_custom_property
    examples-ShipmentsPatch:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: bfea663fd3de75d5be3ec02702
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: cc6ef43f207bf64099288aec36
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:29:55.340Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopper@salesforce-test.com
        lastModified: '2019-10-17T08:29:55.698Z'
        merchandizeTotalTax: 30
        orderTotal: 646.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: b7679bea661819b2de78b9de7d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 3d4e28425ce0b3a65b0ac4e163
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: ff9452ed11fcf5c80f9143a8f1
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4911  Lincoln Street
              city: IDANHA
              countryCode: US
              firstName: Ward J
              fullName: Ward J Adamek
              id: b3e1269a2c1d0ad56694206741
              lastName: Adamek
            shippingMethod:
              description: Order received in 2 business days
              id: '002'
              name: 2-Day Express
              price: 20.99
            shippingStatus: not_shipped
            shippingTotal: 20.99
            shippingTotalTax: 1.05
            taxTotal: 36.05
        shippingItems:
          - adjustedTax: 1.05
            basePrice: 20.99
            itemId: d5ed0e58b8f8b5efe8d617a630
            itemText: Shipping
            price: 20.99
            priceAfterItemDiscount: 20.99
            shipmentId: me
            tax: 1.05
            taxBasis: 20.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 20.99
        shippingTotalTax: 1.05
        taxation: net
        taxTotal: 36.05
    ShipmentsAddressPut:
      value:
        firstName: Ward J
        lastName: Adamek
        address1: 4911  Lincoln Street
        city: IDANHA
        postalCode: '97350'
        stateCode: OR
        countryCode: US
    examples-ShipmentsAddressPut:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: bfea663fd3de75d5be3ec02702
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: cc6ef43f207bf64099288aec36
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:29:55.340Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopper@salesforce-test.com
        lastModified: '2019-10-17T08:29:55.698Z'
        merchandizeTotalTax: 30
        orderTotal: 646.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: b7679bea661819b2de78b9de7d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 3d4e28425ce0b3a65b0ac4e163
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: ff9452ed11fcf5c80f9143a8f1
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4911  Lincoln Street
              postalCode: '97350'
              city: IDANHA
              countryCode: US
              firstName: Ward J
              fullName: Ward J Adamek
              id: b3e1269a2c1d0ad56694206741
              lastName: Adamek
              stateCode: OR
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: d5ed0e58b8f8b5efe8d617a630
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        taxation: net
        taxTotal: 30.8
    ShipmentsMethodPut:
      value:
        id: '003'
    examples-ShipmentsMethodPut:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: bfea663fd3de75d5be3ec02702
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        couponItems:
          - code: 5ties
            couponItemId: cc6ef43f207bf64099288aec36
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:29:55.340Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopper@salesforce-test.com
        lastModified: '2019-10-17T08:29:55.698Z'
        merchandizeTotalTax: 30
        orderTotal: 646.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: b7679bea661819b2de78b9de7d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 3d4e28425ce0b3a65b0ac4e163
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: ff9452ed11fcf5c80f9143a8f1
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4911  Lincoln Street
              postalCode: '97350'
              city: IDANHA
              countryCode: US
              firstName: Ward J
              fullName: Ward J Adamek
              id: b3e1269a2c1d0ad56694206741
              lastName: Adamek
              stateCode: OR
            shippingMethod:
              description: Order received the next business day
              id: '003'
              name: Overnight
              price: 29.99
            shippingStatus: not_shipped
            shippingTotal: 29.99
            shippingTotalTax: 1.5
            taxTotal: 36.5
        shippingItems:
          - adjustedTax: 1.5
            basePrice: 29.99
            itemId: d5ed0e58b8f8b5efe8d617a630
            itemText: Shipping
            price: 29.99
            priceAfterItemDiscount: 29.99
            shipmentId: me
            tax: 1.5
            taxBasis: 29.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 29.99
        shippingTotalTax: 1.5
        taxation: net
        taxTotal: 36.5
    ShipmentsMethodGet:
      value:
        applicableShippingMethods:
          - description: Order received within 7-10 business days
            id: '001'
            name: Ground
            price: 15.99
          - description: Order received in 2 business days
            id: '002'
            name: 2-Day Express
            price: 20.99
          - description: Order received the next business day
            id: '003'
            name: Overnight
            price: 29.99
          - description: Store Pickup
            id: '005'
            name: Store Pickup
            price: 0
            c_storePickupEnabled: true
        defaultShippingMethodId: '001'
    BasketPutStorefront:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        agentBasket: false
        basketId: a10ff320829cb0eef93ca5310a
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: bfea663fd3de75d5be3ec02702
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: callcenter
        couponItems:
          - code: 5ties
            couponItemId: cc6ef43f207bf64099288aec36
            statusCode: no_applicable_promotion
            valid: true
        creationDate: '2019-10-17T08:29:55.340Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          email: shopper@salesforce-test.com
        lastModified: '2019-10-17T08:29:55.698Z'
        merchandizeTotalTax: 30
        orderTotal: 646.76
        paymentInstruments:
          - amount: 0
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: b7679bea661819b2de78b9de7d
            paymentMethodId: CREDIT_CARD
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: 3d4e28425ce0b3a65b0ac4e163
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: ff9452ed11fcf5c80f9143a8f1
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.97
            priceAfterItemDiscount: 599.97
            priceAfterOrderDiscount: 599.97
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 30
            adjustedShippingTotalTax: 0.8
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: 4432af77112f7c2433248a48e8
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: d5ed0e58b8f8b5efe8d617a630
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        taxation: net
        taxTotal: 30.8
    BasketTaxGet:
      value:
        taxes:
          3d4e28425ce0b3a65b0ac4e163:
            taxItems:
              - id: DE_7
                rate: 0.07
                value: 13.99
              - id: DE_19
                rate: 0.19
          ff9452ed11fcf5c80f9143a8f1:
            taxItems:
              - id: US_1
                rate: 0.01
              - id: US_5
                rate: 0.05
    InvalidTaxMode:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/invalid-tax-mode
        title: Invalid Tax Mode
        detail: Basket with ID 'a10ff320829cb0eef93ca5310a' has invalid tax mode.
    BasketTaxPut:
      value:
        taxes:
          3d4e28425ce0b3a65b0ac4e163:
            taxItems:
              - id: DE_7
                rate: 0.07
                value: 13.99
              - id: DE_19
                rate: 0.19
          ff9452ed11fcf5c80f9143a8f1:
            taxItems:
              - id: US_1
                rate: 0.01
              - id: US_5
                rate: 0.05
