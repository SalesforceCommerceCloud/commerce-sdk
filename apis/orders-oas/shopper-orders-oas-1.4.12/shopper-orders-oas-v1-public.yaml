openapi: 3.0.3
info:
  title: Shopper Orders
  version: v1
  description: |-
    # API Overview

    The Shopper Orders API enables you to:

    - Create orders based on baskets prepared using the Shopper Baskets API.
    - Add a customer's payment instrument to an order.

    You can choose to supply the full payment information or supply only a customer payment instrument ID and amount. If the customer payment instrument ID is set, all the other properties (except amount) are ignored and the payment data is resolved from the stored customer payment information.

    **Note:** The API doesnâ€™t allow the storage of credit card numbers. The endpoint provides the storage of masked credit card numbers only.

    To update the payment status, use the Orders API.

    Caching is provided for the Shopper Products API. For details, see [Server-Side Web-Tier Caching](https://developer.salesforce.com/docs/commerce/commerce-api/guide/server-side-web-tier-caching.html).

    For additional guidance when working with baskets, see [Build Baskets and Place Orders](https://developer.salesforce.com/docs/commerce/commerce-api/guide/work-with-baskets-orders.html).

    ## Authentication & Authorization

    The client requesting the product information must have access to the Products resource. The Shopper Products API requires a shopper access token from the Shopper Login and API Access Service (SLAS).

    For details on how to request a shopper access token from SLAS, see the guest user flows for [public clients](https://developer.salesforce.com/docs/commerce/commerce-api/guide/slas-public-client.html#guest-user) and [private clients](https://developer.salesforce.com/docs/commerce/commerce-api/guide/slas-private-client.html#guest-user) in the SLAS guides.

    You must include the relevant scope(s) in the client ID used to generate the SLAS token. For details, see the [Authorization Scopes Catalog.](https://developer.salesforce.com/docs/commerce/commerce-api/guide/auth-z-scope-catalog.html)

    ## Use Cases

    ### Use Hooks

    For details on working with hooks, see [Extensibility with Hooks.](https://developer.salesforce.com/docs/commerce/commerce-api/guide/extensibility_via_hooks.html)
servers:
  - url: https://{shortCode}.api.commercecloud.salesforce.com/checkout/shopper-orders/v1
    variables:
      shortCode:
        default: shortCode
paths:
  /organizations/{organizationId}/orders:
    post:
      description: Submits an order based on a prepared basket. The only considered value from the request body is basketId.
      operationId: createOrder
      summary: Submits an order for a basket.
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            examples:
              OrderPost:
                $ref: '#/components/examples/OrderPost'
            schema:
              $ref: '#/components/schemas/Basket'
      responses:
        '200':
          description: Success, the response body contains the submitted order.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                Order:
                  $ref: '#/components/examples/examples-OrderPost'
        '400':
          description: |-
            Possible reasons:
            - a failure during the creation of a gift certificate
            for a gift certificate item.
            - the basket ID in the request body is null or
            empty.
            - an invalid product item.
            - an option with the specified option ID is
            unknown.
            - an option with the specified option value ID
            is unknown.
            - a product item is not available.
            - the customer assigned to the basket does not
            match the verified customer represented by the JWT token.
            - the basket contains flashes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: The basket with the given basket ID is unknown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
  /organizations/{organizationId}/orders/{orderNo}:
    get:
      description: Gets information for an order.
      operationId: getOrder
      summary: Retrieve order information.
      parameters:
        - $ref: '#/components/parameters/orderNo'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success, the response body contains the order.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                Order:
                  $ref: '#/components/examples/OrderGet'
        '404':
          description: The order with the given order number is unknown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BasketNotFound:
                  $ref: '#/components/examples/BasketNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders
            - sfcc.shopper-baskets-orders.rw
  /organizations/{organizationId}/orders/{orderNo}/lookup:
    post:
      description: |+
        Use this endpoint to lookup a guest order.

        **Important**: This endpoint uses the [ShopperTokenTsob](https://developer.salesforce.com/docs/commerce/commerce-api/references/shopper-login?meta=security%3AShopperTokenTsob) security scheme. Always check the Security section of the endpoint documentation, which is hidden by default.

        The API uses the `orderViewCode` generated during the order creation and the `email` of the order customer to lookup a guest order. If email is not provided on the order, the field can be left blank in the lookup request.
        **Note**: In the no email on order scenario, the custom implementation must include an additional verification of an order attribute. For example, a postal code or mobile number.

        This API can also be used for looking up an order for a registered customer. In addition to the verification steps used for guest order lookup, the API also verifies that the customer ID of the order matches with the customer ID supplied in the `ShopperTokenTsob`.

      operationId: guestOrderLookup
      summary: Retrieve order information for a specific guest order.
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/orderNo'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            examples:
              OrderLookUp:
                $ref: '#/components/examples/OrderLookup'
            schema:
              $ref: '#/components/schemas/OrderLookupRequest'
      responses:
        '200':
          description: Success, the response body contains the order found with the order view code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                Order:
                  $ref: '#/components/examples/examples-OrderPost'
        '400':
          description: |-
            Possible reasons:
            - order view code or email is missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: |-
            Order was not found. Possible reasons:
            - the order with the given order no is unknown.
            - the given order view code does not match the one in the order.
            - the given email does not match the one in the order.
            - the authorized customer of a registered customer order lookup does not match the customer in the order.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                OrderNotFound:
                  $ref: '#/components/examples/OrderNotFound'
      security:
        - ShopperTokenTsob:
            - sfcc.shopper-baskets-orders
            - sfcc.shopper-baskets-orders.rw
  /organizations/{organizationId}/orders/{orderNo}/payment-instruments:
    post:
      description: |-
        Adds a payment instrument to an order.

        Details:

        The payment instrument is added with the provided details. The payment method must be applicable for the order see GET
        /baskets/{basketId}/payment-methods, if the payment method is 'CREDIT_CARD' a paymentCard must be specified in the request.
      operationId: createPaymentInstrumentForOrder
      summary: Add a payment instrument to an order.
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/orderNo'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            examples:
              PaymentInstrumentPost:
                $ref: '#/components/examples/PaymentInstrumentPost'
            schema:
              $ref: '#/components/schemas/OrderPaymentInstrumentRequest'
      responses:
        '200':
          description: Success, the response body contains the order with the added payment instrument.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                Order:
                  $ref: '#/components/examples/examples-PaymentInstrumentPost'
        '400':
          description: |-
            Possible reasons:
            - the given order number is invalid.
            - the provided payment method is invalid or not applicable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: The order with the given order number is unknown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                OrderNotFound:
                  $ref: '#/components/examples/OrderNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
  /organizations/{organizationId}/orders/{orderNo}/payment-instruments/{paymentInstrumentId}:
    delete:
      description: Removes a payment instrument of an order.
      operationId: removePaymentInstrumentFromOrder
      summary: Remove a payment instrument from an order.
      parameters:
        - $ref: '#/components/parameters/paymentInstrumentId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/orderNo'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success, the response body contains the order without the deleted payment instrument.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: |-
            Possible reasons:
            - The order with the given order number is unknown.
            - The payment instrument with the given order payment
            instrument ID is unknown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                OrderNotFound:
                  $ref: '#/components/examples/OrderNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
    patch:
      description: |-
        Updates a payment instrument of an order.

        Details:

        The payment instrument is updated with the provided details. The payment method must be applicable for the
        order see GET /baskets/{basketId}/payment-methods, if the payment method is 'CREDIT_CARD' a
        paymentCard must be specified in the request.
      operationId: updatePaymentInstrumentForOrder
      summary: Update payment instrument details for an order.
      parameters:
        - $ref: '#/components/parameters/paymentInstrumentId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/orderNo'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      requestBody:
        content:
          application/json:
            examples:
              PaymentInstrumentPatch:
                $ref: '#/components/examples/PaymentInstrumentPatch'
            schema:
              $ref: '#/components/schemas/OrderPaymentInstrumentRequest'
      responses:
        '200':
          description: Success, the response body contains the order with the updated payment instrument.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                Order:
                  $ref: '#/components/examples/examples-PaymentInstrumentPatch'
        '400':
          description: |-
            Possible reasons:
            - the basket payment instrument with the given
            ID already is permanently masked.
            - the provided payment method is invalid or not applicable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: |-
            Possible reasons:
            - The order with the given order number is unknown.
            - The payment instrument with the given payment
            instrument ID is unknown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                OrderNotFound:
                  $ref: '#/components/examples/OrderNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders.rw
  /organizations/{organizationId}/orders/{orderNo}/payment-methods:
    get:
      description: Gets the applicable payment methods for an existing order considering the open payment amount only.
      operationId: getPaymentMethodsForOrder
      summary: Retrieve payment instrument details for an order.
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/orderNo'
        - $ref: '#/components/parameters/siteId'
        - $ref: '#/components/parameters/locale'
      responses:
        '200':
          description: Success, the response body contains the applicable payment methods for the order.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodResult'
              examples:
                PaymentMethodResult:
                  $ref: '#/components/examples/PaymentMethodsGet'
        '400':
          description: |-
            The customer assigned to the order does not
            match the verified customer represented by the JSON Web Token (JWT).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                BadRequest:
                  $ref: '#/components/examples/BadRequest'
        '404':
          description: The order with the given order number is unknown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                OrderNotFound:
                  $ref: '#/components/examples/OrderNotFound'
      security:
        - ShopperToken:
            - sfcc.shopper-baskets-orders
            - sfcc.shopper-baskets-orders.rw
  /organizations/{organizationId}/orders/{orderNo}/taxes:
    get:
      description: |-
        This method gives you the external taxation data of the order transferred from the basket during
        order creation. This endpoint can be called only if external taxation was used. See POST /baskets
        for more information.
      operationId: getTaxesFromOrder
      summary: Retrieve external taxation data for an order.
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/orderNo'
        - $ref: '#/components/parameters/siteId'
      responses:
        '200':
          description: |-
            Success, the response body contains the external taxation from all items from the referenced
            order.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taxes'
              examples:
                Taxes:
                  $ref: '#/components/examples/OrderTaxGet'
        '404':
          description: The order with the given order number is unknown.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                OrderNotFound:
                  $ref: '#/components/examples/OrderNotFound'
        '409':
          description: "Possible Reasons: \n  - The tax mode of the referenced basket is not set to EXTERNAL."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                InvalidTaxMode:
                  $ref: '#/components/examples/InvalidTaxMode'
                UnsupportedRequest:
                  $ref: '#/components/examples/UnsupportedRequest'
      security:
        - AmOAuth2:
            - sfcc.shopper-baskets-orders
            - sfcc.shopper-baskets-orders.rw
components:
  securitySchemes:
    ShopperToken:
      type: oauth2
      description: "ShopperToken authentication follows the authorization code grant flow, as defined by the OAuth 2.1 standard. Depending on the type of OAuth client (public or private), this authorization flow has further requirements. \nFor a detailed description of the authorization flow, see the [SLAS overview](https://developer.salesforce.com/docs/commerce/commerce-api/references?meta=shopper-login:Summary).\nA shopper token allows you to access the Shopper API endpoints of both OCAPI and the B2C Commerce API. These endpoints can be used to build headless storefronts and other applications.\nThe `ShopperToken` security scheme is a parent of other security schemes, such as `ShopperTokenTsob`. A Shopper API endpoint can require a specific child scheme (`ShopperTokenTsob`, for example) that cannot be accessed with a regular shopper token.\n"
      flows:
        clientCredentials:
          tokenUrl: https://{shortCode}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/token
          scopes:
            sfcc.shopper-baskets-orders: Scope granting read-access to shopper basket or orders endpoints
            sfcc.shopper-baskets-orders.rw: Scope granting read and write access to shopper basket or orders endpoints
        authorizationCode:
          authorizationUrl: https://{short-code}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/authorize
          tokenUrl: https://{short-code}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/token
          scopes:
            sfcc.shopper-baskets-orders: Scope granting read-access to shopper basket or orders endpoints
            sfcc.shopper-baskets-orders.rw: Scope granting read and write access to shopper basket or orders endpoints
    ShopperTokenTsob:
      type: oauth2
      description: "`ShopperTokenTsob` (Tsob = trusted system on behalf) is a child of the `ShopperToken` security scheme and extends the functionality of `ShopperToken` for specific use cases. \nA token of type `ShopperTokenTsob` allows you to access Shopper API endpoints, including OCAPI and Salesforce Commerce API for headless applications. \nBesides endpoints that require this specific subtype, all other endpoints secured by the `ShopperToken` parent scheme can be accessed with a `ShopperTokenTsob`.\nTo learn how to get a `ShopperTokenTsob` token, see [getTrustedSystemAccessToken](https://developer.salesforce.com/docs/commerce/commerce-api/references?meta=shopper-login:getTrustedSystemAccessToken).\n"
      flows:
        clientCredentials:
          tokenUrl: https://{short-code}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/trusted-system/token
          scopes:
            sfcc.shopper-baskets-orders: Scope granting read-access to shopper basket or orders endpoints
            sfcc.shopper-baskets-orders.rw: Scope granting read and write access to shopper basket or orders endpoints
    AmOAuth2:
      type: oauth2
      description: AccountManager OAuth 2.0 bearer token Authentication.
      flows:
        clientCredentials:
          tokenUrl: https://account.demandware.com/dwsso/oauth2/access_token
          scopes:
            sfcc.shopper-baskets-orders: Scope granting read-access to shopper basket or orders endpoints
            sfcc.shopper-baskets-orders.rw: Scope granting read and write access to shopper basket or orders endpoints
        authorizationCode:
          authorizationUrl: https://account.demandware.com/dwsso/oauth2/authorize
          tokenUrl: https://account.demandware.com/dwsso/oauth2/access_token
          scopes:
            sfcc.shopper-baskets-orders: Scope granting read-access to shopper basket or orders endpoints
            sfcc.shopper-baskets-orders.rw: Scope granting read and write access to shopper basket or orders endpoints
  schemas:
    OrganizationId:
      description: An identifier for the organization the request is being made by
      example: f_ecom_zzxy_prd
      type: string
      minLength: 1
      maxLength: 32
    SiteId:
      minLength: 1
      maxLength: 32
      description: The identifier of the site that a request is being made in the context of. Attributes might have site specific values, and some objects may only be assigned to specific sites
      example: RefArch
      type: string
    LanguageCountry:
      pattern: ^[a-z][a-z]-[A-Z][A-Z]$
      description: A concatenated version of the standard Language and Country codes, combined with a hyphen '`-`'.
      example: en-US
      type: string
    LanguageCode:
      pattern: ^[a-z][a-z]$
      description: A two letter lowercase language code conforming to the [ISO 639-1](https://www.iso.org/iso-639-language-codes.html) standard. Additionally, this may be used to submit requests with the header parameter `Accept-Language`, following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766).
      example: en
      type: string
    DefaultFallback:
      default: default
      description: A specialized value indicating the system default values for locales.
      example: default
      enum:
        - default
      type: string
    LocaleCode:
      description: A descriptor for a geographical region by both a language and country code. By combining these two, regional differences in a language can be addressed, such as with the request header parameter `Accept-Language` following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766). This can also just refer to a language code, also RFC 2616/1766 compliant, as a default if there is no specific match for a country. Finally, can also be used to define default behavior if there is no locale specified.
      oneOf:
        - $ref: '#/components/schemas/LanguageCountry'
        - $ref: '#/components/schemas/LanguageCode'
        - $ref: '#/components/schemas/DefaultFallback'
    CountryCode:
      pattern: ^[A-Z][A-Z]$
      description: A two letter uppercase country code conforming to the [ISO 3166-1](https://www.iso.org/iso-3166-country-codes.html) alpha-2 standard.
      example: US
      type: string
    OrderAddress:
      description: Document representing an order address.
      properties:
        address1:
          description: The first address line.
          example: 45 Main Rd.
          type: string
        address2:
          description: The second address line.
          example: Apartment 204
          type: string
        city:
          description: The city.
          example: Boston
          type: string
        companyName:
          description: The company name.
          example: Salesforce
          type: string
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        firstName:
          description: The first name.
          example: Max
          type: string
        fullName:
          description: The full name.
          example: Max Mustermann
          type: string
        id:
          description: The ID of the address.
          example: me
          type: string
        jobTitle:
          description: The job title.
          example: Software Engineer
          type: string
        lastName:
          description: The last name.
          example: Mustermann
          type: string
        phone:
          description: The phone number.
          example: '6175555555'
          type: string
        postBox:
          description: The post office box.
          example: PO BOX 109
          type: string
        postalCode:
          description: The postal code.
          example: '05408'
          type: string
        salutation:
          description: The salutation.
          example: Mr
          type: string
        secondName:
          description: The second name.
          type: string
        stateCode:
          description: The state code.
          example: MA
          type: string
        suffix:
          description: The suffix.
          example: Sr
          type: string
        suite:
          description: The suite.
          example: 24A
          type: string
        title:
          description: The title.
          example: Dr.
          type: string
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
    ProductId:
      minLength: 1
      maxLength: 100
      type: string
      description: The id (SKU) of the product.
      example: apple-ipod-classic
    ProductDetailsLink:
      description: Document representing a link to the resource for product details.
      properties:
        productDescription:
          description: The description of the product.
          example: Nintendo DS revolutionizes handheld gameplay.
          type: string
        productId:
          $ref: '#/components/schemas/ProductId'
        productName:
          description: The name of the product.
          example: Nintendo DS Game Console
          type: string
        title:
          description: The link title.
          example: Nintendo DS Game Console
          type: string
      type: object
      required:
        - productId
      additionalProperties: false
    BonusDiscountLineItem:
      description: Document representing a bonus discount line item.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      type: object
      properties:
        bonusProducts:
          description: The bonus products the customer can choose from.
          type: array
          items:
            $ref: '#/components/schemas/ProductDetailsLink'
        couponCode:
          description: The coupon code that triggered the promotion, if applicable.
          example: 5ties
          type: string
        id:
          description: The ID of the line item. It is read only.
          example: 91f4dd8bfa0653d58b7783b04f
          type: string
        maxBonusItems:
          format: int32
          description: The maximum number of bonus items the user can select for this promotion.
          type: integer
        promotionId:
          description: The ID of the promotion that triggered the creation of the line item.
          example: Buy1Get2
          type: string
    CouponItemId:
      minLength: 1
      type: string
      description: The coupon item ID
      example: d4c9c0141e9c74c150225580f3
    CouponItem:
      description: Document representing a coupon item.
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        code:
          maxLength: 256
          description: The coupon code.
          example: 5ties
          type: string
        couponItemId:
          description: The coupon item ID. It is read only.
          allOf:
            - $ref: '#/components/schemas/CouponItemId'
        statusCode:
          description: The status of the coupon item. It is read only.
          example: no_applicable_promotion
          enum:
            - coupon_code_already_in_basket
            - coupon_code_already_redeemed
            - coupon_code_unknown
            - coupon_disabled
            - redemption_limit_exceeded
            - customer_redemption_limit_exceeded
            - timeframe_redemption_limit_exceeded
            - no_active_promotion
            - coupon_already_in_basket
            - no_applicable_promotion
            - applied
            - adhoc
          type: string
        valid:
          description: |-
            A flag indicating whether the coupon item is valid. A coupon line item is valid if
            the status code is "applied" or "no_applicable_promotion". It is read only.
          example: true
          type: boolean
      required:
        - code
    ISOCurrency:
      pattern: ^[A-Z][A-Z][A-Z]$
      description: A three letter uppercase currency code conforming to the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
      example: USD
      type: string
    NoValue:
      default: N/A
      description: A specialized value indicating the lack of definition of a currency, for example, if the value of the monetary value of the currency is an undefined number.
      example: N/A
      enum:
        - N/A
      type: string
    CurrencyCode:
      description: A three letter uppercase currency code conforming to the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard, or the string `N/A` indicating that a currency is not applicable.
      example: USD
      oneOf:
        - $ref: '#/components/schemas/ISOCurrency'
        - $ref: '#/components/schemas/NoValue'
    CustomerInfo:
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      description: The customer information for guest or logged-in customers.
      type: object
      properties:
        customerId:
          maxLength: 100
          description: The customer ID. It is read only.
          example: abMKqMaNYOBMnNdDNzyC5oNTi5
          type: string
        customerName:
          description: The customer name.
          example: Max Mustermann
          type: string
        customerNo:
          maxLength: 100
          description: The customer number.
          example: '0002352'
          type: string
        email:
          description: The customer's email address.
          example: no-reply@salesforce.com
          type: string
      required:
        - email
    GiftCertificateItemId:
      example: 629dea6e7b61e58da629b57b21
      type: string
      minLength: 1
    GiftCertificateItem:
      description: A gift certificate item.
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        amount:
          format: double
          description: The gift certificate item amount.
          example: 20
          type: number
        giftCertificateItemId:
          description: The item ID. It is read only.
          allOf:
            - $ref: '#/components/schemas/GiftCertificateItemId'
        message:
          maxLength: 4000
          description: The gift certificate message.
          example: Birthday present.
          type: string
        recipientEmail:
          minLength: 1
          description: The recipient email.
          example: no-reply@salesforce.com
          type: string
        recipientName:
          description: The recipient's name.
          example: Daniel Mustermann
          type: string
        senderName:
          description: The sender's name.
          example: Max Mustermann
          type: string
        shipmentId:
          description: The ID of the shipment this item belongs to.
          example: me
          type: string
      required:
        - amount
        - recipientEmail
    GroupedTaxItem:
      description: Document representing the grouped tax item.
      type: object
      properties:
        taxRate:
          description: The tax rate. It is read only.
          type: number
          format: double
          example: 0.1
        taxValue:
          description: The summed up tax total for the tax rate. It is read only.
          type: number
          format: double
          example: 10.03
      additionalProperties: false
    Discount:
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      description: Document representing a discount.
      type: object
      properties:
        amount:
          format: double
          description: The discount amount for discount types that define specific discount amounts. It is read only.
          example: 130.88
          type: number
        percentage:
          format: double
          description: The discount percent for discount types that define percentage discounts. It is read only.
          example: 0.19
          type: number
        priceBookId:
          description: The price book ID that is used with some types. It is read only.
          example: usd-sale-prices
          type: string
        type:
          description: The type of discount. It is read only.
          example: fixed_price
          enum:
            - percentage
            - fixed_price
            - amount
            - free
            - price_book_price
            - bonus
            - total_fixed_price
            - bonus_choice
            - percentage_off_options
          type: string
      required:
        - type
    PriceAdjustmentId:
      example: ba248424e3eee797f062161f8b
      type: string
    PriceAdjustment:
      description: |-
        Document representing a price adjustment within a basket or order. Price adjustments
        can be assigned at the order, product, or shipping level.
      properties:
        appliedDiscount:
          description: |-
            Details describing the discount this price adjustment is based on. For adjustments
            not based on a discount, this value is null.
          allOf:
            - $ref: '#/components/schemas/Discount'
        couponCode:
          description: |-
            The coupon code of the coupon this price adjustment is based on. For adjustments
            not based on a coupon, this value is null. It is read only.
          example: 5ties
          type: string
        createdBy:
          description: The user who created the price adjustment. It is read only.
          example: Support
          type: string
        creationDate:
          description: The timestamp when the price adjustment was created. It is read only.
          example: '2015-05-19T15:23:18.000Z'
          type: string
          format: date-time
        custom:
          description: |-
            A flag indicating whether this price adjustment was created by custom logic. This
            flag is set to true unless the price adjustment was created by the promotion
            engine.
          example: true
          type: boolean
        itemText:
          description: The text describing the item.
          type: string
        lastModified:
          description: The timestamp when the price adjustment was last modified. It is read only.
          example: '2021-02-25T09:58:08.715Z'
          type: string
          format: date-time
        manual:
          description: |-
            A flag indicating whether this price adjustment was created by a manual process.
            If the price adjustment was created by the promotion engine, this value is always
            false.
          example: true
          type: boolean
        price:
          format: double
          description: The adjustment price. It is read only.
          example: 120.88
          type: number
        priceAdjustmentId:
          description: The price adjustment ID. It is read only.
          allOf:
            - $ref: '#/components/schemas/PriceAdjustmentId'
        promotionId:
          description: |-
            The ID of the related promotion. Custom price adjustments
            can be assigned any promotion ID so long it is not
            used by a price adjustment belonging to the same item,
            and is not used by a promotion defined in the promotion engine.
            If not specified, a promotion ID is generated.
          type: string
        reasonCode:
          description: The reason for the price adjustment.
          type: string
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
    Status:
      description: Document representing an object status.
      properties:
        code:
          description: The status code.
          type: string
        message:
          description: The status message.
          type: string
        status:
          format: int32
          description: |-
            The status.
            For more information on the status values see Status.OK and Status.ERROR.
          type: integer
      type: object
      additionalProperties: false
    PaymentCard:
      additionalProperties: false
      description: Document representing a payment card.
      type: object
      properties:
        cardType:
          maxLength: 256
          description: The payment card type.
          example: Visa
          type: string
        creditCardExpired:
          description: A flag indicating if the credit card is expired. It is read only.
          example: true
          type: boolean
        creditCardToken:
          description: |-
            A credit card token. If a credit card is tokenized, the token can be used to look up the credit card data
            in the token store.
          example: E67TY8GQ27X
          type: string
        expirationMonth:
          format: int32
          description: The month when the payment card expires.
          example: 3
          type: integer
        expirationYear:
          format: int32
          description: The year when the payment card expires.
          example: 2025
          type: integer
        holder:
          maxLength: 256
          description: The payment card holder.
          example: Max Mustermann
          type: string
        issueNumber:
          maxLength: 256
          description: The payment card issue number.
          example: '2'
          type: string
        maskedNumber:
          maxLength: 4000
          description: The masked payment card number.
          example: '*********4422'
          type: string
        numberLastDigits:
          maxLength: 4000
          description: The last digits of the payment card number. It is read only.
          example: '4422'
          type: string
        validFromMonth:
          minimum: 1
          maximum: 12
          format: int32
          description: The month the payment card is valid from.
          example: 5
          type: integer
        validFromYear:
          format: int32
          description: The year the payment card is valid from.
          example: 2015
          type: integer
    PaymentInstrumentId:
      description: The payment instrument ID
      example: ba248424e3eee797f062162f8b
      type: string
    OrderPaymentInstrument:
      description: Document representing an order payment instrument.
      properties:
        amount:
          format: double
          description: The payment transaction amount.
          example: 130.88
          type: number
        authorizationStatus:
          description: The authorization status of the payment transaction. It is read only.
          allOf:
            - $ref: '#/components/schemas/Status'
        bankRoutingNumber:
          maxLength: 256
          description: The bank routing number.
          example: '12030000'
          type: string
        maskedGiftCertificateCode:
          description: The gift certificate code with the last 4 characters not masked.
          example: '******Gzzy'
          type: string
        paymentCard:
          description: The payment card.
          allOf:
            - $ref: '#/components/schemas/PaymentCard'
        paymentInstrumentId:
          description: The payment instrument ID. It is read only.
          allOf:
            - $ref: '#/components/schemas/PaymentInstrumentId'
        paymentMethodId:
          maxLength: 256
          description: The payment method ID. It is read only.
          example: CREDIT_CARD
          type: string
      type: object
    ProductItem:
      description: Document representing a product item.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      type: object
      properties:
        adjustedTax:
          format: double
          description: The tax on the line item, including any adjustments. It is read only.
          example: 19
          type: number
        basePrice:
          format: double
          description: |-
            The base price of the line item, which is the unit price not including
            adjustments. If the taxation policy is net, it doesn't include tax. If the
            taxation policy is gross, it includes tax. It is read only.
          example: 130
          type: number
        bonusDiscountLineItemId:
          description: The ID of the bonus discount line item this bonus product relates to. It is read only.
          type: string
        bonusProductLineItem:
          description: A flag indicating whether the product item is a bonus.
          example: true
          type: boolean
        bundledProductItems:
          description: The bundled product items.
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        gift:
          description: Returns true if the item is a gift. It is read only.
          example: true
          type: boolean
        giftMessage:
          description: The gift message.
          example: Happy Birthday
          type: string
        inventoryId:
          maxLength: 256
          description: The inventory list ID associated with this item.
          example: inventory
          type: string
        itemId:
          description: |-
            The product item ID. Use it to identify this item when updating its quantity or
            creating a custom price adjustment for it. It is read only.
          allOf:
            - $ref: '#/components/schemas/ItemId'
        itemText:
          description: The text describing the item.
          type: string
        optionItems:
          description: The option items.
          type: array
          items:
            $ref: '#/components/schemas/OptionItem'
        price:
          format: double
          description: |-
            The price of the line item before applying any adjustments. If the line item is based on net pricing
            then the net price is returned. If the line item is based on gross
            pricing then the gross price is returned. It is read only.
          type: number
        priceAdjustments:
          description: The price adjustments.
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        priceAfterItemDiscount:
          format: double
          description: |-
            The price of the product line item including item-level adjustments, but not
            including order-level adjustments or shipping charges. If the taxation policy is
            net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 20.99
          type: number
        priceAfterOrderDiscount:
          format: double
          description: |-
            The price of the product line item including item-level adjustments and prorated
            order-level adjustments, but not including shipping charges. If the taxation
            policy is net, it doesn't include tax. If the taxation policy is gross, it
            includes tax. It is read only.
          example: 15.5
          type: number
        productId:
          maxLength: 100
          description: The ID of the product.
          example: nintendo-ds-console
          type: string
        productListItem:
          description: |-
            If this product line item was added from a product list, this value is a reference
            to the corresponding product list item.
          allOf:
            - $ref: '#/components/schemas/ProductListItemReference'
        productName:
          description: The name of the product.
          example: Nintendo DS Game Console
          type: string
        quantity:
          minimum: 0
          format: double
          description: The quantity of the products represented by this item.
          example: 1
          type: number
        shipmentId:
          description: The ID of the shipment this item belongs to.
          example: me
          type: string
        shippingItemId:
          description: |-
            If the product line item has a related shipping item, this value is its ID. A
            related shipping item represents a surcharge applied to individual products using
            a particular shipping method. It is read only.
          example: 006490dcc338feeafc71c964bf
          type: string
        tax:
          format: double
          description: The tax for the product item, not including price adjustments. It is read only.
          example: 0.3
          type: number
        taxBasis:
          format: double
          description: The price used to calculate the tax for this product item. It is read only.
          example: 30
          type: number
        taxClassId:
          description: |-
            The tax class ID for the product item, or null
            if no tax class ID is associated with the product item. It is read only.
          type: string
        taxRate:
          format: double
          description: |-
            The tax rate, which is the decimal tax rate to be applied
            to the product represented by this item. It is read only.
          example: 0.9
          type: number
    ItemId:
      description: The item id.
      example: 430ef5aad3a24de59378458434
      type: string
    OptionItem:
      description: |-
        An option item represents an optional purchase related to a product item, and is always associated with that parent product
        item. An option item can have different values from which to select. For example, a refrigerator item can have an option item representing an extended warranty, with a set of option item values representing different warranty lengths. When a shopper purchases the warranty option item together with the parent refrigerator item, they select one of the available warranty option item values.
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        adjustedTax:
          format: double
          description: The tax on the line item, including any adjustments. It is read only.
          example: 19
          type: number
        basePrice:
          format: double
          description: |-
            The base price of the line item, which is the unit price not including adjustments.
            If the taxation policy is net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 50
          type: number
        bonusDiscountLineItemId:
          description: The ID of the bonus discount line item this bonus product relates to. It is read only.
          example: ba248414e3eee797f062162f8b
          type: string
        bonusProductLineItem:
          description: A flag indicating whether the product item is a bonus. It is read only.
          example: false
          type: boolean
        bundledProductItems:
          description: The bundled product items.
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        gift:
          description: Returns true if the item is a gift. It is read only.
          example: false
          type: boolean
        giftMessage:
          description: The gift message.
          example: Happy Birthday
          type: string
        inventoryId:
          maxLength: 256
          description: The inventory list ID associated with this item. It is read only.
          example: inventory
          type: string
        itemId:
          description: The product item ID. Use it to identify this item when updating its quantity or creating a custom price adjustment for it. It is read only.
          allOf:
            - $ref: '#/components/schemas/ItemId'
        itemText:
          description: The text describing the item.
          example: The item text.
          type: string
        optionId:
          maxLength: 256
          description: The ID of the option. It is read only.
          example: consoleWarranty
          type: string
        optionItems:
          description: The option items.
          type: array
          items:
            $ref: '#/components/schemas/OptionItem'
        optionValueId:
          maxLength: 256
          description: The ID of the option value. It is read only.
          example: '000'
          type: string
        price:
          format: double
          description: |-
            The price of the line item before applying any adjustments. If the taxation policy is net, it doesn't include tax.
            If the taxation policy is gross, it includes tax. It is read only.
          example: 150.99
          type: number
        priceAdjustments:
          description: The price adjustments.
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        priceAfterItemDiscount:
          format: double
          description: |-
            The price of the product line item including item-level adjustments, but not including order-level adjustments or
            shipping charges. If the taxation policy is net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 50.99
          type: number
        priceAfterOrderDiscount:
          format: double
          description: |-
            The price of the product line item including item-level adjustments and prorated order-level adjustments, but not
            including shipping charges. If the taxation policy is net, it doesn't include tax. If the taxation policy is gross, it
            includes tax. It is read only.
          example: 40.5
          type: number
        productId:
          $ref: '#/components/schemas/ProductId'
        productListItem:
          description: If this product line item was added from a product list, this value is a reference to the corresponding product list item.
          allOf:
            - $ref: '#/components/schemas/ProductListItemReference'
        productName:
          description: The name of the product.
          example: Nintendo DS Game Console
          type: string
        quantity:
          minimum: 0
          format: double
          description: The ordered quantity of the products represented by this item.
          example: 1
          type: number
        shipmentId:
          description: The ID of the shipment this item belongs to.
          example: me
          type: string
        shippingItemId:
          description: |-
            If the product line item has a related shipping item, this value is its ID. A related shipping item represents a
            surcharge applied to individual products using a particular shipping method. It is read only.
          example: 006490dcc338feeafc71c964bf
          type: string
        tax:
          format: double
          description: The tax on the line item before applying any adjustments. It is read only.
          example: 0
          type: number
        taxBasis:
          format: double
          description: The amount used to calculate the tax for this item. It is read only.
          example: 50
          type: number
        taxClassId:
          description: |-
            The tax class ID for the product item, or null
            if no tax class ID is associated with the product item. It is read only.
          type: string
        taxRate:
          format: double
          description: |-
            The tax rate, which is the decimal tax rate to be applied
            to the product represented by this item. It is read only.
          example: 0.19
          type: number
      required:
        - optionId
        - optionValueId
    ProductListLink:
      description: Document representing a link to a product list.
      properties:
        description:
          description: The description of this product list.
          type: string
        name:
          description: The name of this product list.
          type: string
        public:
          description: |-
            A flag indicating whether the owner made this product list available for access
            by other customers. It is read only.
          example: true
          type: boolean
        title:
          description: The link title.
          type: string
        type:
          description: The type of the product list.
          example: shopping_list
          enum:
            - wish_list
            - gift_registry
            - shopping_list
            - custom_1
            - custom_2
            - custom_3
          type: string
      type: object
      additionalProperties: false
    ProductListItemReference:
      description: Document representing product list item details.
      type: object
      additionalProperties: false
      properties:
        id:
          description: The ID of the product list item. It is read only.
          allOf:
            - $ref: '#/components/schemas/ItemId'
        priority:
          format: int32
          description: The priority of the product list item.
          example: 1
          type: integer
        productDetailsLink:
          $ref: '#/components/schemas/ProductDetailsLink'
        productList:
          description: A reference to the associated product list. It is read only.
          allOf:
            - $ref: '#/components/schemas/ProductListLink'
        public:
          example: false
          type: boolean
        purchasedQuantity:
          format: double
          description: The total quantity of this item purchased from the product list.
          example: 0
          type: number
        quantity:
          minimum: 0
          format: double
          description: The number of products or gift certificates that get shipped when purchasing this product list item.
          example: 1
          type: number
        type:
          description: Specifies whether the item is a product or a gift certificate.
          example: product
          enum:
            - product
            - gift_certificate
          type: string
      required:
        - id
    ShipmentId:
      minLength: 1
      type: string
      example: me
      description: The identifier of the shipment
    ShippingPromotion:
      description: Document representing a shipping promotion.
      properties:
        calloutMsg:
          description: The localized callout message of the promotion.
          example: $30 Fixed Shipping Amount Above 150
          type: string
        promotionId:
          description: The unique ID of the promotion.
          example: $30FixedShippingAmountAbove150
          type: string
        promotionName:
          description: The localized promotion name.
          example: $30 Fixed Shipping Amount Above 150
          type: string
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
    ShippingMethod:
      description: Document representing a shipping method.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        description:
          description: The localized description of the shipping method.
          example: Order received within 7-10 business days
          type: string
        externalShippingMethod:
          description: The external shipping method.
          type: string
        id:
          maxLength: 256
          description: The shipping method ID.
          example: '001'
          type: string
        name:
          description: The localized name of the shipping method.
          example: Ground
          type: string
        price:
          format: double
          description: |-
            The shipping cost total, including shipment level costs,
            product level fix, and surcharge costs. It is read only.
          example: 15
          type: number
        shippingPromotions:
          description: |-
            The array of active customer shipping promotions for this shipping
            method. This array can be empty.
          type: array
          items:
            $ref: '#/components/schemas/ShippingPromotion'
      type: object
      required:
        - id
    Shipment:
      description: Document representing a shipment.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        adjustedMerchandizeTotalTax:
          format: double
          description: |-
            The total tax on products in the shipment, including item-level price adjustments but not including
            service charges such as shipping. If the Discount Taxation preference is set to Tax Products and
            Shipping Only Based on Adjusted Price, this amount also includes prorated order-level price adjustments. It is read only.
          example: 4.95
          type: number
        adjustedShippingTotalTax:
          format: double
          description: The total tax on shipping charges in the shipment, including shipping price adjustments. It is read only.
          example: 0.3
          type: number
        gift:
          description: A flag indicating whether the shipment is a gift. It is read only.
          example: true
          type: boolean
        giftMessage:
          description: The gift message.
          example: Happy Birthday
          type: string
        merchandizeTotalTax:
          format: double
          description: |-
            The total tax on products in the shipment, not including price adjustments or service charges such as
            shipping. It is read only.
          example: 4.95
          type: number
        productSubTotal:
          format: double
          description: |-
            The total price of all products in the shipment, including item-level adjustments, but not including
            order-level adjustments or shipping charges. If the taxation policy is net, it doesn't include tax. If
            the taxation policy is gross, it includes tax. It is read only.
          example: 99
          type: number
        productTotal:
          format: double
          description: |-
            The total price of all products in the shipment including item-level adjustments and prorated
            order-level adjustments, but not including shipping charges. If the taxation policy is net, it doesn't
            include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 99
          type: number
        shipmentId:
          description: The order-specific ID of the shipment. The default value is 'me'.
          default: me
          allOf:
            - $ref: '#/components/schemas/ShipmentId'
        shipmentNo:
          description: The shipment number of this shipment. This number is automatically generated. It is read only.
          type: string
        shipmentTotal:
          format: double
          description: |-
            The total price of all products in the shipment including item-level adjustments, shipping charges,
            and tax. It is read only.
          example: 39.99
          type: number
        shippingAddress:
          description: The shipping address.
          allOf:
            - $ref: '#/components/schemas/OrderAddress'
        shippingMethod:
          $ref: '#/components/schemas/ShippingMethod'
        shippingStatus:
          description: The shipping status of the shipment.
          example: shipped
          enum:
            - not_shipped
            - shipped
          type: string
        shippingTotal:
          format: double
          description: |-
            The total price of all shipping charges in the shipment, including shipping adjustments. If the
            taxation policy is net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 5.99
          type: number
        shippingTotalTax:
          format: double
          description: The total tax on shipping charges in the shipment, not including shipping price adjustments. It is read only.
          example: 0.3
          type: number
        taxTotal:
          format: double
          description: |-
            The total tax on the shipment, including item-level price adjustments and service charges such as
            shipping. If the Discount Taxation preference is set to Tax Products and Shipping Only Based on
            Adjusted Price, this amount also includes prorated order-level price adjustments. It is read only.
          example: 1.8
          type: number
        trackingNumber:
          description: The tracking number of the shipment.
          example: 1Z204E380338943508
          type: string
      type: object
    ShippingItem:
      description: Document representing a shipping item.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        adjustedTax:
          format: double
          description: The tax for the shipping item, including price adjustments. It is read only.
          example: 19
          type: number
        basePrice:
          format: double
          description: |-
            The base price of the shipping item, which is the unit price not including adjustments.
            If the taxation policy is net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 50
          type: number
        itemId:
          description: |-
            The shipping item ID. Use it to identify this shipping item when updating its quantity or creating a
            custom price adjustment for it. It is read only.
          example: 430ef5aad3a24de59378458434
          type: string
        itemText:
          description: The text describing the shipping item.
          example: Shipping
          type: string
        price:
          format: double
          description: |-
            The price of the line item before applying any adjustments. If the line item is based on net pricing
            then the net price is returned. If the line item is based on gross
            pricing then the gross price is returned. It is read only.
          type: number
        priceAdjustments:
          description: The price adjustments.
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        priceAfterItemDiscount:
          format: double
          description: |-
            The price of the shipping item including item-level adjustments, but not including order-level
            adjustments or shipping charges. If the taxation policy is net, it doesn't include tax.
            If the taxation policy is gross, it includes tax. It is read only.
          type: number
        shipmentId:
          description: The identifier of the shipment to which this item belongs.
          allOf:
            - $ref: '#/components/schemas/ShipmentId'
        tax:
          format: double
          description: The tax on the product item, not including adjustments. It is read only.
          example: 0.19
          type: number
        taxBasis:
          format: double
          description: The price used to calculate the tax for this shipping item. It is read only.
          type: number
        taxClassId:
          description: |-
            The tax class ID for the product item, or null
            if no tax class ID is associated with the product item. It is read only.
          type: string
        taxRate:
          format: double
          description: The tax rate applicable to this product line item. For a 10% tax rate, the value is 0.1. It is read only.
          type: number
      type: object
    Basket:
      description: Document representing a basket.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        adjustedMerchandizeTotalTax:
          format: double
          description: |-
            The total tax on products in the shipment, including item-level price adjustments but not
            including service charges such as shipping. If the Discount Taxation preference is set to Tax
            Products and Shipping Only Based on Adjusted Price, this amount also includes prorated
            order-level price adjustments. It is read only.
          example: 4.95
          type: number
        adjustedShippingTotalTax:
          format: double
          description: The total tax on shipping charges in the shipment, including shipping price adjustments. It is read only.
          example: 0.3
          type: number
        agentBasket:
          description: Is the basket created by an agent? It is read only.
          example: true
          type: boolean
        basketId:
          description: The unique identifier for the basket. It is read only.
          example: e78aa5646a8efebdd9cdd38be7
          type: string
        billingAddress:
          description: The billing address.
          allOf:
            - $ref: '#/components/schemas/OrderAddress'
        bonusDiscountLineItems:
          description: The bonus discount line items.
          type: array
          items:
            $ref: '#/components/schemas/BonusDiscountLineItem'
        channelType:
          description: The sales channel. It is read only.
          example: storefront
          enum:
            - storefront
            - callcenter
            - marketplace
            - dss
            - store
            - pinterest
            - twitter
            - facebookads
            - subscriptions
            - onlinereservation
            - customerservicecenter
            - instagramcommerce
            - tiktok
            - snapchat
            - google
            - whatsapp
            - youtube
          type: string
        couponItems:
          description: The coupon items.
          type: array
          items:
            $ref: '#/components/schemas/CouponItem'
        creationDate:
          description: The timestamp when the basket was created. It is read only.
          example: '2015-05-19T15:23:18.000Z'
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        customerInfo:
          description: The customer information, if the customer is logged in.
          allOf:
            - $ref: '#/components/schemas/CustomerInfo'
        giftCertificateItems:
          description: The gift certificate line items.
          type: array
          items:
            $ref: '#/components/schemas/GiftCertificateItem'
        groupedTaxItems:
          description: |-
            Tax values that are grouped and summed based on the tax rate. The tax totals of the line items with the same
            tax rate are grouped together and summed up. This does not affect the calculation in any way. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/GroupedTaxItem'
        inventoryReservationExpiry:
          description: The expiration datetime of the inventory reservation. It is read only.
          example: '2015-05-19T15:30:18.000Z'
          type: string
          format: date-time
        lastModified:
          description: The timestamp when the basket was last modified. It is read only.
          example: '2015-05-19T15:25:18.000Z'
          type: string
          format: date-time
        merchandizeTotalTax:
          format: double
          description: |-
            The total products tax in the purchase currency.
            Merchandise total price represents the sum of the product prices before
            services (such as shipping) or adjustments from promotions have
            been added. It is read only.
          example: 4.95
          type: number
        orderPriceAdjustments:
          description: The order-level price adjustments.
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        orderTotal:
          format: double
          description: The total price, including products, shipping and tax. It is read only.
          example: 110.24
          type: number
        paymentInstruments:
          description: The payment instruments list.
          type: array
          items:
            $ref: '#/components/schemas/OrderPaymentInstrument'
        productItems:
          description: The product items.
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        productSubTotal:
          format: double
          description: |-
            The total price of all products including item-level adjustments, but not including order-level adjustments or shipping
            charges. If the taxation policy is net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 99
          type: number
        productTotal:
          format: double
          description: |-
            The total price of all products including adjustments, but not including shipping charges. If the taxation policy is net,
            it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 88
          type: number
        shipments:
          description: The shipments.
          type: array
          items:
            $ref: '#/components/schemas/Shipment'
        shippingItems:
          description: The shipping items.
          type: array
          items:
            $ref: '#/components/schemas/ShippingItem'
        shippingTotal:
          format: double
          description: |-
            The total price of all shipping charges, including shipping adjustments. If the taxation policy is net, it doesn't
            include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 5.99
          type: number
        shippingTotalTax:
          format: double
          description: The total tax on all shipping charges, not including shipping adjustments. It is read only.
          example: 0.3
          type: number
        sourceCode:
          description: The source code assigned to the basket. It is read only.
          example: OUTDOOR1
          type: string
        taxTotal:
          format: double
          description: The total tax amount. It is read only.
          example: 5.25
          type: number
        taxation:
          description: The taxation policy (gross or net). It is read only.
          example: net
          enum:
            - gross
            - net
          type: string
        taxRoundedAtGroup:
          description: If the tax is rounded at the group level, this is set to true. If the tax is rounded at the item or unit level, it is set to false.
          example: true
          type: boolean
        temporaryBasket:
          description: If the created basket is a temporary basket, this is set to true. Otherwise, it is set to false.
          example: true
          type: boolean
      type: object
    OrderNo:
      description: The order number
      minLength: 1
      maxLength: 50
      type: string
      example: '00000410'
    Order:
      description: Document representing an order.
      type: object
      properties:
        adjustedMerchandizeTotalTax:
          format: double
          description: |-
            The total tax on products in the order, including price adjustments, but not including service charges such as
            shipping. It is read only.
          example: 1.5
          type: number
        adjustedShippingTotalTax:
          format: double
          description: The total tax on shipping charges in the order, including shipping price adjustments. It is read only.
          example: 0.3
          type: number
        billingAddress:
          description: The billing address.
          allOf:
            - $ref: '#/components/schemas/OrderAddress'
        bonusDiscountLineItems:
          description: The bonus discount line items.
          type: array
          items:
            $ref: '#/components/schemas/BonusDiscountLineItem'
        channelType:
          description: The sales channel. It is read only.
          example: storefront
          enum:
            - storefront
            - callcenter
            - marketplace
            - dss
            - store
            - pinterest
            - twitter
            - facebookads
            - subscriptions
            - onlinereservation
            - customerservicecenter
            - instagramcommerce
            - tiktok
            - snapchat
            - google
            - whatsapp
            - youtube
          type: string
        confirmationStatus:
          description: The confirmation status.
          example: confirmed
          enum:
            - not_confirmed
            - confirmed
          type: string
        couponItems:
          description: The coupon items. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/CouponItem'
        createdBy:
          description: |-
            This value depends on how the order was created. If a shopper created the order, this value is Customer.
            If a job created the order, this value is System. Otherwise, this value is the name of the user who created the order. It is read only.
          example: Customer
          type: string
        creationDate:
          description: The timestamp when the order was created. It is read only.
          example: '2015-05-19T15:23:18.000Z'
          type: string
          format: date-time
        currency:
          description: The ISO 4217 mnemonic code of the currency. It is read only.
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
        customerInfo:
          description: The customer information for guest or logged-in customers. It is read only.
          allOf:
            - $ref: '#/components/schemas/CustomerInfo'
        customerName:
          description: The customer name. It is read only.
          example: Max Mustermann
          type: string
        exportStatus:
          description: The export status of the order.
          example: exported
          enum:
            - not_exported
            - exported
            - ready
            - failed
          type: string
        externalOrderStatus:
          description: The external status of the order.
          example: Submitted
          type: string
        giftCertificateItems:
          description: The gift certificate line items. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/GiftCertificateItem'
        globalPartyId:
          description: The Customer 360 Global Party ID associated with the shopper. It is read only.
          example: GP_1234
          type: string
        lastModified:
          description: The timestamp when the order was last modified. It is read only.
          example: '2021-02-25T09:58:08.715Z'
          type: string
          format: date-time
        merchandizeTotalTax:
          format: double
          description: |-
            The total products tax in the purchase currency. Merchandise total prices represent the sum of product prices
            not including shipping or adjustments. It is read only.
          example: 1.5
          type: number
        orderNo:
          description: The order number.
          example: '00000410'
          allOf:
            - $ref: '#/components/schemas/OrderNo'
        orderPriceAdjustments:
          description: The order-level price adjustments. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        orderToken:
          description: |-
            The order token used to secure the lookup of an order on base of the
            plain order number. The order token contains only URL safe characters. It is read only.
          type: string
        orderTotal:
          format: double
          description: The total price, including products, shipping, and tax. It is read only.
          example: 110.24
          type: number
        orderViewCode:
          description: |-
            The order view code used to secure the order lookup of an order using Order Lookup API.
            The order view code contains only URL safe characters.
            Warning : Order view code must not be exposed in the URL and must only be displayed to the shopper or sent as an email.
            Order view code must not be logged in the code. It is read only.
          type: string
        paymentInstruments:
          description: The payment instruments list.
          type: array
          items:
            $ref: '#/components/schemas/OrderPaymentInstrument'
        paymentStatus:
          description: The payment status.
          example: paid
          enum:
            - not_paid
            - part_paid
            - paid
          type: string
        productItems:
          description: The product items. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        productSubTotal:
          format: double
          description: |-
            The total price of all products including item-level adjustments, but not including
            order-level adjustments or shipping charges. If the taxation policy is net, it doesn't include tax.
            If the taxation policy is gross, it includes tax. It is read only.
          example: 99
          type: number
        productTotal:
          format: double
          description: |-
            The total price of all products in the shipment including item-level adjustments and prorated
            order-level adjustments, but not including shipping charges. If the taxation policy is net,
            it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 99
          type: number
        taxRoundedAtGroup:
          description: If the tax is rounded at the group level, this is set to true. If the tax is rounded at the item or unit level, it is set to false. It is read only.
          type: boolean
          example: true
        shipments:
          description: The shipments. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/Shipment'
        shippingItems:
          description: The shipping items. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/ShippingItem'
        shippingStatus:
          description: The shipping status.
          example: shipped
          enum:
            - not_shipped
            - part_shipped
            - shipped
          type: string
        shippingTotal:
          format: double
          description: |-
            The total price of all shipping charges, including shipping adjustments. If the taxation policy is net,
            it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 5.99
          type: number
        shippingTotalTax:
          format: double
          description: The total tax on all shipping charges, not including shipping adjustments. It is read only.
          example: 0.3
          type: number
        siteId:
          description: The order's site. It is read only.
          example: ShoppingSite
          allOf:
            - $ref: '#/components/schemas/SiteId'
        sourceCode:
          description: The source code assigned to the basket from which this order was created. It is read only.
          example: OUTDOOR1
          type: string
        status:
          description: The status.
          example: created
          enum:
            - created
            - new
            - completed
            - cancelled
            - replaced
            - failed
          type: string
        taxTotal:
          format: double
          description: The total tax amount. It is read only.
          example: 5.25
          type: number
        taxation:
          description: The taxation policy (gross or net). It is read only.
          example: net
          enum:
            - gross
            - net
          type: string
        groupedTaxItems:
          description: |-
            Tax values that are grouped and summed based on the tax rate. The tax totals of the line items with the same
            tax rate are grouped together and summed up. This does not affect the calculation in any way. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/GroupedTaxItem'
        guest:
          description: The registration status of the customer. It is read only.
          type: boolean
          example: true
    ErrorResponse:
      type: object
      additionalProperties: true
      properties:
        title:
          description: "A short, human-readable summary of the problem\ntype.  It will not change from occurrence to occurrence of the \nproblem, except for purposes of localization\n"
          type: string
          maxLength: 256
          example: You do not have enough credit
        type:
          description: |
            A URI reference [RFC3986] that identifies the
            problem type.  This specification encourages that, when
            dereferenced, it provide human-readable documentation for the
            problem type (e.g., using HTML [W3C.REC-html5-20141028]).  When
            this member is not present, its value is assumed to be
            "about:blank". It accepts relative URIs; this means
            that they must be resolved relative to the document's base URI, as
            per [RFC3986], Section 5.
          type: string
          maxLength: 2048
          example: NotEnoughMoney
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
          example: Your current balance is 30, but that costs 50
        instance:
          description: |
            A URI reference that identifies the specific
            occurrence of the problem.  It may or may not yield further
            information if dereferenced.  It accepts relative URIs; this means
            that they must be resolved relative to the document's base URI, as
            per [RFC3986], Section 5.
          type: string
          maxLength: 2048
          example: /account/12345/msgs/abc
      required:
        - title
        - type
        - detail
    OrderLookupRequest:
      description: Document representing an order lookup request.
      type: object
      required:
        - email
        - orderViewCode
      additionalProperties: false
      properties:
        email:
          description: The customer's email address associated with order to be looked up.
          type: string
          example: no-reply@salesforce.com
        orderViewCode:
          description: The order view code associated with the order to be looked up.
          type: string
    OrderPaymentCardRequest:
      description: Document representing an order payment card request.
      type: object
      properties:
        cardType:
          maxLength: 256
          description: 'The payment card type (for example: Visa).'
          example: Visa
          type: string
        creditCardToken:
          description: |-
            A credit card token. If a credit card is tokenized, the token can be used to look up the credit card data
            in the token store.
          example: E67TY8GQ27X
          type: string
        expirationMonth:
          format: int32
          description: The month when the payment card expires.
          example: 3
          type: integer
        expirationYear:
          format: int32
          description: The year when the payment card expires.
          example: 2025
          type: integer
        holder:
          maxLength: 256
          description: The payment card holder.
          example: Max Mustermann
          type: string
        issueNumber:
          maxLength: 256
          description: The payment card issue number.
          example: '2'
          type: string
        maskedNumber:
          pattern: ^[0-9 -]{0,7}\D{6,15}\d{0,4}$
          maxLength: 25
          description: The masked payment card number.
          example: '*********4422'
          type: string
        validFromMonth:
          minimum: 1
          maximum: 12
          format: int32
          description: The month the payment card is valid from.
          example: 5
          type: integer
        validFromYear:
          format: int32
          description: The year the payment card is valid from.
          example: 2019
          type: integer
    OrderPaymentInstrumentRequest:
      description: Document representing an order payment instrument request.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      type: object
      properties:
        amount:
          format: double
          description: The payment transaction amount.
          example: 130.88
          type: number
        bankRoutingNumber:
          maxLength: 256
          description: The bank routing number.
          example: '12030000'
          type: string
        giftCertificateCode:
          maxLength: 256
          description: The gift certificate code.
          type: string
        paymentCard:
          description: The payment card.
          allOf:
            - $ref: '#/components/schemas/OrderPaymentCardRequest'
        paymentMethodId:
          maxLength: 256
          description: The payment method ID.
          example: CREDIT_CARD
          type: string
    PaymentCardSpec:
      description: Document representing the specification for a payment card.
      type: object
      properties:
        cardType:
          description: The payment card type. It is read only.
          example: Visa
          type: string
        checksumVerificationEnabled:
          description: A flag indicating whether the card number is verified using the Luhn checksum algorithm. It is read only.
          example: true
          type: boolean
        description:
          description: The localized description of the payment card. It is read only.
          type: string
        image:
          description: The URL to the image that represents the payment card. It is read only.
          type: string
        name:
          description: The localized name of the payment card. It is read only.
          type: string
        numberLengths:
          description: |-
            The sorted list of number lengths (individual lengths as well as
            length ranges). It is read only.
          type: array
          items:
            type: string
        numberPrefixes:
          description: |-
            The sorted list of number prefixes (individual prefixes as well
            as prefix ranges). It is read only.
          type: array
          items:
            type: string
        securityCodeLength:
          format: int32
          description: The length of the security code for this card. It is read only.
          type: integer
    PaymentMethod:
      description: Document representing a payment method.
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        cards:
          description: The sorted array of payment cards (included only when the system payment method is CREDIT_CARD). It is read only.
          type: array
          items:
            $ref: '#/components/schemas/PaymentCardSpec'
        description:
          description: The localized description of the payment method or card. It is read only.
          type: string
        id:
          maxLength: 256
          description: The ID of the payment method or card. It is read only.
          type: string
        image:
          description: The URL to the image that represents the payment method or card. It is read only.
          type: string
        name:
          description: The localized name of the payment method or card. It is read only.
          type: string
        paymentProcessorId:
          description: The payment processor ID. It is read only. It is read only.
          type: string
      required:
        - id
    PaymentMethodResult:
      description: Result document of payment methods applicable for a basket.
      properties:
        applicablePaymentMethods:
          description: The applicable payment methods. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
      type: object
    TaxItem:
      description: Object representing the taxation.
      properties:
        id:
          description: The taxation identifier.
          type: string
        rate:
          format: double
          description: The taxation rate.
          example: 0.13
          type: number
        value:
          format: double
          description: The tax amount. Will be computed if not set.
          type: number
      type: object
      additionalProperties: false
      required:
        - id
        - rate
    TaxItems:
      description: Taxation for a line item.
      type: object
      properties:
        taxItems:
          description: The list of tax items. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/TaxItem'
    Taxes:
      description: Document representing the tax rates and (optionally) amounts for all items in a basket.
      properties:
        taxes:
          description: 'Map containing the TaxItems for the line item ids: Map<LineItemId, TaxItems []>'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TaxItems'
      type: object
      required:
        - taxes
      additionalProperties: false
  parameters:
    organizationId:
      description: An identifier for the organization the request is being made by
      name: organizationId
      in: path
      required: true
      example: f_ecom_zzxy_prd
      schema:
        $ref: '#/components/schemas/OrganizationId'
    siteId:
      description: The identifier of the site that a request is being made in the context of. Attributes might have site specific values, and some objects may only be assigned to specific sites.
      name: siteId
      in: query
      required: true
      examples:
        SiteId:
          value: RefArch
      schema:
        $ref: '#/components/schemas/SiteId'
    locale:
      description: A descriptor for a geographical region by both a language and country code. By combining these two, regional differences in a language can be addressed, such as with the request header parameter `Accept-Language` following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766). This can also just refer to a language code, also RFC 2616/1766 compliant, as a default if there is no specific match for a country. Finally, can also be used to define default behavior if there is no locale specified.
      name: locale
      in: query
      examples:
        LanguageCountry:
          value: en-US
        CountryCode:
          value: US
      schema:
        $ref: '#/components/schemas/LocaleCode'
    orderNo:
      name: orderNo
      in: path
      description: The order number of the order to be modified.
      required: true
      schema:
        $ref: '#/components/schemas/OrderNo'
    paymentInstrumentId:
      name: paymentInstrumentId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/PaymentInstrumentId'
  examples:
    OrderPost:
      value:
        basketId: a10ff320829cb0eef93ca5310a
    examples-OrderPost:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: 5f695b6f4bb63cb686483d65a0
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        confirmationStatus: not_confirmed
        couponItems:
          - code: 5ties
            couponItemId: d3f7ae47e5897a6b5d2fd541f0
            statusCode: applied
            valid: true
        createdBy: Customer
        creationDate: '2019-10-22T12:17:28.341Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          customerName: Stephanie Miller
          email: shopper@salesforce-test.com
        customerName: Stephanie Miller
        exportStatus: not_exported
        groupedTaxItems:
          - taxRate: 0.05
            taxValue: 30.8
        guest: true
        giftCertificateItems:
          - amount: 1
            giftCertificateItemId: 540db3ffe58bfb04ab673757d7
            recipientEmail: miller@salesforce-test.com
            shipmentId: me
        lastModified: '2019-10-22T12:17:28.376Z'
        merchandizeTotalTax: 30
        orderNo: '00000410'
        orderPriceAdjustments:
          - appliedDiscount:
              amount: 10
              type: amount
            reasonCode: customer service
            createdBy: support
            creationDate: '2019-10-22T12:17:28.347Z'
            custom: true
            lastModified: '2019-10-22T12:17:28.349Z'
            manual: true
            price: -10
            priceAdjustmentId: 63b9eb9b4a92bd3e5c6ee804c2
            promotionId: 5ties
        orderToken: 7gJDIFlnho_mXrxfxVB9Neic3J7szzR9glvgU5Ath-I
        orderTotal: 586.76
        orderViewCode: YGXrGbZWlr29tIsGnYgR5o_8OxBMXWigevx1WD0X1Hc
        paymentInstruments:
          - amount: 20
            paymentInstrumentId: ca47e0da3d49b067b630db624a
            paymentMethodId: BML
          - amount: 566.76
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: 6b970a04ca8a468a64b9936764
            paymentMethodId: CREDIT_CARD
        paymentStatus: not_paid
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: d9516eecc64bd90b0022714d26
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: 8991e8d7adf0f46ffbc584e175
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.99
            priceAfterItemDiscount: 599.99
            priceAfterOrderDiscount: 589.99
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 37
            adjustedShippingTotalTax: 0.5
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: d5d95acf5381dc6e273b4336a7
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: 768abee75aa8015239a9696c7e
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingStatus: not_shipped
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        status: created
        taxation: net
        taxTotal: 30.8
    BadRequest:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/bad-request
        title: Bad Request
        detail: Decoding of the property with path '$.failedExample.[1].intProperty' failed because the expected type is 'Integer|Decimal' but the actual type was 'String'.
    BasketNotFound:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/basket-not-found
        title: Basket Not Found
        detail: No basket with ID '123' could be found.
    OrderGet:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: 5f695b6f4bb63cb686483d65a0
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        confirmationStatus: not_confirmed
        couponItems:
          - code: 5ties
            couponItemId: d3f7ae47e5897a6b5d2fd541f0
            statusCode: applied
            valid: true
        createdBy: Customer
        creationDate: '2019-10-22T12:17:28.341Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          customerName: Stephanie Miller
          email: shopper@salesforce-test.com
        customerName: Stephanie Miller
        exportStatus: not_exported
        groupedTaxItems:
          - taxRate: 0.05
            taxValue: 30.8
        guest: true
        giftCertificateItems:
          - amount: 1
            giftCertificateItemId: 540db3ffe58bfb04ab673757d7
            recipientEmail: miller@salesforce-test.com
            shipmentId: me
        lastModified: '2019-10-22T12:17:28.376Z'
        merchandizeTotalTax: 30
        orderNo: '00000410'
        orderPriceAdjustments:
          - appliedDiscount:
              amount: 10
              type: amount
            reasonCode: customer service
            createdBy: support
            creationDate: '2019-10-22T12:17:28.347Z'
            custom: true
            lastModified: '2019-10-22T12:17:28.349Z'
            manual: true
            price: -10
            priceAdjustmentId: 63b9eb9b4a92bd3e5c6ee804c2
            promotionId: 5ties
        orderToken: 7gJDIFlnho_mXrxfxVB9Neic3J7szzR9glvgU5Ath-I
        orderTotal: 586.76
        orderViewCode: YGXrGbZWlr29tIsGnYgR5o_8OxBMXWigevx1WD0X1Hc
        paymentInstruments:
          - amount: 20
            paymentInstrumentId: ca47e0da3d49b067b630db624a
            paymentMethodId: BML
          - amount: 566.76
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: 6b970a04ca8a468a64b9936764
            paymentMethodId: CREDIT_CARD
        paymentStatus: not_paid
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: d9516eecc64bd90b0022714d26
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: 8991e8d7adf0f46ffbc584e175
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.99
            priceAfterItemDiscount: 599.99
            priceAfterOrderDiscount: 589.99
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 37
            adjustedShippingTotalTax: 0.5
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: d5d95acf5381dc6e273b4336a7
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: 768abee75aa8015239a9696c7e
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingStatus: not_shipped
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        status: created
        taxation: net
        taxTotal: 30.8
    OrderLookup:
      value:
        email: no-reply@salesforce.com
        orderViewCode: YGXrGbZWlr29tIsGnYgR5o_8OxBMXWigevx1WD0X1Hc
    OrderNotFound:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/order-not-found
        title: Order Not Found
        detail: No order with number '123' was found.
    PaymentInstrumentPost:
      value:
        amount: 700
        paymentCard:
          expirationYear: 1990
          expirationMonth: 7
          validFromMonth: 8
          validFromYear: 2007
          issueNumber: i117
          maskedNumber: '************4567'
          holder: Miller
          cardType: Visa
        paymentMethodId: CREDIT_CARD
    examples-PaymentInstrumentPost:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: 5f695b6f4bb63cb686483d65a0
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        confirmationStatus: not_confirmed
        couponItems:
          - code: 5ties
            couponItemId: d3f7ae47e5897a6b5d2fd541f0
            statusCode: applied
            valid: true
        createdBy: Customer
        creationDate: '2019-10-22T12:17:28.341Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          customerName: Stephanie Miller
          email: shopper@salesforce-test.com
        customerName: Stephanie Miller
        exportStatus: not_exported
        groupedTaxItems:
          - taxRate: 0.05
            taxValue: 30.8
        guest: true
        giftCertificateItems:
          - amount: 1
            giftCertificateItemId: 540db3ffe58bfb04ab673757d7
            recipientEmail: miller@salesforce-test.com
            shipmentId: me
        lastModified: '2019-10-22T12:17:28.376Z'
        merchandizeTotalTax: 30
        orderNo: '00000410'
        orderPriceAdjustments:
          - appliedDiscount:
              amount: 10
              type: amount
            reasonCode: customer service
            createdBy: support
            creationDate: '2019-10-22T12:17:28.347Z'
            custom: true
            lastModified: '2019-10-22T12:17:28.349Z'
            manual: true
            price: -10
            priceAdjustmentId: 63b9eb9b4a92bd3e5c6ee804c2
            promotionId: 5ties
        orderToken: 7gJDIFlnho_mXrxfxVB9Neic3J7szzR9glvgU5Ath-I
        orderTotal: 586.76
        orderViewCode: YGXrGbZWlr29tIsGnYgR5o_8OxBMXWigevx1WD0X1Hc
        paymentInstruments:
          - amount: 20
            paymentInstrumentId: ca47e0da3d49b067b630db624a
            paymentMethodId: BML
          - amount: 566.76
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: 6b970a04ca8a468a64b9936764
            paymentMethodId: CREDIT_CARD
          - amount: 700
            paymentCard:
              expirationYear: 1990
              expirationMonth: 7
              validFromMonth: 8
              validFromYear: 2007
              issueNumber: i117
              maskedNumber: '************4567'
              holder: Miller
              cardType: Visa
            paymentInstrumentId: 9f21f0b51f206fbde2ff5789e5
            paymentMethodId: CREDIT_CARD
        paymentStatus: not_paid
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: d9516eecc64bd90b0022714d26
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: 8991e8d7adf0f46ffbc584e175
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.99
            priceAfterItemDiscount: 599.99
            priceAfterOrderDiscount: 589.99
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 37
            adjustedShippingTotalTax: 0.5
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: d5d95acf5381dc6e273b4336a7
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: 768abee75aa8015239a9696c7e
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingStatus: not_shipped
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        status: new
        taxation: net
        taxTotal: 30.8
    PaymentInstrumentPatch:
      value:
        amount: 2
        paymentMethodId: CREDIT_CARD
        paymentCard:
          cardType: Visa
          maskedNumber: '****-****-****-4567'
    examples-PaymentInstrumentPatch:
      value:
        adjustedMerchandizeTotalTax: 30
        adjustedShippingTotalTax: 0.8
        billingAddress:
          address1: 104 Presidential Way
          city: Woburn
          countryCode: US
          firstName: Stephanie
          fullName: Stephanie Miller
          id: 5f695b6f4bb63cb686483d65a0
          lastName: Miller
          postalCode: '01801'
          stateCode: MA
        channelType: storefront
        confirmationStatus: not_confirmed
        couponItems:
          - code: 5ties
            couponItemId: d3f7ae47e5897a6b5d2fd541f0
            statusCode: applied
            valid: true
        createdBy: Customer
        creationDate: '2019-10-22T12:17:28.341Z'
        currency: USD
        customerInfo:
          customerId: beQeANXJNsd0xcINsB6cSrobQa
          customerName: Stephanie Miller
          email: shopper@salesforce-test.com
        customerName: Stephanie Miller
        exportStatus: not_exported
        groupedTaxItems:
          - taxRate: 0.05
            taxValue: 30.8
        guest: true
        giftCertificateItems:
          - amount: 1
            giftCertificateItemId: 540db3ffe58bfb04ab673757d7
            recipientEmail: miller@salesforce-test.com
            shipmentId: me
        lastModified: '2019-10-22T12:17:28.376Z'
        merchandizeTotalTax: 30
        orderNo: '00000410'
        orderPriceAdjustments:
          - appliedDiscount:
              amount: 10
              type: amount
            reasonCode: customer service
            createdBy: support
            creationDate: '2019-10-22T12:17:28.347Z'
            custom: true
            lastModified: '2019-10-22T12:17:28.349Z'
            manual: true
            price: -10
            priceAdjustmentId: 63b9eb9b4a92bd3e5c6ee804c2
            promotionId: 5ties
        orderToken: 7gJDIFlnho_mXrxfxVB9Neic3J7szzR9glvgU5Ath-I
        orderTotal: 586.76
        orderViewCode: YGXrGbZWlr29tIsGnYgR5o_8OxBMXWigevx1WD0X1Hc
        paymentInstruments:
          - amount: 20
            paymentInstrumentId: ca47e0da3d49b067b630db624a
            paymentMethodId: BML
          - amount: 566.76
            paymentCard:
              cardType: Visa
              creditCardExpired: false
            paymentInstrumentId: 6b970a04ca8a468a64b9936764
            paymentMethodId: CREDIT_CARD
          - amount: 2
            paymentCard:
              expirationYear: 1990
              expirationMonth: 7
              validFromMonth: 8
              validFromYear: 2007
              issueNumber: i117
              maskedNumber: '******4567'
              holder: Miller
              cardType: Visa
            paymentInstrumentId: 9f21f0b51f206fbde2ff5789e5
            paymentMethodId: CREDIT_CARD
        paymentStatus: not_paid
        productItems:
          - adjustedTax: 30
            basePrice: 199.99
            bonusProductLineItem: false
            gift: false
            itemId: d9516eecc64bd90b0022714d26
            itemText: Green Umbrella - Sustained Edition
            optionItems:
              - adjustedTax: 0
                basePrice: 0
                bonusProductLineItem: false
                gift: false
                itemId: 8991e8d7adf0f46ffbc584e175
                itemText: We will plant a tree for your order.
                optionId: plantATree
                optionValueId: '000'
                price: 0
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: '000'
                productName: Plant a tree.
                quantity: 3
                shipmentId: me
                tax: 0
                taxBasis: 0
                taxClassId: standard
                taxRate: 0.05
            price: 599.99
            priceAfterItemDiscount: 599.99
            priceAfterOrderDiscount: 589.99
            productId: green-umbrella
            productName: Green Umbrella - Sustained Edition
            quantity: 3
            shipmentId: me
            tax: 30
            taxBasis: 599.97
            taxClassId: standard
            taxRate: 0.05
        productSubTotal: 599.97
        productTotal: 599.97
        shipments:
          - adjustedMerchandizeTotalTax: 37
            adjustedShippingTotalTax: 0.5
            gift: false
            merchandizeTotalTax: 30
            productSubTotal: 599.97
            productTotal: 599.97
            shipmentId: me
            shipmentTotal: 646.76
            shippingAddress:
              address1: 4162  Turkey Pen Road
              city: New York
              countryCode: US
              firstName: Agustin
              fullName: Agustin Estes
              id: d5d95acf5381dc6e273b4336a7
              lastName: Estes
              postalCode: '10016'
              stateCode: NY
            shippingMethod:
              description: Order received within 7-10 business days
              id: '001'
              name: Ground
              price: 15.99
            shippingStatus: not_shipped
            shippingTotal: 15.99
            shippingTotalTax: 0.8
            taxTotal: 30.8
        shippingItems:
          - adjustedTax: 0.8
            basePrice: 15.99
            itemId: 768abee75aa8015239a9696c7e
            itemText: Shipping
            price: 15.99
            priceAfterItemDiscount: 15.99
            shipmentId: me
            tax: 0.8
            taxBasis: 15.99
            taxClassId: standard
            taxRate: 0.05
        shippingStatus: not_shipped
        shippingTotal: 15.99
        shippingTotalTax: 0.8
        status: new
        taxation: net
        taxTotal: 30.8
    PaymentMethodsGet:
      value:
        applicablePaymentMethods:
          - id: GIFT_CERTIFICATE
            name: Gift Certificate
            paymentProcessorId: BASIC_GIFT_CERTIFICATE
          - cards:
              - cardType: Visa
                checksumVerificationEnabled: true
                name: Visa
                numberLengths:
                  - '13'
                  - '16'
                numberPrefixes:
                  - '4'
                securityCodeLength: 3
              - cardType: Amex
                checksumVerificationEnabled: true
                name: American Express
                numberLengths:
                  - '15'
                numberPrefixes:
                  - '34'
                  - '37'
                securityCodeLength: 4
              - cardType: Master Card
                checksumVerificationEnabled: true
                name: MasterCard
                numberLengths:
                  - '16'
                numberPrefixes:
                  - 51-55
                securityCodeLength: 3
              - cardType: Discover
                checksumVerificationEnabled: true
                name: Discover
                numberLengths:
                  - '16'
                numberPrefixes:
                  - '6011'
                  - 622126-622925
                  - 644-649
                  - '65'
                securityCodeLength: 3
            id: CREDIT_CARD
            name: Credit Card
            paymentProcessorId: BASIC_CREDIT
          - id: PayPal
            name: Pay Pal
            paymentProcessorId: PAYPAL_EXPRESS
          - id: BML
            name: Bill Me Later
            paymentProcessorId: CYBERSOURCE_BML
    OrderTaxGet:
      value:
        taxes:
          3d4e28425ce0b3a65b0ac4e163:
            taxItems:
              - id: DE_7
                rate: 0.07
                value: 13.99
              - id: DE_19
                rate: 0.19
          ff9452ed11fcf5c80f9143a8f1:
            taxItems:
              - id: US_1
                rate: 0.01
              - id: US_5
                rate: 0.05
    InvalidTaxMode:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/invalid-tax-mode
        title: Invalid Tax Mode
        detail: Basket with ID 'a10ff320829cb0eef93ca5310a' has invalid tax mode.
    UnsupportedRequest:
      value:
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/unsupported-request-if-scapi-hooks-enabled
        title: Unsupported Request If SCAPI Hooks Enabled
        detail: You can't call this endpoint because Salesforce Commerce API hook execution is enabled.
