openapi: 3.0.3
info:
  title: Shopper Customers
  version: v1
  description: |-
    # API Overview

    The Shopper Customers API enables you to develop functionality that lets customers log in, and manage their profiles and product lists. Profile management includes ability for shoppers to add or modify addresses and payment methods, and add or modify products to wishlists or favorites. Commerce Cloud provides a rich set of Authentication APIs that include logging in guest shoppers, registered shoppers, agents on behalf of customers and a trusted system authentication on behalf of customers. In all authentication scenarios involving customers, a JSON Web Token (JWT) is generated in Commerce Cloud. Using the JWT, customers can access other Shopper API resources like Orders and Baskets. The application must refresh the JWT every 30 minutes to save the shopper activity (for example, retain products in a shopper's cart) for prolonged periods of time.

    ## Authentication & Authorization

    The client requesting the customer information must have access to the Customer and Product List resources. The API requests pass a system-to-system bearer token in the header of the request. For the trusted system API, the trusted client must first authenticate against Account manager to log in on behalf of a customer.

    For details on how to request a shopper access token from SLAS, see the guest user flows for [public clients](https://developer.salesforce.com/docs/commerce/commerce-api/guide/slas-public-client.html#guest-user) and [private clients](https://developer.salesforce.com/docs/commerce/commerce-api/guide/slas-private-client.html#guest-user) in the SLAS guides.

    You must include the relevant scope(s) in the client ID used to generate the SLAS token. For details, see the [Authorization Scopes Catalog.](https://developer.salesforce.com/docs/commerce/commerce-api/guide/auth-z-scope-catalog.html)

    ## Use Cases

    ### Register a New Customer

    In this use case, a customer who is browsing on a commerce shopping app built using B2C Commerce APIs would like to create a customer profile, so that they can track their order when logged in on the next visit.

    The API flow is shown in the following diagram:

    ![b2c-commerce-shopper-customers-screenshot-1.png](https://resources.docs.salesforce.com/rel1/doc/en-us/static/misc/b2c-commerce-shopper-customers-screenshot-1.png)

    1. The shopper opens the shopping app.
    2. Request an access token from SLAS. For details, see the guest user flows for [public clients](https://developer.salesforce.com/docs/commerce/commerce-api/guide/slas-public-client.html#guest-user) and [private clients](https://developer.salesforce.com/docs/commerce/commerce-api/guide/slas-private-client.html#guest-user) in the SLAS guides.
    3. The SLAS API responds with the shopper access token (JWT).
    4. The shopper adds a product to their basket.
    5. Use the Shopper Baskets API to create a basket. The shopper JWT from SLAS is supplied in the authorization header.
    6. Save the basket with a registered user customer ID (even though the shopper is still a guest). The shopper JWT from SLAS is supplied in the authorization header.
    7. The shopper creates a profile.
    8. Use the Shopper Customers API to register the customer.

    ### Authenticate a Trusted System on Behalf of a Customer

    In this cross-cloud use case, a Experience Cloud user places an order on Commerce Cloud from the Experience Cloud using the platform APIs. The Experience Cloud app is a trusted system that has a trusted relationship with Commerce Cloud using the OAuth client credentials grant against the Commerce Cloud Account Manager. The Experience Cloud user logs in with a redirect to Salesforce IDM and after successful login, the client application is able to call B2C Commerce APIs on behalf of the customer. Commerce Cloud returns a JWT for the Experience Cloud user and the Experience Cloud user is able to place orders on Commerce Cloud.

    The API flow is shown in the following diagram:

    ![b2c-commerce-shopper-customers-screenshot-2.png](https://resources.docs.salesforce.com/rel1/doc/en-us/static/misc/b2c-commerce-shopper-customers-screenshot-2.png)

    ### Reset Customer Password

    In this use case, a shopper who is browsing on a commerce shopping app, built using B2C Commerce APIs, requests to reset their password. The app verifies the shopper's credentials and returns a 404 if verification fails. Otherwise, when the shopper requests their password to be reset, the app first creates a password reset token using the shopper’s login ID, and an account manager token (obtained using the client credentials grant). After the app has the password reset token, the app can prompt the shopper for new password. Any app-level customization, such as sending a password reset email, can be done at this step. Finally, the app calls the reset endpoint to reset the customer’s password.

    ![b2c-commerce-shopper-customers-screenshot-3.png](https://resources.docs.salesforce.com/rel1/doc/en-us/static/misc/b2c-commerce-shopper-customers-screenshot-3.png)

    ### Update Shopper LoginId

    In this use case, in order to update a shopper's loginId, the PATCH /customers/{customerId} call can be used starting B2C Commerce Cloud GA release 24.7. The new field in the request called `currentPassword` is mandatory and needs to match the shopper's existing password. If this field is not provided or does not match the existing shopper password when trying to update loginId, a HTTP 400 rsponse will be returned. If the loginId field is not sent in the PATCH request body, the `currentPassword` field is not required.
    **Note: After the `loginId` is updated, a new SLAS token must be fetched for the shopper for subsequent calls.

    ### Use Hooks

    For details working with hooks, see [Extensibility with Hooks.](https://developer.salesforce.com/docs/commerce/commerce-api/guide/extensibility_via_hooks.html)
servers:
  - url: https://{shortCode}.api.commercecloud.salesforce.com/customer/shopper-customers/v1
    variables:
      shortCode:
        default: shortCode
paths:
  /organizations/{organizationId}/customers:
    post:
      summary: Register a new customer.
      description: Mandatory data includes the credentials, profile last name, and email. This requires a JSON Web Token (JWT) which needs to be obtained using the POST /customers/auth API with type "guest", or from the Shopper Login (SLAS) API. The return type object for this endpoint is a common customer object shared by multiple Shopper Customer endpoints. In this case, all customer object details are returned, but attributes that are not included in the response, although they might be part of the customer object, are ignored. For example, although address information is included in the customer object, it is not displayed in the response for this endpoint and is ignored.
      operationId: registerCustomer
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRegistration'
            examples:
              CustomerRegistrationBody:
                $ref: '#/components/examples/CustomerRegistrationBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
              examples:
                customerRegistrationResponse:
                  $ref: '#/components/examples/customerRegistrationResponse'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '401':
          description: |
            In the case of type credentials, the username is unknown or the password does not match. In the case of type session, the session is no longer active or the dwsecuretoken value is invalid. In both cases, the customer is disabled or locked.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer401:
                  $ref: '#/components/examples/registerCustomer401'
      security:
        - ShopperToken:
            - sfcc.shopper-customers.register
  /organizations/{organizationId}/customers/password/actions/reset:
    post:
      summary: Reset customer password after obtaining a reset token.
      description: This is the second step in the reset customer password flow, in which a customer password is reset by providing new credentials along with a reset token. This call should be preceded by a call to the /create-reset-token endpoint.
      operationId: resetPassword
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
            examples:
              ResetPasswordBody:
                $ref: '#/components/examples/ResetPasswordBody'
        required: true
      responses:
        '204':
          description: Reset password successful. No Content.
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
      security:
        - AmOAuth2:
            - sfcc.shopper-customers.login
  /organizations/{organizationId}/customers/password/actions/create-reset-token:
    post:
      summary: Get reset password token.
      description: This is the first step in the reset customer password flow, in which a password reset token is requested for future use to reset a customer password. This call should be followed by a call to the /reset endpoint.
      operationId: getResetPasswordToken
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordTokenRequest'
            examples:
              ResetPasswordTokenBody:
                $ref: '#/components/examples/ResetPasswordTokenBody'
        required: true
      responses:
        '200':
          description: Reset password token generated and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordToken'
              examples:
                getResetPasswordTokenSuccess:
                  $ref: '#/components/examples/getResetPasswordTokenSuccess'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
      security:
        - AmOAuth2:
            - sfcc.shopper-customers.login
  /organizations/{organizationId}/customers/external-profile:
    get:
      summary: Gets the new external profile for a customer. This endpoint only accepts a registered customer ShopperToken (JWT).
      operationId: getExternalProfile
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/externalId'
        - $ref: '#/components/parameters/authenticationProviderId'
        - $ref: '#/components/parameters/siteId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerExternalProfile'
              examples:
                getExternalProfileSuccess:
                  $ref: '#/components/examples/getExternalProfileSuccess'
        '400':
          description: |
            Customer ExternalId URL parameter is not valid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getExternalProfile400:
                  $ref: '#/components/examples/getExternalProfile400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getExternalProfile404:
                  $ref: '#/components/examples/getExternalProfile404'
      security:
        - AmOAuth2:
            - sfcc.shopper-customers.login
    post:
      summary: Register a new external profile for a customer. This endpoint accepts a guest customer ShopperToken (JWT) only.
      operationId: registerExternalProfile
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerExtProfileRequest'
            examples:
              ExternalProfileBody:
                $ref: '#/components/examples/ExternalProfileBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerExternalProfile'
              examples:
                registerExternalProfileSuccess:
                  $ref: '#/components/examples/registerExternalProfileSuccess'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '401':
          description: |
            In the case of type credentials, the username is unknown or the password does not match. In the case of type session, the session is no longer active or the dwsecuretoken value is invalid. In both cases, the customer is disabled or locked.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer401:
                  $ref: '#/components/examples/registerCustomer401'
      security:
        - ShopperToken:
            - sfcc.shopper-customers.register
  /organizations/{organizationId}/customers/{customerId}:
    get:
      summary: Get a customer and all existing addresses and payment instruments associated with the requested customer. This endpoint only accepts a registered customer ShopperToken (JWT).
      operationId: getCustomer
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
              examples:
                getCustomerSuccess:
                  $ref: '#/components/examples/getCustomerSuccess'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount
            - sfcc.shopper-myaccount.rw
    patch:
      summary: Update a customer. This endpoint only accepts a registered customer ShopperToken (JWT).
      operationId: updateCustomer
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
            examples:
              UpdateCustomerBody:
                $ref: '#/components/examples/UpdateCustomerBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
              examples:
                updateCustomerResponse:
                  $ref: '#/components/examples/updateCustomerResponse'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.rw
  /organizations/{organizationId}/customers/{customerId}/addresses:
    post:
      summary: Create a new address with the given name for the customer. This endpoint only accepts a registered customer ShopperToken (JWT).
      operationId: createCustomerAddress
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAddress'
            examples:
              CustomerAddressBody:
                $ref: '#/components/examples/CustomerAddressBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddress'
              examples:
                customerAddressResponse:
                  $ref: '#/components/examples/customerAddressResponse'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.addresses.rw
  /organizations/{organizationId}/customers/{customerId}/addresses/{addressName}:
    get:
      summary: Retrieve a customer's address by address name. This endpoint only accepts a registered customer ShopperToken (JWT).
      operationId: getCustomerAddress
      parameters:
        - $ref: '#/components/parameters/addressName'
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddress'
              examples:
                customerAddressResponse:
                  $ref: '#/components/examples/customerAddressResponse'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.addresses
            - sfcc.shopper-myaccount.addresses.rw
    delete:
      summary: Delete a customer's address by address name. This endpoint only accepts a registered customer ShopperToken (JWT).
      operationId: removeCustomerAddress
      parameters:
        - $ref: '#/components/parameters/addressName'
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      responses:
        '204':
          description: No content
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.addresses.rw
    patch:
      summary: Update a customer's address by address name. This endpoint only accepts a registered customer ShopperToken (JWT).
      operationId: updateCustomerAddress
      parameters:
        - $ref: '#/components/parameters/addressName'
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAddress'
            examples:
              CustomerAddressResponseBody:
                $ref: '#/components/examples/CustomerAddressResponseBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddress'
              examples:
                customerAddressResponse:
                  $ref: '#/components/examples/customerAddressResponse'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.addresses.rw
  /organizations/{organizationId}/customers/{customerId}/baskets:
    get:
      summary: Get the baskets for a customer. This endpoint accepts a registered customer ShopperToken (JWT) or a guest customer ShopperToken.
      operationId: getCustomerBaskets
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketsResult'
              examples:
                customerBasketsResult:
                  $ref: '#/components/examples/customerBasketsResult'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.baskets
  /organizations/{organizationId}/customers/{customerId}/orders:
    get:
      summary: Return a page list of all the customer's orders. The default page size is 10. This endpoint accepts a registered customer ShopperToken (JWT) or a guest customer ShopperToken.
      operationId: getCustomerOrders
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/crossSites'
        - $ref: '#/components/parameters/from'
        - $ref: '#/components/parameters/until'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/siteId'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
            maximum: 50
          description: Maximum records to retrieve per request, not to exceed 50. Defaults to 10.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int64
            default: 0
            minimum: 0
          description: Used to retrieve the results based on a particular resource offset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOrderResult'
              examples:
                CustomersOrdersResult:
                  $ref: '#/components/examples/CustomersOrdersResult'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.orders
  /organizations/{organizationId}/customers/{customerId}/password:
    put:
      summary: Update a customer's password. This endpoint only accepts a registered customer ShopperToken (JWT).
      operationId: updateCustomerPassword
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
            examples:
              UpdatePasswordBody:
                $ref: '#/components/examples/UpdatePasswordBody'
        required: true
      responses:
        '204':
          description: No content
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-customers.login
  /organizations/{organizationId}/customers/{customerId}/payment-instruments:
    post:
      summary: Add a payment instrument to the customer information. This endpoint only accepts a registered customer ShopperToken (JWT).
      operationId: createCustomerPaymentInstrument
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPaymentInstrumentRequest'
            examples:
              CustomerPaymentInstrumentBody:
                $ref: '#/components/examples/CustomerPaymentInstrumentBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPaymentInstrument'
              examples:
                getCustomerPaymentInstrumentSuccess:
                  $ref: '#/components/examples/getCustomerPaymentInstrumentSuccess'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.paymentinstruments.rw
  /organizations/{organizationId}/customers/{customerId}/payment-instruments/{paymentInstrumentId}:
    get:
      summary: Retrieve a customer's payment instrument by its ID. This endpoint only accepts a registered customer ShopperToken (JWT).
      operationId: getCustomerPaymentInstrument
      parameters:
        - $ref: '#/components/parameters/paymentInstrumentId'
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPaymentInstrument'
              examples:
                getCustomerPaymentInstrumentSuccess:
                  $ref: '#/components/examples/getCustomerPaymentInstrumentSuccess'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.paymentinstruments
            - sfcc.shopper-myaccount.paymentinstruments.rw
    delete:
      summary: Delete a customer's payment instrument. This endpoint only accepts a registered customer ShopperToken (JWT).
      operationId: deleteCustomerPaymentInstrument
      parameters:
        - $ref: '#/components/parameters/paymentInstrumentId'
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      responses:
        '204':
          description: No content
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.paymentinstruments.rw
  /organizations/{organizationId}/customers/{customerId}/product-lists:
    get:
      summary: Return all customer product lists. This endpoint accepts a registered customer ShopperToken (JWT) or a guest customer ShopperToken.
      operationId: getCustomerProductLists
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProductListResult'
              examples:
                customerProductListResult:
                  $ref: '#/components/examples/customerProductListResult'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.productlists
            - sfcc.shopper-myaccount.productlists.rw
    post:
      summary: Create a customer product list. This endpoint accepts a registered customer ShopperToken (JWT) or a guest customer ShopperToken.
      operationId: createCustomerProductList
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProductList'
            examples:
              PostCustomerProductListBody:
                $ref: '#/components/examples/PostCustomerProductListBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProductList'
              examples:
                customerProductList:
                  $ref: '#/components/examples/customerProductList'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.productlists.rw
  /organizations/{organizationId}/customers/{customerId}/product-lists/{listId}:
    get:
      summary: Return a customer product list for the given customer and the items in the list. This endpoint accepts a registered customer ShopperToken (JWT) or a guest customer ShopperToken.
      operationId: getCustomerProductList
      parameters:
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProductList'
              examples:
                getCustomerProductListByListId:
                  $ref: '#/components/examples/getCustomerProductListByListId'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.productlists
            - sfcc.shopper-myaccount.productlists.rw
    delete:
      description: Delete a customer product list. This endpoint accepts a registered customer ShopperToken (JWT) or a guest customer ShopperToken.
      operationId: deleteCustomerProductList
      parameters:
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      responses:
        '204':
          description: No content
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.productlists.rw
    patch:
      summary: Change a product list. Changeable properties include name, description, and if the list is public. This endpoint accepts a registered customer ShopperToken (JWT) or a guest customer ShopperToken.
      operationId: updateCustomerProductList
      parameters:
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProductList'
            examples:
              UpdateCustomerProductListByListIdBody:
                $ref: '#/components/examples/UpdateCustomerProductListByListIdBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProductList'
              examples:
                getCustomerProductListByListId:
                  $ref: '#/components/examples/updateCustomerProductListByListId'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.productlists.rw
  /organizations/{organizationId}/customers/{customerId}/product-lists/{listId}/items:
    post:
      summary: Add an item to the customer's product list.
      description: "This endpoint accepts a registered customer ShopperToken (JWT) or a guest customer ShopperToken.\n\nConsidered values from the request body are:\n\n- `type` → The item type to be added to the customer's product. This value is required and must be a valid type.\nlist.\n- `priority` → The priority of the item to be added to the customer's product list.\n- `public` → The flag that determines whether the item to be added to the customer's product list is public.\n- `product_id` → The ID (SKU) of the product related to the item to be added to the customer's product list. Required when item type is `product`, and must be a valid product ID and only used for product item type. Otherwise, a `ProductListProductIdMissingException` or `ProductListProductNotFoundException` is thrown. \n- `quantity` → Only used for product item type. This is the quantity of the item to be added to the customer's product list.\n\nYou can also use a custom property of the form `c_<CUSTOM_NAME>`. The custom property must correspond to a custom attribute (`<CUSTOM_NAME>`) that is defined for `ProductListItem`. The value of this property must be valid for the type of custom attribute defined for `ProductListItem`."
      operationId: createCustomerProductListItem
      parameters:
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProductListItem'
            examples:
              UpdateCustomerProductListItemBody:
                $ref: '#/components/examples/UpdateCustomerProductListItemBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProductListItem'
              examples:
                updateCustomerProductListItemSuccess:
                  $ref: '#/components/examples/updateCustomerProductListItemSuccess'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.productlists.rw
  /organizations/{organizationId}/customers/{customerId}/product-lists/{listId}/items/{itemId}:
    get:
      summary: Return an item of a customer product list and the actual product details such as image, availability, and price. This endpoint accepts a registered customer ShopperToken (JWT) or a guest customer ShopperToken.
      operationId: getCustomerProductListItem
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProductListItem'
              examples:
                getCustomerProductListItemSuccess:
                  $ref: '#/components/examples/getCustomerProductListItemSuccess'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.productlists
            - sfcc.shopper-myaccount.productlists.rw
    delete:
      summary: Remove an item from a customer product list. This endpoint accepts a registered customer ShopperToken (JWT) or a guest customer ShopperToken.
      operationId: deleteCustomerProductListItem
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      responses:
        '204':
          description: No content
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.productlists.rw
    patch:
      summary: Update an item in a customer's product list.
      description: |-
        This endpoint accepts a registered customer ShopperToken (JWT) or a guest customer ShopperToken.
        Considered values from the request body are:

        priority: The priority of the customer's product list item.
        public: The flag that indicates if the customer's product list item is public.
        quantity: The quantity of
        the customer's product list item. Onlyl used for product item type.
        custom properties in the form c_<CUSTOM_NAME>: The custom property
        must correspond to a custom attribute (<CUSTOM_NAME>) defined for ProductListItem.
        The value of this property must be valid for the type of custom attribute defined for ProductListItem.
      operationId: updateCustomerProductListItem
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProductListItem'
            examples:
              CustomerProductListItemBody:
                $ref: '#/components/examples/CustomerProductListItemBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProductListItem'
              examples:
                updateCustomerProductListItemSuccess:
                  $ref: '#/components/examples/updateCustomerProductListItemSuccess'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-myaccount.productlists.rw
  /organizations/{organizationId}/product-lists:
    get:
      summary: 'Retrieve all public product lists as defined by the given search term, for example: email OR first name and last name). This endpoint accepts a registered customer ShopperToken (JWT) or a guest customer ShopperToken.'
      operationId: getPublicProductListsBySearchTerm
      parameters:
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/email'
        - $ref: '#/components/parameters/firstName'
        - $ref: '#/components/parameters/lastName'
        - $ref: '#/components/parameters/siteId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicProductListResult'
              examples:
                productListsResultExample:
                  $ref: '#/components/examples/productListsResultExample'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '401':
          description: |
            Indicates that the customerId URL parameter does not match the verified customer represented by the JWT token, which is not relevant when using OAuth, or indicates that the provided new address name is already in use for the customer.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getPublicProductListsBySearchTerm401:
                  $ref: '#/components/examples/getPublicProductListsBySearchTerm401'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-productlists
  /organizations/{organizationId}/product-lists/{listId}:
    get:
      summary: Retrieve a public product list by ID and the items under that product list. This endpoint accepts a registered customer ShopperToken (JWT) or a guest customer ShopperToken.
      operationId: getPublicProductList
      parameters:
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicProductList'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '401':
          description: |
            Indicates that the customerId URL parameter does not match the verified customer represented by the JWT token, which is not relevant when using OAuth, or indicates that the provided new address name is already in use for the customer.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getPublicProductListsBySearchTerm401:
                  $ref: '#/components/examples/getPublicProductListsBySearchTerm401'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-productlists
  /organizations/{organizationId}/product-lists/{listId}/items/{itemId}:
    get:
      summary: Retrieve an item from a public product list and the actual product details such as product, image, availability, and price. This endpoint accepts a registered customer ShopperToken (JWT) or a guest customer ShopperToken.
      operationId: getProductListItem
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/listId'
        - $ref: '#/components/parameters/organizationId'
        - $ref: '#/components/parameters/siteId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicProductListItem'
              examples:
                getCustomerProductListItemSuccess:
                  $ref: '#/components/examples/publicProductListItemsExample'
        '400':
          description: |
            CustomerId URL parameter does not match the verified customer represented by the JWT token.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerCustomer400:
                  $ref: '#/components/examples/registerCustomer400'
        '401':
          description: |
            Indicates that the customerId URL parameter does not match the verified customer represented by the JWT token, which is not relevant when using OAuth, or indicates that the provided new address name is already in use for the customer.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getPublicProductListsBySearchTerm401:
                  $ref: '#/components/examples/getPublicProductListsBySearchTerm401'
        '404':
          description: |
            Requested resource not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                getCustomer404:
                  $ref: '#/components/examples/getCustomer404'
      security:
        - ShopperToken:
            - sfcc.shopper-productlists
components:
  securitySchemes:
    ShopperToken:
      type: oauth2
      description: "ShopperToken authentication follows the authorization code grant flow, as defined by the OAuth 2.1 standard. Depending on the type of OAuth client (public or private), this authorization flow has further requirements. \nFor a detailed description of the authorization flow, see the [SLAS overview](https://developer.salesforce.com/docs/commerce/commerce-api/references?meta=shopper-login:Summary).\nA shopper token allows you to access the Shopper API endpoints of both OCAPI and the B2C Commerce API. These endpoints can be used to build headless storefronts and other applications.\nThe `ShopperToken` security scheme is a parent of other security schemes, such as `ShopperTokenTsob`. A Shopper API endpoint can require a specific child scheme (`ShopperTokenTsob`, for example) that cannot be accessed with a regular shopper token.\n"
      flows:
        clientCredentials:
          tokenUrl: https://{shortCode}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/token
          scopes:
            sfcc.shopper-customers.register: Shopper Customers Register scope READONLY
            sfcc.shopper-customers.login: Shopper Customers Login scope READONLY
            sfcc.shopper-myaccount: Shopper MyAccount scope READONLY
            sfcc.shopper-myaccount.rw: Shopper MyAccount scope
            sfcc.shopper-myaccount.addresses: Shopper MyAccount Addresses scope READONLY
            sfcc.shopper-myaccount.addresses.rw: Shopper MyAccount Addresses scope
            sfcc.shopper-myaccount.baskets: Shopper MyAccount Baskets scope READONLY
            sfcc.shopper-myaccount.orders: Shopper MyAccount Orders scope READONLY
            sfcc.shopper-myaccount.paymentinstruments: Shopper MyAccount PaymentInstruments scope READONLY
            sfcc.shopper-myaccount.paymentinstruments.rw: Shopper MyAccount PaymentInstruments scope
            sfcc.shopper-myaccount.productlists: Shopper MyAccount ProductLists scope READONLY
            sfcc.shopper-myaccount.productlists.rw: Shopper MyAccount ProductLists scope
            sfcc.shopper-productlists: Shopper ProductLists scope READONLY
        authorizationCode:
          authorizationUrl: https://{short-code}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/authorize
          tokenUrl: https://{short-code}.api.commercecloud.salesforce.com/shopper/auth/v1/organizations/{organizationId}/oauth2/token
          scopes:
            sfcc.shopper-customers.register: Shopper Customers Register scope READONLY
            sfcc.shopper-customers.login: Shopper Customers Login scope READONLY
            sfcc.shopper-myaccount: Shopper MyAccount scope READONLY
            sfcc.shopper-myaccount.rw: Shopper MyAccount scope
            sfcc.shopper-myaccount.addresses: Shopper MyAccount Addresses scope READONLY
            sfcc.shopper-myaccount.addresses.rw: Shopper MyAccount Addresses scope
            sfcc.shopper-myaccount.baskets: Shopper MyAccount Baskets scope READONLY
            sfcc.shopper-myaccount.orders: Shopper MyAccount Orders scope READONLY
            sfcc.shopper-myaccount.paymentinstruments: Shopper MyAccount PaymentInstruments scope READONLY
            sfcc.shopper-myaccount.paymentinstruments.rw: Shopper MyAccount PaymentInstruments scope
            sfcc.shopper-myaccount.productlists: Shopper MyAccount ProductLists scope READONLY
            sfcc.shopper-myaccount.productlists.rw: Shopper MyAccount ProductLists scope
            sfcc.shopper-productlists: Shopper ProductLists scope READONLY
    AmOAuth2:
      type: oauth2
      description: AccountManager OAuth 2.0 bearer token Authentication.
      flows:
        clientCredentials:
          tokenUrl: https://account.demandware.com/dwsso/oauth2/access_token
          scopes:
            sfcc.shopper-customers.login: Shopper Customers Login scope READONLY
        authorizationCode:
          authorizationUrl: https://account.demandware.com/dwsso/oauth2/authorize
          tokenUrl: https://account.demandware.com/dwsso/oauth2/access_token
          scopes:
            sfcc.shopper-customers.login: Shopper Customers Login scope READONLY
  schemas:
    OrganizationId:
      description: An identifier for the organization the request is being made by
      example: f_ecom_zzxy_prd
      type: string
      minLength: 1
      maxLength: 32
    SiteId:
      minLength: 1
      maxLength: 32
      description: The identifier of the site that a request is being made in the context of. Attributes might have site specific values, and some objects may only be assigned to specific sites
      example: RefArch
      type: string
    CustomerAddress:
      description: Address that is associated with a shopper (billing, shipping, mailing, and so on).
      properties:
        address1:
          description: The first address.
          example: 10 Presidential Way
          maxLength: 256
          type: string
        address2:
          description: The second address.
          example: Apt-616
          maxLength: 256
          type: string
        addressId:
          description: The ID of the address as specified by account owner.
          example: Home
          maxLength: 256
          type: string
        city:
          description: The city.
          example: New York
          maxLength: 256
          type: string
        companyName:
          description: The company name.
          example: Acme Inc
          maxLength: 256
          type: string
        countryCode:
          description: The two-letter ISO 3166-1 (Alpha-2) country code.
          example: US
          maxLength: 2
          pattern: ^([A-Z][A-Z])$
          type: string
        creationDate:
          description: Returns the value of attribute 'creationDate'.
          example: '9999-12-31T17:12:56.670Z'
          format: date-time
          type: string
        firstName:
          description: The first name.
          example: John
          maxLength: 256
          type: string
        fullName:
          description: The full name.
          example: John Smith
          maxLength: 256
          type: string
        jobTitle:
          description: The job title.
          example: Supervisor
          maxLength: 256
          type: string
        lastModified:
          description: Returns the value of attribute 'lastModified'.
          example: '9999-12-31T17:12:56.670Z'
          format: date-time
          type: string
        lastName:
          description: The last name.
          example: Smith
          maxLength: 256
          type: string
        phone:
          description: The phone number.
          example: 555-555-5555
          maxLength: 32
          type: string
        postBox:
          description: The post box.
          example: '12345'
          maxLength: 256
          type: string
        postalCode:
          description: The postal code.
          example: N5
          maxLength: 256
          type: string
        preferred:
          description: The preferred attribute.
          example: true
          type: boolean
        salutation:
          description: The salutation.
          example: Sir
          maxLength: 256
          type: string
        secondName:
          description: The second name.
          example: Smith
          maxLength: 256
          type: string
        stateCode:
          description: The state code.
          example: UT
          maxLength: 256
          type: string
        suffix:
          description: The suffix.
          example: Sr.
          maxLength: 256
          type: string
        suite:
          description: The suite.
          example: '100'
          maxLength: 32
          type: string
        title:
          description: The title.
          example: Supervisor
          maxLength: 256
          type: string
      required:
        - addressId
        - countryCode
        - lastName
      type: object
    PaymentCard:
      additionalProperties: false
      description: Document representing a payment card.
      type: object
      properties:
        cardType:
          maxLength: 256
          description: The payment card type.
          example: Visa
          type: string
        creditCardExpired:
          description: A flag indicating if the credit card is expired. It is read only.
          example: true
          type: boolean
        creditCardToken:
          description: |-
            A credit card token. If a credit card is tokenized, the token can be used to look up the credit card data
            in the token store.
          example: E67TY8GQ27X
          type: string
        expirationMonth:
          format: int32
          description: The month when the payment card expires.
          example: 3
          type: integer
        expirationYear:
          format: int32
          description: The year when the payment card expires.
          example: 2025
          type: integer
        holder:
          maxLength: 256
          description: The payment card holder.
          example: Max Mustermann
          type: string
        issueNumber:
          maxLength: 256
          description: The payment card issue number.
          example: '2'
          type: string
        maskedNumber:
          maxLength: 4000
          description: The masked payment card number.
          example: '*********4422'
          type: string
        numberLastDigits:
          maxLength: 4000
          description: The last digits of the payment card number. It is read only.
          example: '4422'
          type: string
        validFromMonth:
          minimum: 1
          maximum: 12
          format: int32
          description: The month the payment card is valid from.
          example: 5
          type: integer
        validFromYear:
          format: int32
          description: The year the payment card is valid from.
          example: 2015
          type: integer
    CustomerPaymentInstrument:
      type: object
      properties:
        bankRoutingNumber:
          maxLength: 256
          type: string
          description: The bank routing number.
          example: KDSJHKS
        creationDate:
          type: string
          description: Returns the value of attribute 'creationDate'.
          format: date-time
          example: 253402214400
        lastModified:
          type: string
          description: Returns the value of attribute 'lastModified'.
          format: date-time
          example: 253402214400
        maskedGiftCertificateCode:
          type: string
          description: The masked gift certificate code.
          example: gift-code
        paymentCard:
          allOf:
            - $ref: '#/components/schemas/PaymentCard'
          description: The payment card.
        paymentInstrumentId:
          type: string
          description: The payment instrument ID.
          example: Personal
        paymentMethodId:
          maxLength: 256
          type: string
          description: The payment method ID. Optional if a customer payment instrument ID is specified.
          example: Personal
        default:
          type: boolean
          description: The default payment instrument.
          example: true
      description: Method for customers to pay for the goods purchased on an ecommerce site. Payment methods include - credit card, debit card, bank account, and gift card.
    Customer:
      description: Person or entity who shops on Commerce Cloud storefronts by creating a shopper account in Commerce Cloud.
      properties:
        addresses:
          description: The customer's addresses.
          items:
            $ref: '#/components/schemas/CustomerAddress'
          type: array
        authType:
          description: The customer's authorization type (indicates whether the customer is a guest or a registered customer).
          enum:
            - guest
            - registered
          example: registered
          type: string
        birthday:
          description: The customer's birthday.
          format: date
          type: string
        companyName:
          description: The customer's company name.
          example: Acme
          maxLength: 256
          type: string
        creationDate:
          description: Returns the value of attribute 'creationDate'.
          example: '9999-12-31T00:00:00.0Z'
          format: date-time
          type: string
        currentPassword:
          description: The shopper's current password. This is only used when attempting to update a shopper's `loginId` in a PATCH call. This value is never returned in any response for security reasons, but is validated and must match shopper's existing password in order to update `loginId`. Otherwise, an HTTP 400 statusCode is returned and the `loginId` is not updated. This field and functionality is available with B2C Commerce version 24.7.
          type: string
        customerId:
          description: The customer's number (ID). Both registered and guest customers have an customer ID.
          example: dfuisydifu2342usyf
          maxLength: 28
          type: string
        customerNo:
          description: The customer's number (ID). Only a registered customer has a customer number.
          example: D0000123
          maxLength: 100
          type: string
        email:
          description: The customer's email address.
          example: johnsmith@email.com
          maxLength: 256
          type: string
        enabled:
          description: A flag indicating whether this customer is enabled and can log in.
          example: true
          type: boolean
        fax:
          description: The customer's fax number. The length is restricted to 32 characters.
          example: 555-555-5555
          maxLength: 32
          type: string
        firstName:
          description: The customer's first name.
          example: John
          maxLength: 256
          type: string
        gender:
          description: The customer's gender.
          example: 1
          format: int32
          type: integer
        hashedLogin:
          description: Represents the read-only hashed value for the `loginId` used for Einstein events. This field is available with B2C Commerce version 24.9.
          example: 123927deac310a3dae382897d9e458bd92ef1d4ea5cdd327a0fcffd8426dfbb5
          type: string
        jobTitle:
          description: The customer's job title.
          example: Supervisor
          maxLength: 256
          type: string
        lastLoginTime:
          description: The time when the customer last logged in.
          example: '9999-12-31T00:00:00.0Z'
          format: date-time
          type: string
        lastModified:
          description: Returns the value of attribute 'lastModified'.
          example: '9999-12-31T00:00:00.0Z'
          format: date-time
          type: string
        lastName:
          description: The customer's last name.
          example: Smith
          maxLength: 256
          type: string
        lastVisitTime:
          description: The time when the customer last visited.
          example: '9999-12-31T00:00:00.0Z'
          format: date-time
          type: string
        login:
          description: The customer's login. In a PATCH call, this field can only be updated by providing a valid `currentPassword` for the shopper. The `loginId` update feature is available with B2C Commerce version 24.7.
          example: jsmith
          maxLength: 256
          type: string
        note:
          description: The customer's note.
          example: customer-note
          type: string
        paymentInstruments:
          description: The customer's payment instruments.
          items:
            $ref: '#/components/schemas/CustomerPaymentInstrument'
          type: array
        phoneBusiness:
          description: The customer's business phone number.
          example: 555-555-5555
          maxLength: 32
          type: string
        phoneHome:
          description: The customer's home phone number.
          example: 555-555-5555
          maxLength: 32
          type: string
        phoneMobile:
          description: The customer's mobile phone number.
          example: 555-555-5555
          maxLength: 32
          type: string
        preferredLocale:
          description: The customer's preferred locale.
          example: us-en
          type: string
        previousLoginTime:
          description: The time when the customer previously logged in.
          example: '9999-12-31T00:00:00.0Z'
          format: date-time
          type: string
        previousVisitTime:
          description: The time when the customer last visited the store.
          example: '9999-12-31T00:00:00.0Z'
          format: date-time
          type: string
        salutation:
          description: The salutation to use for the customer.
          example: Mr.
          maxLength: 256
          type: string
        secondName:
          description: The customer's second name.
          example: Smith
          maxLength: 256
          type: string
        suffix:
          description: The customer's suffix (for example, "Jr." or "Sr.").
          example: Jr.
          maxLength: 256
          type: string
        title:
          description: The customer's title (for example, "Mrs" or "Mr").
          example: Mr.
          maxLength: 256
          type: string
      type: object
    CustomerRegistration:
      description: Document representing the registration information for a customer.
      properties:
        customer:
          allOf:
            - $ref: '#/components/schemas/Customer'
          description: The customer registration information. The mandatory properties for registration are login, last name and email.
          example:
            email: jsmith@test.com
            last_name: Smith
            login: jsmith
        password:
          description: The login password
          example: Abcd!1234
          type: string
      required:
        - customer
        - password
      type: object
    ErrorResponse:
      type: object
      additionalProperties: true
      properties:
        title:
          description: "A short, human-readable summary of the problem\ntype.  It will not change from occurrence to occurrence of the \nproblem, except for purposes of localization\n"
          type: string
          maxLength: 256
          example: You do not have enough credit
        type:
          description: |
            A URI reference [RFC3986] that identifies the
            problem type.  This specification encourages that, when
            dereferenced, it provide human-readable documentation for the
            problem type (e.g., using HTML [W3C.REC-html5-20141028]).  When
            this member is not present, its value is assumed to be
            "about:blank". It accepts relative URIs; this means
            that they must be resolved relative to the document's base URI, as
            per [RFC3986], Section 5.
          type: string
          maxLength: 2048
          example: NotEnoughMoney
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
          example: Your current balance is 30, but that costs 50
        instance:
          description: |
            A URI reference that identifies the specific
            occurrence of the problem.  It may or may not yield further
            information if dereferenced.  It accepts relative URIs; this means
            that they must be resolved relative to the document's base URI, as
            per [RFC3986], Section 5.
          type: string
          maxLength: 2048
          example: /account/12345/msgs/abc
      required:
        - title
        - type
        - detail
    ResetPasswordRequest:
      required:
        - login
        - newPassword
        - resetToken
      type: object
      properties:
        resetToken:
          maxLength: 4096
          type: string
          description: Temporary token used to reset password.
          example: R1e2s3e4t5T6o7k8e9n0
        login:
          maxLength: 256
          type: string
          description: The customer's login.
          example: loginId
        newPassword:
          maxLength: 4096
          type: string
          description: New password to reset to.
          example: p@ssword2
      description: Document representing a reset password request.
    ResetPasswordTokenRequest:
      required:
        - login
      type: object
      properties:
        login:
          maxLength: 256
          type: string
          description: The customer's login.
          example: loginId
      description: Document representing a reset password token request.
    ResetPasswordToken:
      required:
        - email
        - expiresInMinutes
        - login
        - resetToken
      type: object
      properties:
        login:
          maxLength: 256
          type: string
          description: The customer's login.
          example: loginId
        email:
          maxLength: 256
          type: string
          description: The customer's email address.
          example: jdoe@customer.com
        resetToken:
          maxLength: 4096
          type: string
          description: Temporary token generated that will be used to reset password.
          example: R1e2s3e4t5T6o7k8e9n0
        expiresInMinutes:
          type: integer
          description: Reset token expiry (in minutes).
          format: int32
          example: 30
      description: Document representing reset password token response.
    CustomerExtProfileRequest:
      description: Document representing the External Profile Request.
      properties:
        authenticationProviderId:
          description: The authentication Provider Id
          example: Google
          minLength: 1
          type: string
        email:
          description: The Email of the customer.
          example: s@gmail.com
          minLength: 1
          type: string
        externalId:
          description: The ID of the customer.
          example: jsmith@gmail.com
          minLength: 1
          type: string
        firstName:
          description: The First Name of the customer.
          example: John
          minLength: 1
          type: string
        lastName:
          description: The Last Name of the customer.
          example: Smith
          minLength: 1
          type: string
      required:
        - authenticationProviderId
        - externalId
      type: object
    CustomerExternalProfile:
      type: object
      required:
        - customerId
      allOf:
        - $ref: '#/components/schemas/CustomerExtProfileRequest'
      properties:
        customerId:
          description: The Id of the Customer
          example: '1234'
          minLength: 1
          type: string
      description: The Document representing the External Profile of a Customer.
    CountryCode:
      pattern: ^[A-Z][A-Z]$
      description: A two letter uppercase country code conforming to the [ISO 3166-1](https://www.iso.org/iso-3166-country-codes.html) alpha-2 standard.
      example: US
      type: string
    OrderAddress:
      description: Document representing an order address.
      properties:
        address1:
          description: The first address line.
          example: 45 Main Rd.
          type: string
        address2:
          description: The second address line.
          example: Apartment 204
          type: string
        city:
          description: The city.
          example: Boston
          type: string
        companyName:
          description: The company name.
          example: Salesforce
          type: string
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        firstName:
          description: The first name.
          example: Max
          type: string
        fullName:
          description: The full name.
          example: Max Mustermann
          type: string
        id:
          description: The ID of the address.
          example: me
          type: string
        jobTitle:
          description: The job title.
          example: Software Engineer
          type: string
        lastName:
          description: The last name.
          example: Mustermann
          type: string
        phone:
          description: The phone number.
          example: '6175555555'
          type: string
        postBox:
          description: The post office box.
          example: PO BOX 109
          type: string
        postalCode:
          description: The postal code.
          example: '05408'
          type: string
        salutation:
          description: The salutation.
          example: Mr
          type: string
        secondName:
          description: The second name.
          type: string
        stateCode:
          description: The state code.
          example: MA
          type: string
        suffix:
          description: The suffix.
          example: Sr
          type: string
        suite:
          description: The suite.
          example: 24A
          type: string
        title:
          description: The title.
          example: Dr.
          type: string
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
    ProductId:
      minLength: 1
      maxLength: 100
      type: string
      description: The id (SKU) of the product.
      example: apple-ipod-classic
    ProductDetailsLink:
      description: Document representing a link to the resource for product details.
      properties:
        productDescription:
          description: The description of the product.
          example: Nintendo DS revolutionizes handheld gameplay.
          type: string
        productId:
          $ref: '#/components/schemas/ProductId'
        productName:
          description: The name of the product.
          example: Nintendo DS Game Console
          type: string
        title:
          description: The link title.
          example: Nintendo DS Game Console
          type: string
      type: object
      required:
        - productId
      additionalProperties: false
    BonusDiscountLineItem:
      description: Document representing a bonus discount line item.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      type: object
      properties:
        bonusProducts:
          description: The bonus products the customer can choose from.
          type: array
          items:
            $ref: '#/components/schemas/ProductDetailsLink'
        couponCode:
          description: The coupon code that triggered the promotion, if applicable.
          example: 5ties
          type: string
        id:
          description: The ID of the line item. It is read only.
          example: 91f4dd8bfa0653d58b7783b04f
          type: string
        maxBonusItems:
          format: int32
          description: The maximum number of bonus items the user can select for this promotion.
          type: integer
        promotionId:
          description: The ID of the promotion that triggered the creation of the line item.
          example: Buy1Get2
          type: string
    CouponItemId:
      minLength: 1
      type: string
      description: The coupon item ID
      example: d4c9c0141e9c74c150225580f3
    CouponItem:
      description: Document representing a coupon item.
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        code:
          maxLength: 256
          description: The coupon code.
          example: 5ties
          type: string
        couponItemId:
          description: The coupon item ID. It is read only.
          allOf:
            - $ref: '#/components/schemas/CouponItemId'
        statusCode:
          description: The status of the coupon item. It is read only.
          example: no_applicable_promotion
          enum:
            - coupon_code_already_in_basket
            - coupon_code_already_redeemed
            - coupon_code_unknown
            - coupon_disabled
            - redemption_limit_exceeded
            - customer_redemption_limit_exceeded
            - timeframe_redemption_limit_exceeded
            - no_active_promotion
            - coupon_already_in_basket
            - no_applicable_promotion
            - applied
            - adhoc
          type: string
        valid:
          description: |-
            A flag indicating whether the coupon item is valid. A coupon line item is valid if
            the status code is "applied" or "no_applicable_promotion". It is read only.
          example: true
          type: boolean
      required:
        - code
    ISOCurrency:
      pattern: ^[A-Z][A-Z][A-Z]$
      description: A three letter uppercase currency code conforming to the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
      example: USD
      type: string
    NoValue:
      default: N/A
      description: A specialized value indicating the lack of definition of a currency, for example, if the value of the monetary value of the currency is an undefined number.
      example: N/A
      enum:
        - N/A
      type: string
    CurrencyCode:
      description: A three letter uppercase currency code conforming to the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard, or the string `N/A` indicating that a currency is not applicable.
      example: USD
      oneOf:
        - $ref: '#/components/schemas/ISOCurrency'
        - $ref: '#/components/schemas/NoValue'
    CustomerInfo:
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      description: The customer information for guest or logged-in customers.
      type: object
      properties:
        customerId:
          maxLength: 100
          description: The customer ID. It is read only.
          example: abMKqMaNYOBMnNdDNzyC5oNTi5
          type: string
        customerName:
          description: The customer name.
          example: Max Mustermann
          type: string
        customerNo:
          maxLength: 100
          description: The customer number.
          example: '0002352'
          type: string
        email:
          description: The customer's email address.
          example: no-reply@salesforce.com
          type: string
      required:
        - email
    GiftCertificateItemId:
      example: 629dea6e7b61e58da629b57b21
      type: string
      minLength: 1
    GiftCertificateItem:
      description: A gift certificate item.
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        amount:
          format: double
          description: The gift certificate item amount.
          example: 20
          type: number
        giftCertificateItemId:
          description: The item ID. It is read only.
          allOf:
            - $ref: '#/components/schemas/GiftCertificateItemId'
        message:
          maxLength: 4000
          description: The gift certificate message.
          example: Birthday present.
          type: string
        recipientEmail:
          minLength: 1
          description: The recipient email.
          example: no-reply@salesforce.com
          type: string
        recipientName:
          description: The recipient's name.
          example: Daniel Mustermann
          type: string
        senderName:
          description: The sender's name.
          example: Max Mustermann
          type: string
        shipmentId:
          description: The ID of the shipment this item belongs to.
          example: me
          type: string
      required:
        - amount
        - recipientEmail
    GroupedTaxItem:
      description: Document representing the grouped tax item.
      type: object
      properties:
        taxRate:
          description: The tax rate. It is read only.
          type: number
          format: double
          example: 0.1
        taxValue:
          description: The summed up tax total for the tax rate. It is read only.
          type: number
          format: double
          example: 10.03
      additionalProperties: false
    Discount:
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      description: Document representing a discount.
      type: object
      properties:
        amount:
          format: double
          description: The discount amount for discount types that define specific discount amounts. It is read only.
          example: 130.88
          type: number
        percentage:
          format: double
          description: The discount percent for discount types that define percentage discounts. It is read only.
          example: 0.19
          type: number
        priceBookId:
          description: The price book ID that is used with some types. It is read only.
          example: usd-sale-prices
          type: string
        type:
          description: The type of discount. It is read only.
          example: fixed_price
          enum:
            - percentage
            - fixed_price
            - amount
            - free
            - price_book_price
            - bonus
            - total_fixed_price
            - bonus_choice
            - percentage_off_options
          type: string
      required:
        - type
    PriceAdjustmentId:
      example: ba248424e3eee797f062161f8b
      type: string
    PriceAdjustment:
      description: |-
        Document representing a price adjustment within a basket or order. Price adjustments
        can be assigned at the order, product, or shipping level.
      properties:
        appliedDiscount:
          description: |-
            Details describing the discount this price adjustment is based on. For adjustments
            not based on a discount, this value is null.
          allOf:
            - $ref: '#/components/schemas/Discount'
        couponCode:
          description: |-
            The coupon code of the coupon this price adjustment is based on. For adjustments
            not based on a coupon, this value is null. It is read only.
          example: 5ties
          type: string
        createdBy:
          description: The user who created the price adjustment. It is read only.
          example: Support
          type: string
        creationDate:
          description: The timestamp when the price adjustment was created. It is read only.
          example: '2015-05-19T15:23:18.000Z'
          type: string
          format: date-time
        custom:
          description: |-
            A flag indicating whether this price adjustment was created by custom logic. This
            flag is set to true unless the price adjustment was created by the promotion
            engine.
          example: true
          type: boolean
        itemText:
          description: The text describing the item.
          type: string
        lastModified:
          description: The timestamp when the price adjustment was last modified. It is read only.
          example: '2021-02-25T09:58:08.715Z'
          type: string
          format: date-time
        manual:
          description: |-
            A flag indicating whether this price adjustment was created by a manual process.
            If the price adjustment was created by the promotion engine, this value is always
            false.
          example: true
          type: boolean
        price:
          format: double
          description: The adjustment price. It is read only.
          example: 120.88
          type: number
        priceAdjustmentId:
          description: The price adjustment ID. It is read only.
          allOf:
            - $ref: '#/components/schemas/PriceAdjustmentId'
        promotionId:
          description: |-
            The ID of the related promotion. Custom price adjustments
            can be assigned any promotion ID so long it is not
            used by a price adjustment belonging to the same item,
            and is not used by a promotion defined in the promotion engine.
            If not specified, a promotion ID is generated.
          type: string
        reasonCode:
          description: The reason for the price adjustment.
          type: string
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
    Status:
      description: Document representing an object status.
      properties:
        code:
          description: The status code.
          type: string
        message:
          description: The status message.
          type: string
        status:
          format: int32
          description: |-
            The status.
            For more information on the status values see Status.OK and Status.ERROR.
          type: integer
      type: object
      additionalProperties: false
    PaymentInstrumentId:
      description: The payment instrument ID
      example: ba248424e3eee797f062162f8b
      type: string
    OrderPaymentInstrument:
      description: Document representing an order payment instrument.
      properties:
        amount:
          format: double
          description: The payment transaction amount.
          example: 130.88
          type: number
        authorizationStatus:
          description: The authorization status of the payment transaction. It is read only.
          allOf:
            - $ref: '#/components/schemas/Status'
        bankRoutingNumber:
          maxLength: 256
          description: The bank routing number.
          example: '12030000'
          type: string
        maskedGiftCertificateCode:
          description: The gift certificate code with the last 4 characters not masked.
          example: '******Gzzy'
          type: string
        paymentCard:
          description: The payment card.
          allOf:
            - $ref: '#/components/schemas/PaymentCard'
        paymentInstrumentId:
          description: The payment instrument ID. It is read only.
          allOf:
            - $ref: '#/components/schemas/PaymentInstrumentId'
        paymentMethodId:
          maxLength: 256
          description: The payment method ID. It is read only.
          example: CREDIT_CARD
          type: string
      type: object
    ProductItem:
      description: Document representing a product item.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      type: object
      properties:
        adjustedTax:
          format: double
          description: The tax on the line item, including any adjustments. It is read only.
          example: 19
          type: number
        basePrice:
          format: double
          description: |-
            The base price of the line item, which is the unit price not including
            adjustments. If the taxation policy is net, it doesn't include tax. If the
            taxation policy is gross, it includes tax. It is read only.
          example: 130
          type: number
        bonusDiscountLineItemId:
          description: The ID of the bonus discount line item this bonus product relates to. It is read only.
          type: string
        bonusProductLineItem:
          description: A flag indicating whether the product item is a bonus.
          example: true
          type: boolean
        bundledProductItems:
          description: The bundled product items.
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        gift:
          description: Returns true if the item is a gift. It is read only.
          example: true
          type: boolean
        giftMessage:
          description: The gift message.
          example: Happy Birthday
          type: string
        inventoryId:
          maxLength: 256
          description: The inventory list ID associated with this item.
          example: inventory
          type: string
        itemId:
          description: |-
            The product item ID. Use it to identify this item when updating its quantity or
            creating a custom price adjustment for it. It is read only.
          allOf:
            - $ref: '#/components/schemas/ItemId'
        itemText:
          description: The text describing the item.
          type: string
        optionItems:
          description: The option items.
          type: array
          items:
            $ref: '#/components/schemas/OptionItem'
        price:
          format: double
          description: |-
            The price of the line item before applying any adjustments. If the line item is based on net pricing
            then the net price is returned. If the line item is based on gross
            pricing then the gross price is returned. It is read only.
          type: number
        priceAdjustments:
          description: The price adjustments.
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        priceAfterItemDiscount:
          format: double
          description: |-
            The price of the product line item including item-level adjustments, but not
            including order-level adjustments or shipping charges. If the taxation policy is
            net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 20.99
          type: number
        priceAfterOrderDiscount:
          format: double
          description: |-
            The price of the product line item including item-level adjustments and prorated
            order-level adjustments, but not including shipping charges. If the taxation
            policy is net, it doesn't include tax. If the taxation policy is gross, it
            includes tax. It is read only.
          example: 15.5
          type: number
        productId:
          maxLength: 100
          description: The ID of the product.
          example: nintendo-ds-console
          type: string
        productListItem:
          description: |-
            If this product line item was added from a product list, this value is a reference
            to the corresponding product list item.
          allOf:
            - $ref: '#/components/schemas/ProductListItemReference'
        productName:
          description: The name of the product.
          example: Nintendo DS Game Console
          type: string
        qualifyingProductItemId:
          maxLength: 28
          description: "Returns the id of the ProductLineItem that qualified the basket for this bonus product. \nThis method is only applicable if the product line item is a bonus product line item, and if the promotion is a\nproduct promotion with number of qualifying products granting a bonus-product discount. If these conditions\naren't met, the method returns null. If there are multiple product line items that triggered this bonus product,\nthis method returns the last one by position within the order."
          type: string
        quantity:
          minimum: 0
          format: double
          description: The quantity of the products represented by this item.
          example: 1
          type: number
        shipmentId:
          description: The ID of the shipment this item belongs to.
          example: me
          type: string
        shippingItemId:
          description: |-
            If the product line item has a related shipping item, this value is its ID. A
            related shipping item represents a surcharge applied to individual products using
            a particular shipping method. It is read only.
          example: 006490dcc338feeafc71c964bf
          type: string
        tax:
          format: double
          description: The tax for the product item, not including price adjustments. It is read only.
          example: 0.3
          type: number
        taxBasis:
          format: double
          description: The price used to calculate the tax for this product item. It is read only.
          example: 30
          type: number
        taxClassId:
          description: |-
            The tax class ID for the product item, or null
            if no tax class ID is associated with the product item. It is read only.
          type: string
        taxRate:
          format: double
          description: |-
            The tax rate, which is the decimal tax rate to be applied
            to the product represented by this item. It is read only.
          example: 0.9
          type: number
    ItemId:
      description: The item id.
      example: 430ef5aad3a24de59378458434
      type: string
    OptionItem:
      description: |-
        An option item represents an optional purchase related to a product item, and is always associated with that parent product
        item. An option item can have different values from which to select. For example, a refrigerator item can have an option item representing an extended warranty, with a set of option item values representing different warranty lengths. When a shopper purchases the warranty option item together with the parent refrigerator item, they select one of the available warranty option item values.
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        adjustedTax:
          format: double
          description: The tax on the line item, including any adjustments. It is read only.
          example: 19
          type: number
        basePrice:
          format: double
          description: |-
            The base price of the line item, which is the unit price not including adjustments.
            If the taxation policy is net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 50
          type: number
        bonusDiscountLineItemId:
          description: The ID of the bonus discount line item this bonus product relates to. It is read only.
          example: ba248414e3eee797f062162f8b
          type: string
        bonusProductLineItem:
          description: A flag indicating whether the product item is a bonus. It is read only.
          example: false
          type: boolean
        bundledProductItems:
          description: The bundled product items.
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        gift:
          description: Returns true if the item is a gift. It is read only.
          example: false
          type: boolean
        giftMessage:
          description: The gift message.
          example: Happy Birthday
          type: string
        inventoryId:
          maxLength: 256
          description: The inventory list ID associated with this item. It is read only.
          example: inventory
          type: string
        itemId:
          description: The product item ID. Use it to identify this item when updating its quantity or creating a custom price adjustment for it. It is read only.
          allOf:
            - $ref: '#/components/schemas/ItemId'
        itemText:
          description: The text describing the item.
          example: The item text.
          type: string
        optionId:
          maxLength: 256
          description: The ID of the option. It is read only.
          example: consoleWarranty
          type: string
        optionItems:
          description: The option items.
          type: array
          items:
            $ref: '#/components/schemas/OptionItem'
        optionValueId:
          maxLength: 256
          description: The ID of the option value. It is read only.
          example: '000'
          type: string
        price:
          format: double
          description: |-
            The price of the line item before applying any adjustments. If the taxation policy is net, it doesn't include tax.
            If the taxation policy is gross, it includes tax. It is read only.
          example: 150.99
          type: number
        priceAdjustments:
          description: The price adjustments.
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        priceAfterItemDiscount:
          format: double
          description: |-
            The price of the product line item including item-level adjustments, but not including order-level adjustments or
            shipping charges. If the taxation policy is net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 50.99
          type: number
        priceAfterOrderDiscount:
          format: double
          description: |-
            The price of the product line item including item-level adjustments and prorated order-level adjustments, but not
            including shipping charges. If the taxation policy is net, it doesn't include tax. If the taxation policy is gross, it
            includes tax. It is read only.
          example: 40.5
          type: number
        productId:
          $ref: '#/components/schemas/ProductId'
        productListItem:
          description: If this product line item was added from a product list, this value is a reference to the corresponding product list item.
          allOf:
            - $ref: '#/components/schemas/ProductListItemReference'
        productName:
          description: The name of the product.
          example: Nintendo DS Game Console
          type: string
        quantity:
          minimum: 0
          format: double
          description: The ordered quantity of the products represented by this item.
          example: 1
          type: number
        shipmentId:
          description: The ID of the shipment this item belongs to.
          example: me
          type: string
        shippingItemId:
          description: |-
            If the product line item has a related shipping item, this value is its ID. A related shipping item represents a
            surcharge applied to individual products using a particular shipping method. It is read only.
          example: 006490dcc338feeafc71c964bf
          type: string
        tax:
          format: double
          description: The tax on the line item before applying any adjustments. It is read only.
          example: 0
          type: number
        taxBasis:
          format: double
          description: The amount used to calculate the tax for this item. It is read only.
          example: 50
          type: number
        taxClassId:
          description: |-
            The tax class ID for the product item, or null
            if no tax class ID is associated with the product item. It is read only.
          type: string
        taxRate:
          format: double
          description: |-
            The tax rate, which is the decimal tax rate to be applied
            to the product represented by this item. It is read only.
          example: 0.19
          type: number
      required:
        - optionId
        - optionValueId
    ProductListLink:
      description: Document representing a link to a product list.
      properties:
        description:
          description: The description of this product list.
          type: string
        name:
          description: The name of this product list.
          type: string
        public:
          description: |-
            A flag indicating whether the owner made this product list available for access
            by other customers. It is read only.
          example: true
          type: boolean
        title:
          description: The link title.
          type: string
        type:
          description: The type of the product list.
          example: shopping_list
          enum:
            - wish_list
            - gift_registry
            - shopping_list
            - custom_1
            - custom_2
            - custom_3
          type: string
      type: object
      additionalProperties: false
    ProductListItemReference:
      description: Document representing product list item details.
      type: object
      additionalProperties: false
      properties:
        id:
          description: The ID of the product list item. It is read only.
          allOf:
            - $ref: '#/components/schemas/ItemId'
        priority:
          format: int32
          description: The priority of the product list item.
          example: 1
          type: integer
        productDetailsLink:
          $ref: '#/components/schemas/ProductDetailsLink'
        productList:
          description: A reference to the associated product list. It is read only.
          allOf:
            - $ref: '#/components/schemas/ProductListLink'
        public:
          example: false
          type: boolean
        purchasedQuantity:
          format: double
          description: The total quantity of this item purchased from the product list.
          example: 0
          type: number
        quantity:
          minimum: 0
          format: double
          description: The number of products or gift certificates that get shipped when purchasing this product list item.
          example: 1
          type: number
        type:
          description: Specifies whether the item is a product or a gift certificate.
          example: product
          enum:
            - product
            - gift_certificate
          type: string
      required:
        - id
    ShipmentId:
      minLength: 1
      type: string
      example: me
      description: The identifier of the shipment
    ShippingPromotion:
      description: Document representing a shipping promotion.
      properties:
        calloutMsg:
          description: The localized callout message of the promotion.
          example: $30 Fixed Shipping Amount Above 150
          type: string
        promotionId:
          description: The unique ID of the promotion.
          example: $30FixedShippingAmountAbove150
          type: string
        promotionName:
          description: The localized promotion name.
          example: $30 Fixed Shipping Amount Above 150
          type: string
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
    ShippingMethod:
      description: Document representing a shipping method.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        description:
          description: The localized description of the shipping method.
          example: Order received within 7-10 business days
          type: string
        externalShippingMethod:
          description: The external shipping method.
          type: string
        id:
          maxLength: 256
          description: The shipping method ID.
          example: '001'
          type: string
        name:
          description: The localized name of the shipping method.
          example: Ground
          type: string
        price:
          format: double
          description: |-
            The shipping cost total, including shipment level costs,
            product level fix, and surcharge costs. It is read only.
          example: 15
          type: number
        shippingPromotions:
          description: |-
            The array of active customer shipping promotions for this shipping
            method. This array can be empty.
          type: array
          items:
            $ref: '#/components/schemas/ShippingPromotion'
      type: object
      required:
        - id
    Shipment:
      description: Document representing a shipment.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        adjustedMerchandizeTotalTax:
          format: double
          description: |-
            The total tax on products in the shipment, including item-level price adjustments but not including
            service charges such as shipping. If the Discount Taxation preference is set to Tax Products and
            Shipping Only Based on Adjusted Price, this amount also includes prorated order-level price adjustments. It is read only.
          example: 4.95
          type: number
        adjustedShippingTotalTax:
          format: double
          description: The total tax on shipping charges in the shipment, including shipping price adjustments. It is read only.
          example: 0.3
          type: number
        gift:
          description: A flag indicating whether the shipment is a gift. It is read only.
          example: true
          type: boolean
        giftMessage:
          description: The gift message.
          example: Happy Birthday
          type: string
        merchandizeTotalTax:
          format: double
          description: |-
            The total tax on products in the shipment, not including price adjustments or service charges such as
            shipping. It is read only.
          example: 4.95
          type: number
        productSubTotal:
          format: double
          description: |-
            The total price of all products in the shipment, including item-level adjustments, but not including
            order-level adjustments or shipping charges. If the taxation policy is net, it doesn't include tax. If
            the taxation policy is gross, it includes tax. It is read only.
          example: 99
          type: number
        productTotal:
          format: double
          description: |-
            The total price of all products in the shipment including item-level adjustments and prorated
            order-level adjustments, but not including shipping charges. If the taxation policy is net, it doesn't
            include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 99
          type: number
        shipmentId:
          description: The order-specific ID of the shipment. The default value is 'me'.
          default: me
          allOf:
            - $ref: '#/components/schemas/ShipmentId'
        shipmentNo:
          description: The shipment number of this shipment. This number is automatically generated. It is read only.
          type: string
        shipmentTotal:
          format: double
          description: |-
            The total price of all products in the shipment including item-level adjustments, shipping charges,
            and tax. It is read only.
          example: 39.99
          type: number
        shippingAddress:
          description: The shipping address.
          allOf:
            - $ref: '#/components/schemas/OrderAddress'
        shippingMethod:
          $ref: '#/components/schemas/ShippingMethod'
        shippingStatus:
          description: The shipping status of the shipment.
          example: shipped
          enum:
            - not_shipped
            - shipped
          type: string
        shippingTotal:
          format: double
          description: |-
            The total price of all shipping charges in the shipment, including shipping adjustments. If the
            taxation policy is net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 5.99
          type: number
        shippingTotalTax:
          format: double
          description: The total tax on shipping charges in the shipment, not including shipping price adjustments. It is read only.
          example: 0.3
          type: number
        taxTotal:
          format: double
          description: |-
            The total tax on the shipment, including item-level price adjustments and service charges such as
            shipping. If the Discount Taxation preference is set to Tax Products and Shipping Only Based on
            Adjusted Price, this amount also includes prorated order-level price adjustments. It is read only.
          example: 1.8
          type: number
        trackingNumber:
          description: The tracking number of the shipment.
          example: 1Z204E380338943508
          type: string
      type: object
    ShippingItem:
      description: Document representing a shipping item.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        adjustedTax:
          format: double
          description: The tax for the shipping item, including price adjustments. It is read only.
          example: 19
          type: number
        basePrice:
          format: double
          description: |-
            The base price of the shipping item, which is the unit price not including adjustments.
            If the taxation policy is net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 50
          type: number
        itemId:
          description: |-
            The shipping item ID. Use it to identify this shipping item when updating its quantity or creating a
            custom price adjustment for it. It is read only.
          example: 430ef5aad3a24de59378458434
          type: string
        itemText:
          description: The text describing the shipping item.
          example: Shipping
          type: string
        price:
          format: double
          description: |-
            The price of the line item before applying any adjustments. If the line item is based on net pricing
            then the net price is returned. If the line item is based on gross
            pricing then the gross price is returned. It is read only.
          type: number
        priceAdjustments:
          description: The price adjustments.
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        priceAfterItemDiscount:
          format: double
          description: |-
            The price of the shipping item including item-level adjustments, but not including order-level
            adjustments or shipping charges. If the taxation policy is net, it doesn't include tax.
            If the taxation policy is gross, it includes tax. It is read only.
          type: number
        shipmentId:
          description: The identifier of the shipment to which this item belongs.
          allOf:
            - $ref: '#/components/schemas/ShipmentId'
        tax:
          format: double
          description: The tax on the product item, not including adjustments. It is read only.
          example: 0.19
          type: number
        taxBasis:
          format: double
          description: The price used to calculate the tax for this shipping item. It is read only.
          type: number
        taxClassId:
          description: |-
            The tax class ID for the product item, or null
            if no tax class ID is associated with the product item. It is read only.
          type: string
        taxRate:
          format: double
          description: The tax rate applicable to this product line item. For a 10% tax rate, the value is 0.1. It is read only.
          type: number
      type: object
    Basket:
      description: Document representing a basket.
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
      properties:
        adjustedMerchandizeTotalTax:
          format: double
          description: |-
            The total tax on products in the shipment, including item-level price adjustments but not
            including service charges such as shipping. If the Discount Taxation preference is set to Tax
            Products and Shipping Only Based on Adjusted Price, this amount also includes prorated
            order-level price adjustments. It is read only.
          example: 4.95
          type: number
        adjustedShippingTotalTax:
          format: double
          description: The total tax on shipping charges in the shipment, including shipping price adjustments. It is read only.
          example: 0.3
          type: number
        agentBasket:
          description: Is the basket created by an agent? It is read only.
          example: true
          type: boolean
        basketId:
          description: The unique identifier for the basket. It is read only.
          example: e78aa5646a8efebdd9cdd38be7
          type: string
        billingAddress:
          description: The billing address.
          allOf:
            - $ref: '#/components/schemas/OrderAddress'
        bonusDiscountLineItems:
          description: The bonus discount line items.
          type: array
          items:
            $ref: '#/components/schemas/BonusDiscountLineItem'
        channelType:
          description: The sales channel. It is read only.
          example: storefront
          enum:
            - storefront
            - callcenter
            - marketplace
            - dss
            - store
            - pinterest
            - twitter
            - facebookads
            - subscriptions
            - onlinereservation
            - customerservicecenter
            - instagramcommerce
            - tiktok
            - snapchat
            - google
            - whatsapp
            - youtube
          type: string
        couponItems:
          description: The coupon items.
          type: array
          items:
            $ref: '#/components/schemas/CouponItem'
        creationDate:
          description: The timestamp when the basket was created. It is read only.
          example: '2015-05-19T15:23:18.000Z'
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        customerInfo:
          description: The customer information, if the customer is logged in.
          allOf:
            - $ref: '#/components/schemas/CustomerInfo'
        giftCertificateItems:
          description: The gift certificate line items.
          type: array
          items:
            $ref: '#/components/schemas/GiftCertificateItem'
        groupedTaxItems:
          description: |-
            Tax values that are grouped and summed based on the tax rate. The tax totals of the line items with the same
            tax rate are grouped together and summed up. This does not affect the calculation in any way. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/GroupedTaxItem'
        inventoryReservationExpiry:
          description: The expiration datetime of the inventory reservation. It is read only.
          example: '2015-05-19T15:30:18.000Z'
          type: string
          format: date-time
        lastModified:
          description: The timestamp when the basket was last modified. It is read only.
          example: '2015-05-19T15:25:18.000Z'
          type: string
          format: date-time
        merchandizeTotalTax:
          format: double
          description: |-
            The total products tax in the purchase currency.
            Merchandise total price represents the sum of the product prices before
            services (such as shipping) or adjustments from promotions have
            been added. It is read only.
          example: 4.95
          type: number
        orderPriceAdjustments:
          description: The order-level price adjustments.
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        orderTotal:
          format: double
          description: The total price, including products, shipping and tax. It is read only.
          example: 110.24
          type: number
        paymentInstruments:
          description: The payment instruments list.
          type: array
          items:
            $ref: '#/components/schemas/OrderPaymentInstrument'
        productItems:
          description: The product items.
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        productSubTotal:
          format: double
          description: |-
            The total price of all products including item-level adjustments, but not including order-level adjustments or shipping
            charges. If the taxation policy is net, it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 99
          type: number
        productTotal:
          format: double
          description: |-
            The total price of all products including adjustments, but not including shipping charges. If the taxation policy is net,
            it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 88
          type: number
        shipments:
          description: The shipments.
          type: array
          items:
            $ref: '#/components/schemas/Shipment'
        shippingItems:
          description: The shipping items.
          type: array
          items:
            $ref: '#/components/schemas/ShippingItem'
        shippingTotal:
          format: double
          description: |-
            The total price of all shipping charges, including shipping adjustments. If the taxation policy is net, it doesn't
            include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 5.99
          type: number
        shippingTotalTax:
          format: double
          description: The total tax on all shipping charges, not including shipping adjustments. It is read only.
          example: 0.3
          type: number
        sourceCode:
          description: The source code assigned to the basket. It is read only.
          example: OUTDOOR1
          type: string
        taxTotal:
          format: double
          description: The total tax amount. It is read only.
          example: 5.25
          type: number
        taxation:
          description: The taxation policy (gross or net). It is read only.
          example: net
          enum:
            - gross
            - net
          type: string
        taxRoundedAtGroup:
          description: If the tax is rounded at the group level, this is set to true. If the tax is rounded at the item or unit level, it is set to false.
          example: true
          type: boolean
        temporaryBasket:
          description: If the created basket is a temporary basket, this is set to true. Otherwise, it is set to false.
          example: true
          type: boolean
      type: object
    BasketsResult:
      description: Result document containing an array of baskets.
      properties:
        baskets:
          description: The list of baskets for a customer.
          items:
            allOf:
              - $ref: '#/components/schemas/Basket'
              - required:
                  - adjustedMerchandizeTotalTax
                  - adjustedShippingTotalTax
                  - agentBasket
                  - basketId
                  - channelType
                  - creationDate
                  - currency
                  - customerInfo
                  - lastModified
                  - merchandizeTotalTax
                  - orderTotal
                  - productSubTotal
                  - productTotal
                  - shipments
                  - shippingItems
                  - shippingTotal
                  - shippingTotalTax
                  - taxTotal
                  - taxation
          type: array
        total:
          description: The total number of baskets.
          example: 10
          format: int32
          type: integer
      required:
        - total
      type: object
    Limit:
      default: 10
      minimum: 1
      format: int32
      description: Maximum records to retrieve per request, not to exceed the maximum defined. A limit must be at least 1 so at least one record is returned (if any match the criteria).
      type: integer
      example: 10
    Total:
      default: 0
      minimum: 0
      format: int64
      description: The total number of hits that match the search's criteria. This can be greater than the number of results returned as search results are pagenated.
      type: integer
      example: 10
    ResultBase:
      description: "Schema defining generic list result. Each response schema of a resource requiring a list response should extend this schema. \nAdditionally it needs to be defined what data is returned."
      type: object
      required:
        - limit
        - total
      properties:
        limit:
          maximum: 200
          allOf:
            - $ref: '#/components/schemas/Limit'
        total:
          $ref: '#/components/schemas/Total'
    Offset:
      default: 0
      minimum: 0
      format: int64
      description: The zero-based index of the first hit/data to include in the result.
      type: integer
      example: 0
    PaginatedResultBase:
      description: "Schema defining generic pageable result. Each response schema of a resource requiring pagination should extend this schema. \nIf you use this extend this schema directly, it needs to be defined what data is returned. Allowed names for the data field is `data`."
      type: object
      allOf:
        - $ref: '#/components/schemas/ResultBase'
      properties:
        offset:
          $ref: '#/components/schemas/Offset'
      required:
        - limit
        - offset
        - total
    OrderNo:
      description: The order number
      minLength: 1
      maxLength: 50
      type: string
      example: '00000410'
    Order:
      description: Document representing an order.
      type: object
      properties:
        adjustedMerchandizeTotalTax:
          format: double
          description: |-
            The total tax on products in the order, including price adjustments, but not including service charges such as
            shipping. It is read only.
          example: 1.5
          type: number
        adjustedShippingTotalTax:
          format: double
          description: The total tax on shipping charges in the order, including shipping price adjustments. It is read only.
          example: 0.3
          type: number
        billingAddress:
          description: The billing address.
          allOf:
            - $ref: '#/components/schemas/OrderAddress'
        bonusDiscountLineItems:
          description: The bonus discount line items.
          type: array
          items:
            $ref: '#/components/schemas/BonusDiscountLineItem'
        channelType:
          description: The sales channel. It is read only.
          example: storefront
          enum:
            - storefront
            - callcenter
            - marketplace
            - dss
            - store
            - pinterest
            - twitter
            - facebookads
            - subscriptions
            - onlinereservation
            - customerservicecenter
            - instagramcommerce
            - tiktok
            - snapchat
            - google
            - whatsapp
            - youtube
          type: string
        confirmationStatus:
          description: The confirmation status.
          example: confirmed
          enum:
            - not_confirmed
            - confirmed
          type: string
        couponItems:
          description: The coupon items. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/CouponItem'
        createdBy:
          description: |-
            This value depends on how the order was created. If a shopper created the order, this value is Customer.
            If a job created the order, this value is System. Otherwise, this value is the name of the user who created the order. It is read only.
          example: Customer
          type: string
        creationDate:
          description: The timestamp when the order was created. It is read only.
          example: '2015-05-19T15:23:18.000Z'
          type: string
          format: date-time
        currency:
          description: The ISO 4217 mnemonic code of the currency. It is read only.
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
        customerInfo:
          description: The customer information for guest or logged-in customers. It is read only.
          allOf:
            - $ref: '#/components/schemas/CustomerInfo'
        customerName:
          description: The customer name. It is read only.
          example: Max Mustermann
          type: string
        exportStatus:
          description: The export status of the order.
          example: exported
          enum:
            - not_exported
            - exported
            - ready
            - failed
          type: string
        externalOrderStatus:
          description: The external status of the order.
          example: Submitted
          type: string
        giftCertificateItems:
          description: The gift certificate line items. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/GiftCertificateItem'
        globalPartyId:
          description: The Customer 360 Global Party ID associated with the shopper. It is read only.
          example: GP_1234
          type: string
        lastModified:
          description: The timestamp when the order was last modified. It is read only.
          example: '2021-02-25T09:58:08.715Z'
          type: string
          format: date-time
        merchandizeTotalTax:
          format: double
          description: |-
            The total products tax in the purchase currency. Merchandise total prices represent the sum of product prices
            not including shipping or adjustments. It is read only.
          example: 1.5
          type: number
        orderNo:
          description: The order number.
          example: '00000410'
          allOf:
            - $ref: '#/components/schemas/OrderNo'
        orderPriceAdjustments:
          description: The order-level price adjustments. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        orderToken:
          description: |-
            The order token used to secure the lookup of an order on base of the
            plain order number. The order token contains only URL safe characters. It is read only.
          type: string
        orderTotal:
          format: double
          description: The total price, including products, shipping, and tax. It is read only.
          example: 110.24
          type: number
        orderViewCode:
          description: |-
            The order view code used to secure the order lookup of an order using Order Lookup API.
            The order view code contains only URL safe characters.
            Warning : Order view code must not be exposed in the URL and must only be displayed to the shopper or sent as an email.
            Order view code must not be logged in the code. It is read only.
          type: string
        paymentInstruments:
          description: The payment instruments list.
          type: array
          items:
            $ref: '#/components/schemas/OrderPaymentInstrument'
        paymentStatus:
          description: The payment status.
          example: paid
          enum:
            - not_paid
            - part_paid
            - paid
          type: string
        productItems:
          description: The product items. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        productSubTotal:
          format: double
          description: |-
            The total price of all products including item-level adjustments, but not including
            order-level adjustments or shipping charges. If the taxation policy is net, it doesn't include tax.
            If the taxation policy is gross, it includes tax. It is read only.
          example: 99
          type: number
        productTotal:
          format: double
          description: |-
            The total price of all products in the shipment including item-level adjustments and prorated
            order-level adjustments, but not including shipping charges. If the taxation policy is net,
            it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 99
          type: number
        taxRoundedAtGroup:
          description: If the tax is rounded at the group level, this is set to true. If the tax is rounded at the item or unit level, it is set to false. It is read only.
          type: boolean
          example: true
        shipments:
          description: The shipments. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/Shipment'
        shippingItems:
          description: The shipping items. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/ShippingItem'
        shippingStatus:
          description: The shipping status.
          example: shipped
          enum:
            - not_shipped
            - part_shipped
            - shipped
          type: string
        shippingTotal:
          format: double
          description: |-
            The total price of all shipping charges, including shipping adjustments. If the taxation policy is net,
            it doesn't include tax. If the taxation policy is gross, it includes tax. It is read only.
          example: 5.99
          type: number
        shippingTotalTax:
          format: double
          description: The total tax on all shipping charges, not including shipping adjustments. It is read only.
          example: 0.3
          type: number
        siteId:
          description: The order's site. It is read only.
          example: ShoppingSite
          allOf:
            - $ref: '#/components/schemas/SiteId'
        sourceCode:
          description: The source code assigned to the basket from which this order was created. It is read only.
          example: OUTDOOR1
          type: string
        status:
          description: The status.
          example: created
          enum:
            - created
            - new
            - completed
            - cancelled
            - replaced
            - failed
          type: string
        taxTotal:
          format: double
          description: The total tax amount. It is read only.
          example: 5.25
          type: number
        taxation:
          description: The taxation policy (gross or net). It is read only.
          example: net
          enum:
            - gross
            - net
          type: string
        groupedTaxItems:
          description: |-
            Tax values that are grouped and summed based on the tax rate. The tax totals of the line items with the same
            tax rate are grouped together and summed up. This does not affect the calculation in any way. It is read only.
          type: array
          items:
            $ref: '#/components/schemas/GroupedTaxItem'
        guest:
          description: The registration status of the customer. It is read only.
          type: boolean
          example: true
    CustomerOrderResult:
      type: object
      allOf:
        - $ref: '#/components/schemas/PaginatedResultBase'
      properties:
        data:
          items:
            $ref: '#/components/schemas/Order'
          type: array
          description: The array of customer order documents.
      description: Result document containing an array of customer orders.
    PasswordChangeRequest:
      required:
        - currentPassword
        - password
      type: object
      properties:
        currentPassword:
          maxLength: 4096
          type: string
          description: The customer's current password.
          example: p@ssword1
        password:
          maxLength: 4096
          type: string
          description: The customer's new password.
          example: p@ssword2
      description: Document representing a password change request.
    PaymentBankAccountRequest:
      required:
        - driversLicense
        - driversLicenseStateCode
        - holder
        - number
      type: object
      properties:
        driversLicense:
          maxLength: 256
          type: string
          description: The driver’s license.
          example: 84736485
        driversLicenseStateCode:
          maxLength: 256
          type: string
          description: The driver’s license state code.
          example: UT
        holder:
          maxLength: 256
          type: string
          description: The holder of the bank account.
          example: John Smith
        number:
          maxLength: 256
          type: string
          description: The payment bank account number.
          example: 9796976
      description: Document representing a payment bank account request.
    CustomerPaymentCardRequest:
      required:
        - cardType
        - expirationMonth
        - expirationYear
        - holder
        - issueNumber
        - number
        - validFromMonth
        - validFromYear
      type: object
      properties:
        cardType:
          maxLength: 256
          type: string
          description: The payment card type (for example, "Visa").
          example: Visa
        creditCardToken:
          type: string
          description: |-
            A credit card token. If a credit card is tokenized, the token can be used to look up the credit card data at the
            token store.
          example: hk2jh293484
        expirationMonth:
          type: integer
          description: The month the payment card expires.
          format: int32
          example: 11
        expirationYear:
          type: integer
          description: The year the payment card expires.
          format: int32
          example: 9999
        holder:
          maxLength: 256
          type: string
          description: The payment card holder.
          example: John Smith
        issueNumber:
          maxLength: 256
          type: string
          description: The payment card issue number.
          example: 92743927
        number:
          maxLength: 4000
          type: string
          description: The payment card number.
          example: 4454852652415965
        validFromMonth:
          maximum: 12
          minimum: 1
          type: integer
          description: The month the payment card valid is from.
          format: int32
          example: 11
        validFromYear:
          type: integer
          description: The year the payment card is valid from.
          format: int32
          example: 23
      description: Document representing a customer payment card request.
    CustomerPaymentInstrumentRequest:
      type: object
      properties:
        bankRoutingNumber:
          maxLength: 256
          type: string
          description: The bank routing number.
          example: AB123
        giftCertificateCode:
          maxLength: 256
          type: string
          description: The gift certificate code.
          example: gift-code
        paymentBankAccount:
          allOf:
            - $ref: '#/components/schemas/PaymentBankAccountRequest'
          description: The payment bank account request data.
        paymentCard:
          allOf:
            - $ref: '#/components/schemas/CustomerPaymentCardRequest'
          description: The customer payment card.
        paymentMethodId:
          maxLength: 256
          type: string
          description: The payment method ID. Optional if a customer payment instrument ID is specified.
          example: Credit Card
        default:
          type: boolean
          description: The default payment instrument.
          example: true
      description: Document representing a customer payment instrument request.
    CustomerProductListRegistrant:
      description: Document representing a customer product list registrant.
      properties:
        email:
          description: The email of the registrant.
          example: jsmith@mail.com
          type: string
        firstName:
          description: The first name of the registrant.
          example: John
          type: string
        lastName:
          description: The last name of the registrant.
          example: Smith
          type: string
        role:
          description: The role of the registrant.
          example: Friend
          type: string
      required:
        - email
        - firstName
        - lastName
        - role
      type: object
    CustomerAddressInfo:
      description: Result document of product list addresses.
      properties:
        addressId:
          description: The ID of the address.
          example: Home
          maxLength: 256
          type: string
        title:
          description: The link title.
          example: title
          type: string
      required:
        - addressId
        - title
      type: object
    Product:
      description: Any product that is sold, shown alone, and does not have variations such as different sizes or colors. A product has no reliance on any other product for inheritance. *A product has a SKU and can have a product option, which has a different SKU*.
      properties:
        brand:
          description: The product's brand.
          example: Apple
          type: string
        bundledProducts:
          description: The array of all bundled products of this product.
          type: array
          items:
            $ref: '#/components/schemas/BundledProduct'
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        ean:
          description: The European Article Number of the product.
          example: 8essdf9w3
          type: string
        fetchDate:
          format: int32
          example: 5
          type: integer
        id:
          $ref: '#/components/schemas/ProductId'
        imageGroups:
          description: The array of product image groups.
          type: array
          items:
            $ref: '#/components/schemas/ImageGroup'
        inventories:
          description: |-
            The array of product inventories explicitly requested via the 'inventory_ids' query parameter. This property
             is only returned in context of the 'availability' expansion.
          type: array
          items:
            $ref: '#/components/schemas/Inventory'
        inventory:
          description: |-
            The site default inventory information. This property is only
             returned in context of the 'availability' expansion.
          allOf:
            - $ref: '#/components/schemas/Inventory'
        longDescription:
          description: The localized product's long description.
          example: Awesome long description of product
          type: string
        manufacturerName:
          description: The product's manufacturer name.
          example: Apple
          type: string
        manufacturerSku:
          description: The product's manufacturer SKU.
          example: 2ND8834
          type: string
        master:
          description: 'The master product information, only for types: master, variation group, and variant.'
          allOf:
            - $ref: '#/components/schemas/Master'
        minOrderQuantity:
          format: double
          description: The minimum order quantity for this product.
          example: 2
          type: number
        name:
          description: The localized product name.
          example: Apple IPod Classic
          type: string
        options:
          description: The array of product options, only for type option. This array can be empty.
          type: array
          items:
            $ref: '#/components/schemas/Option'
        pageDescription:
          description: The localized product's page description.
          example: Really good Product
          type: string
        pageKeywords:
          description: The localized product's page description.
          example: Ipod, Music Player
          type: string
        pageTitle:
          description: The localized product's page title.
          example: Apple IPod Classic
          type: string
        pageMetaTags:
          description: Page Meta tags associated with the given product.
          type: array
          items:
            $ref: '#/components/schemas/PageMetaTag'
        price:
          format: double
          description: |-
            The sales price of the product. In case of complex products, like master or set, this is the minimum price of
             related child products.
          example: 59.99
          type: number
        pricePerUnit:
          format: double
          description: The price per unit if defined for the product
          example: 19.99
          type: number
        pricePerUnitMax:
          format: double
          description: The max price per unit typically for a master product's variant.
          example: 29.99
          type: number
        priceMax:
          format: double
          description: The maximum sales of related child products in complex products like master or set.
          example: 69.99
          type: number
        priceRanges:
          description: Array of one or more price range objects representing one or more Pricebooks in context for the site.
          type: array
          items:
            $ref: '#/components/schemas/PriceRange'
        prices:
          description: The prices map with pricebook IDs and their values.
          type: object
          additionalProperties:
            format: double
            type: number
        primaryCategoryId:
          description: The ID of the products primary category.
          example: electronics
          type: string
        productLinks:
          description: The array of source and target product links information.
          type: array
          items:
            $ref: '#/components/schemas/ProductLink'
        productPromotions:
          description: |-
            An array of active customer product promotions for this product, sorted by promotion priority
            using SORT_BY_EXCLUSIVITY ordering (exclusivity → rank → promotion class → discount type →
            best discount → ID). This array can be empty. Coupon promotions are not returned in this array.
            See [PromotionPlan.SORT_BY_EXCLUSIVITY](https://salesforcecommercecloud.github.io/b2c-dev-doc/docs/current/scriptapi/html/index.html?target=class_dw_campaign_PromotionPlan.html) for more details.
          type: array
          items:
            $ref: '#/components/schemas/ProductPromotion'
        recommendations:
          description: Returns a list of recommendations.
          type: array
          items:
            $ref: '#/components/schemas/Recommendation'
        setProducts:
          description: The array of set products of this product.
          type: array
          items:
            $ref: '#/components/schemas/Product'
        shortDescription:
          description: The localized product short description.
          example: Awesome Product
          type: string
        slugUrl:
          description: The complete link to this product's storefront page.
          example: https://www.example.com/on/store/Sites-MySite/default/Product-Show?pid=MyProduct
          type: string
        stepQuantity:
          format: double
          description: |-
            The steps in which the order amount of the product can be
             increased.
          example: 2
          type: number
        tieredPrices:
          description: The document represents list of tiered prices if the product is a variant
          type: array
          items:
            $ref: '#/components/schemas/ProductPriceTable'
        type:
          description: 'The product type information. Can be one or more of the following values: item, master, variation_group, variant, bundle, and set.'
          allOf:
            - $ref: '#/components/schemas/ProductType'
        unit:
          description: The sales unit of the product.
          example: lbs
          type: string
        upc:
          description: The Universal Product Code (UPC).
          example: JSDU876
          type: string
        validFrom:
          description: The time a product is valid from.
          example: '9999-12-31T00:00:00.0Z'
          type: string
          format: date-time
        validTo:
          description: The time a product is valid to.
          example: '9999-12-31T23:59:59.0Z'
          type: string
          format: date-time
        variants:
          description: The array of actual variants. Only for master, variation group, and variant types. This array can be empty.
          type: array
          items:
            $ref: '#/components/schemas/Variant'
        variationAttributes:
          description: |-
            Sorted array of variation attributes information. Only for master,
             variation group, and variant types. This array can be empty.
          type: array
          items:
            $ref: '#/components/schemas/VariationAttribute'
        variationGroups:
          description: The array of actual variation groups. Only for master, variation group, and variant types. This array can be empty.
          type: array
          items:
            $ref: '#/components/schemas/VariationGroup'
        variationValues:
          description: |-
            The actual variation attribute ID - value pairs. Only for variant and
             variation group types.
          type: object
          additionalProperties:
            type: string
      required:
        - id
      type: object
      additionalProperties:
        title: Additional Property Support
        description: |-
          This type supports additional properties passed along with the defined properties of this API.
          To indicate that the properties were defined and expected to be handled as additional properties, they are expected to be prefixed with a `c_`.
          The type will reject any property that does not fit this pattern, only allowing additional properties beginning with the known prefix.
        example: c_trackingId
    BundledProduct:
      description: A bundle of products that can be bought together (all or nothing). Each product in the bundle can itself be bought independently, but this is outside of the context of the bundle. A bundle is a purchasing convenience. *Product bundle has a SKU and price.*
      properties:
        id:
          example: '823476'
          type: string
        product:
          description: The product being bundled.
          allOf:
            - $ref: '#/components/schemas/Product'
        quantity:
          format: double
          description: For the product being bundled, the quantity added to the bundle.
          example: 5
          type: number
      required:
        - id
        - product
        - quantity
      type: object
    Image:
      description: Product image
      properties:
        alt:
          description: The localized alternative text of the image.
          example: Apple iPod Shuffle, large
          type: string
        disBaseLink:
          description: Base URL for the Dynamic Image Service (DIS) address. This is only shown if the image is stored on the server and DIS is enabled.
          example: https://example.com/images/large/ipod-shuffle-silver.jpg
          type: string
        link:
          minLength: 1
          description: The URL of the actual image.
          example: https://example.com/on/demandware.static/-/Sites-electronics-catalog/default/dwc2/images/large/ipod-shuffle.jpg
          type: string
        title:
          description: The localized title of the image.
          example: Apple iPod Shuffle
          type: string
      required:
        - link
      type: object
    VariationAttributeValue:
      description: Document representing a variation attribute value.
      properties:
        description:
          description: The localized description of the variation value.
          example: Color of the product
          type: string
        image:
          description: The first product image for the configured viewtype and this variation value.
          allOf:
            - $ref: '#/components/schemas/Image'
        imageSwatch:
          description: The first product image for the configured viewtype and this variation value (typically the swatch image).
          allOf:
            - $ref: '#/components/schemas/Image'
        name:
          description: The localized display name of the variation value.
          example: Red
          type: string
        orderable:
          description: A flag indicating whether at least one variant with this variation attribute value is available to sell.
          example: true
          type: boolean
        value:
          minLength: 1
          description: The actual variation value.
          example: red
          type: string
      required:
        - value
      type: object
    VariationAttribute:
      description: Document representing a variation attribute.
      properties:
        id:
          minLength: 1
          description: The ID of the variation attribute.
          example: color
          type: string
        name:
          description: The localized display name of the variation attribute.
          example: Color
          type: string
        values:
          description: The sorted array of variation values. This array can be empty.
          type: array
          items:
            $ref: '#/components/schemas/VariationAttributeValue'
      required:
        - id
      type: object
    ImageGroup:
      description: Document representing an image group containing a list of images for a particular view type and an optional variation value.
      properties:
        images:
          description: The images of the image group.
          type: array
          items:
            $ref: '#/components/schemas/Image'
        variationAttributes:
          description: Returns a list of variation attributes applying to this image group.
          type: array
          items:
            $ref: '#/components/schemas/VariationAttribute'
        viewType:
          description: The image view type.
          example: hi-res
          type: string
      required:
        - images
        - viewType
      type: object
    InventoryId:
      description: The inventory ID.
      type: string
      minLength: 1
      maxLength: 256
      example: Site1InventoryList
    Inventory:
      description: Document representing inventory information of the current product for a particular inventory list.
      properties:
        ats:
          format: double
          description: |-
            The Available To Sell (ATS) of the product. If it is infinity, the return value is 999999. The value can be overwritten by the
             OCAPI setting 'product.inventory.ats.max_threshold'.
          example: 15
          type: number
        backorderable:
          description: A flag indicating whether the product is backorderable.
          example: true
          type: boolean
        id:
          $ref: '#/components/schemas/InventoryId'
        inStockDate:
          description: A flag indicating the date when the product will be in stock.
          example: '9999-12-31T00:00:00.0Z'
          type: string
          format: date-time
        orderable:
          description: A flag indicating whether at least one of the products is available to sell.
          example: true
          type: boolean
        preorderable:
          description: A flag indicating whether the product is preorderable.
          example: false
          type: boolean
        stockLevel:
          format: double
          description: |-
            The stock level of the product. If it is infinity, the return value is 999999. The value can be overwritten by the
             OCAPI setting 'product.inventory.stock_level.max_threshold'.
          example: 10
          type: number
      required:
        - id
      type: object
    Price:
      type: number
      description: Document representing a price for a product
      format: double
      example: 12.99
    Master:
      description: The master product is a representation of a group of variant products. This is a non-buyable entity, provides inheritable attributes for its product variants, and is used for navigation. *Doesn't have a SKU.*
      properties:
        masterId:
          description: The ID (SKU) of the master product.
          allOf:
            - $ref: '#/components/schemas/ProductId'
        orderable:
          description: A flag indicating whether at least one of the variants can be ordered.
          example: true
          type: boolean
        price:
          description: The minimum sales price of the related variants.
          allOf:
            - $ref: '#/components/schemas/Price'
        priceMax:
          description: The maximum sales price of the related variants.
          allOf:
            - $ref: '#/components/schemas/Price'
        prices:
          description: List of sale prices.
          type: object
          additionalProperties:
            format: double
            type: number
      required:
        - masterId
      type: object
    OptionValue:
      description: Document representing an option value.
      properties:
        default:
          description: A flag indicating whether this option value is the default one.
          example: true
          type: boolean
        id:
          description: The ID of the option value.
          example: 5YR
          allOf:
            - $ref: '#/components/schemas/ProductId'
        name:
          description: The localized name of the option value.
          example: 5 Year Warranty
          type: string
        price:
          description: The effective price of the option value.
          allOf:
            - $ref: '#/components/schemas/Price'
      required:
        - id
      type: object
    Option:
      description: Product options enable you to sell configurable products that have optional accessories, upgrades, or additional services. Options are always purchased with a product and can't be purchased separately. *Product Option has a SKU and a price associated with it.*
      properties:
        description:
          description: The localized description of the option.
          example: Get this Option
          type: string
        id:
          description: The ID of the option.
          example: Warranty
          allOf:
            - $ref: '#/components/schemas/ProductId'
        image:
          description: The URL to the option image.
          example: https://www.exampleimage.com/images/optionImage.jpg
          type: string
        name:
          description: The localized name of the option.
          example: Warranty
          type: string
        values:
          description: The array of option values. This array can be empty.
          type: array
          items:
            $ref: '#/components/schemas/OptionValue'
      required:
        - id
      type: object
    PageMetaTag:
      description: Document representing a Page Meta Tag object.
      properties:
        id:
          description: The ID of the Page Meta Tag.
          type: string
          example: title
        value:
          description: Locale-specific value of the Page Meta Tag, evaluated by resolving the rule set for the given Business Manager ID.
          type: string
          example: Buy the Long Sleeve Covered Placket Blouse for USD 61.99.
    PriceRange:
      description: Document representing price ranges for a product which happens to be a master product (per Pricebook)
      properties:
        maxPrice:
          description: Maximum price for the given pricebook (usually for a master Product would be the price for the Variant which has the highest price out of all Variants in that pricebook)
          allOf:
            - $ref: '#/components/schemas/Price'
        minPrice:
          description: Minimum price for the given pricebook (usually for a master Product would be the price for the Variant which has the least price out of all Variants in that pricebook)
          allOf:
            - $ref: '#/components/schemas/Price'
        pricebook:
          description: The active pricebook from which the min and the max prices are calculated. The pricebook is based on the site context of the request as defined in ECOM.
          example: usd-list-pricebook
          type: string
      type: object
    ProductLink:
      description: |-
        Document representing a link between two products. It contains the ID of the source and target products, the type of
         product link, and the URLs to retrieve product data.
      properties:
        sourceProductId:
          description: The semantic ID of the product this product link is coming from.
          example: '824756924'
          allOf:
            - $ref: '#/components/schemas/ProductId'
        sourceProductLink:
          description: The URL addressing the product this product link is coming from.
          example: Link
          type: string
        targetProductId:
          description: The semantic ID of the product this product link is pointing to.
          example: 2TR93459
          allOf:
            - $ref: '#/components/schemas/ProductId'
        targetProductLink:
          description: The URL addressing the product this product link is pointing to.
          example: Link
          type: string
        type:
          description: The type of product link.
          example: up_sell
          enum:
            - cross_sell
            - replacement
            - up_sell
            - accessory
            - newer_version
            - alt_orderunit
            - spare_part
            - other
          type: string
      required:
        - sourceProductId
        - sourceProductLink
        - targetProductId
        - targetProductLink
        - type
      type: object
    ProductPromotion:
      description: Document representing a product promotion.
      properties:
        calloutMsg:
          description: The localized call-out message of the promotion.
          example: Fantastic promotion
          type: string
        promotionId:
          description: The unique ID of the promotion.
          example: summerSale
          type: string
        promotionalPrice:
          description: The promotional price for this product.
          allOf:
            - $ref: '#/components/schemas/Price'
      required:
        - calloutMsg
        - promotionId
        - promotionalPrice
      type: object
    RecommendationType:
      description: Document representing a recommendation type.
      properties:
        displayValue:
          description: The localized display value of the recommendation type.
          example: UpSell
          type: string
        value:
          format: int32
          description: The value of the recommendation type.
          example: 2
          type: integer
      required:
        - displayValue
        - value
      type: object
    Recommendation:
      description: Document representing a product recommendation.
      properties:
        calloutMsg:
          description: The localized callout message of the recommendation.
          example: Absolutely recommended
          type: string
        image:
          $ref: '#/components/schemas/Image'
        longDescription:
          description: The localized long description of the recommendation.
          example: Really good detailed product description
          type: string
        name:
          description: The localized name of the recommendation.
          example: Apple Ipod Shuffle
          type: string
        recommendationType:
          $ref: '#/components/schemas/RecommendationType'
        recommendedItemId:
          description: The recommended item ID of the recommendation.
          example: apple-ipod-shuffle
          type: string
        shortDescription:
          description: The localized short description of the recommendation.
          example: Product description
          type: string
      required:
        - recommendationType
      type: object
    ProductPriceTable:
      description: Tiered Price Level Object
      properties:
        price:
          description: Price for the product for the specified tier for the specified pricebook
          allOf:
            - $ref: '#/components/schemas/Price'
        pricebook:
          description: The active pricebook for which this price is defined
          example: usd-list-pricebook
          type: string
        quantity:
          format: double
          description: Quantity tier for which the price is defined.
          example: 1
          type: number
      type: object
    ProductType:
      description: Document representing a product type.
      properties:
        bundle:
          description: A flag indicating whether the product is a bundle.
          example: true
          type: boolean
        item:
          description: A flag indicating whether the product is a standard item.
          example: false
          type: boolean
        master:
          description: A flag indicating whether the product is a master.
          example: true
          type: boolean
        option:
          description: A flag indicating whether the product is an option.
          example: false
          type: boolean
        set:
          description: A flag indicating whether the product is a set.
          example: true
          type: boolean
        variant:
          description: A flag indicating whether the product is a variant.
          example: false
          type: boolean
        variationGroup:
          description: A flag indicating whether the product is a variation group.
          example: false
          type: boolean
      type: object
    Variant:
      description: A product which is a variation within a master product that describes different colors, sizes, or other variation attributes. *Has a SKU.*
      properties:
        orderable:
          description: A flag indicating whether the variant is orderable.
          example: true
          type: boolean
        price:
          description: The sales price of the variant.
          allOf:
            - $ref: '#/components/schemas/Price'
        productId:
          description: The ID (SKU) of the variant.
          example: 8W4756834
          allOf:
            - $ref: '#/components/schemas/ProductId'
        tieredPrices:
          description: List of tiered prices if the product is a variant
          type: array
          items:
            $ref: '#/components/schemas/ProductPriceTable'
        variationValues:
          description: The actual variation attribute ID - value pairs.
          type: object
          additionalProperties:
            type: string
      required:
        - productId
      type: object
    VariationGroup:
      description: Representation of a group of variant products by an attribute. This is a non-buyable entity, provides inheritable attributes for its product variants, and is used for navigation. *Doesn't have a SKU.*
      properties:
        orderable:
          description: A flag indicating whether the variation group is orderable.
          example: false
          type: boolean
        price:
          description: The sales price of the variation group.
          allOf:
            - $ref: '#/components/schemas/Price'
        productId:
          description: The ID (SKU) of the variation group.
          example: 49345VG
          allOf:
            - $ref: '#/components/schemas/ProductId'
        variationValues:
          description: The actual variation attribute ID - value pairs.
          type: object
          additionalProperties:
            type: string
      required:
        - orderable
        - price
        - productId
        - variationValues
      type: object
    CustomerProductListItem:
      description: Document representing a customer product list item.
      properties:
        id:
          description: The ID of this product list item.
          example: Main Product
          type: string
        priority:
          description: The priority of the item.
          example: 1
          format: int32
          type: integer
        product:
          allOf:
            - $ref: '#/components/schemas/Product'
          description: The product item.
        productId:
          description: The ID of the product.
          example: Toaster
          allOf:
            - $ref: '#/components/schemas/ProductId'
        public:
          description: Is this product list item available for access by other customers?
          example: true
          type: boolean
        purchasedQuantity:
          description: The quantity of products already purchased.
          example: 1
          format: double
          type: number
        quantity:
          description: The quantity of this product list item.
          example: 2
          format: double
          minimum: 0
          type: number
        type:
          description: The type of the item.
          enum:
            - product
            - gift_certificate
          example: product
          type: string
      required:
        - priority
        - public
        - quantity
      type: object
    ProductListEvent:
      required:
        - type
      type: object
      properties:
        city:
          type: string
          description: The city where the event takes place.
          example: New York
        country:
          type: string
          description: The country where the event takes place.
          example: USA
        date:
          type: string
          description: The date when the event takes place.
          format: date-time
          example: 253402214400
        state:
          type: string
          description: The federal state where the event takes place.
          example: UT
        type:
          type: string
          description: Type of the event to celebrate.
          example: wedding
      description: Document representing a product list event.
    ProductListShippingAddress:
      required:
        - addressId
      type: object
      properties:
        addressId:
          minLength: 1
          type: string
          description: The ID of this address.
          example: Home
        city:
          type: string
          description: The city of this address.
          example: New York
        firstName:
          type: string
          description: The first name of this address.
          example: John
        lastName:
          type: string
          description: The last name of this address.
          example: Smith
      description: Document representing a product list shipping address.
    CustomerProductList:
      type: object
      description: Document representing a customer product list.
      properties:
        coRegistrant:
          allOf:
            - $ref: '#/components/schemas/CustomerProductListRegistrant'
          description: The coregistrant of this product list.
        creationDate:
          description: Returns the value of attribute 'creationDate'.
          example: '9999-12-31T00:00:00.0Z'
          format: date-time
          type: string
        currentShippingAddressInfo:
          allOf:
            - $ref: '#/components/schemas/CustomerAddressInfo'
          description: The resource link to the current shipping address of this customer product list.
        customerProductListItems:
          description: The list of customer product list items.
          items:
            $ref: '#/components/schemas/CustomerProductListItem'
          type: array
        description:
          description: The description of this product list.
          example: My Product List
          type: string
        event:
          allOf:
            - $ref: '#/components/schemas/ProductListEvent'
          description: The event of this product list.
        id:
          description: The ID of this product list.
          example: MyList
          minLength: 1
          type: string
        lastModified:
          description: Returns the value of attribute 'lastModified'.
          example: '9999-12-31T00:00:00.0Z'
          format: date-time
          type: string
        name:
          description: The name of this product list.
          example: Danny's Product List
          type: string
        postEventShippingAddressInfo:
          allOf:
            - $ref: '#/components/schemas/CustomerAddressInfo'
          description: The resource link to the post event shipping address of this customer product list.
        productListShippingAddress:
          allOf:
            - $ref: '#/components/schemas/ProductListShippingAddress'
          description: The abbreviated shipping address of this product list representing what an anonymous user can see.
        public:
          description: Indicates whether the owner made this product list available for access by other customers.
          example: true
          type: boolean
        registrant:
          allOf:
            - $ref: '#/components/schemas/CustomerProductListRegistrant'
          description: The registrant of this product list.
        shippingAddressInfo:
          allOf:
            - $ref: '#/components/schemas/CustomerAddressInfo'
          description: The resource link to the shipping address of this customer product list.
        type:
          description: The type of the product list.
          enum:
            - wish_list
            - gift_registry
            - shopping_list
            - custom_1
            - custom_2
            - custom_3
          example: wish_list
          type: string
    CustomerProductListResult:
      description: Document representing a customer product lists result.
      required:
        - data
      type: object
      allOf:
        - $ref: '#/components/schemas/ResultBase'
      properties:
        data:
          description: The customer product lists.
          items:
            $ref: '#/components/schemas/CustomerProductList'
          type: array
    PublicProductListInfo:
      description: Document representing a link to a public product list.
      properties:
        description:
          description: The description of this product list.
          example: Super Awesome ProductList
          type: string
        id:
          description: The ID of the product-list document.
          example: '3958739435'
          type: string
        name:
          description: The name of this product list.
          example: My Product List
          type: string
        title:
          description: The link title.
          example: Product List Title
          type: string
        type:
          description: The type of the product list.
          enum:
            - wish_list
            - gift_registry
            - shopping_list
            - custom_1
            - custom_2
            - custom_3
          example: custom_1
          type: string
      required:
        - id
        - title
        - type
      type: object
    PublicProductListResult:
      required:
        - data
      type: object
      allOf:
        - $ref: '#/components/schemas/ResultBase'
      properties:
        data:
          description: The array of product list link documents.
          items:
            $ref: '#/components/schemas/PublicProductListInfo'
          type: array
      description: Result document containing an array of public product list links.
    ProductListRegistrant:
      required:
        - firstName
        - lastName
        - role
      type: object
      properties:
        firstName:
          type: string
          description: The first name of the registrant.
          example: John
        lastName:
          type: string
          description: The last name of the registrant.
          example: Smith
        role:
          type: string
          description: The role of the registrant.
          example: CEO
      description: |-
        A `ProductListRegistrant` is typically associated with an event-related product list, such as a gift registry. It holds
        information about a person associated with the event, such as a bride or groom.
    PublicProductListItem:
      description: Document representing a product list item.
      properties:
        id:
          description: The ID of this product list item.
          example: '8745345'
          type: string
        priority:
          description: The priority of the item.
          example: 2
          format: int32
          type: integer
        product:
          allOf:
            - $ref: '#/components/schemas/Product'
          description: The product item.
        type:
          description: The type of the item.
          enum:
            - product
            - gift_certificate
          example: product
          type: string
      required:
        - id
        - priority
        - type
      type: object
    PublicProductList:
      description: Document representing a customer product list.
      properties:
        coRegistrant:
          allOf:
            - $ref: '#/components/schemas/ProductListRegistrant'
          description: The coRegistrant of this product list.
        creationDate:
          description: Returns the value of attribute 'creationDate'.
          example: '9999-12-31T00:00:00.0Z'
          format: date-time
          type: string
        description:
          description: The description of this product list.
          example: Super Product List
          type: string
        event:
          allOf:
            - $ref: '#/components/schemas/ProductListEvent'
          description: The event of this product list.
        id:
          description: The id of this product list.
          example: '873465834'
          minLength: 1
          type: string
        lastModified:
          description: Returns the value of attribute 'lastModified'.
          example: '9999-12-31T00:00:00.0Z'
          format: date-time
          type: string
        name:
          description: The name of this product list.
          example: My Product List
          type: string
        productListItems:
          description: The product list items
          items:
            $ref: '#/components/schemas/PublicProductListItem'
          type: array
        productListShippingAddress:
          allOf:
            - $ref: '#/components/schemas/ProductListShippingAddress'
          description: The abbreviated shipping address of this product list representing what anonymous users see.
        public:
          description: Indicates whether the owner made this product list available for access by other customers.
          example: true
          type: boolean
        registrant:
          allOf:
            - $ref: '#/components/schemas/ProductListRegistrant'
          description: The registrant of this product list.
        type:
          description: The type of the product list.
          enum:
            - wish_list
            - gift_registry
            - shopping_list
            - custom_1
            - custom_2
            - custom_3
          example: gift_registry
          type: string
      required:
        - id
        - public
        - type
      type: object
  parameters:
    organizationId:
      description: An identifier for the organization the request is being made by
      name: organizationId
      in: path
      required: true
      example: f_ecom_zzxy_prd
      schema:
        $ref: '#/components/schemas/OrganizationId'
    siteId:
      description: The identifier of the site that a request is being made in the context of. Attributes might have site specific values, and some objects may only be assigned to specific sites.
      name: siteId
      in: query
      required: true
      examples:
        SiteId:
          value: RefArch
      schema:
        $ref: '#/components/schemas/SiteId'
    externalId:
      name: externalId
      in: query
      description: The External ID of the customer.
      required: true
      schema:
        minLength: 1
        type: string
    authenticationProviderId:
      name: authenticationProviderId
      in: query
      description: The authentication Provider Id.
      required: true
      schema:
        minLength: 1
        type: string
    customerId:
      name: customerId
      in: path
      description: The customer ID.
      required: true
      schema:
        minLength: 1
        type: string
    addressName:
      name: addressName
      in: path
      description: The name of the address to update.
      required: true
      schema:
        maxLength: 256
        minLength: 1
        type: string
    crossSites:
      name: crossSites
      in: query
      description: The flag indicating whether all sites should be searched. This flag is ignored unless a valid User / Agent is present with a trusted agent on behalf (TAOB) token. Without a TAOB token, only the customer's orders placed on the site specified by siteId are returned.
      required: false
      schema:
        type: boolean
    from:
      name: from
      in: query
      required: false
      schema:
        type: string
    until:
      name: until
      in: query
      required: false
      schema:
        type: string
    status:
      name: status
      in: query
      required: false
      schema:
        type: string
    paymentInstrumentId:
      name: paymentInstrumentId
      in: path
      description: The ID of the payment instrument to be retrievedCustomer.
      required: true
      schema:
        minLength: 1
        type: string
    listId:
      name: listId
      in: path
      description: The ID of the list.
      required: true
      schema:
        maxLength: 28
        minLength: 1
        type: string
    itemId:
      name: itemId
      in: path
      description: The ID of the item.
      required: true
      schema:
        minLength: 1
        type: string
    email:
      name: email
      in: query
      description: The email address of the customer the product lists belong to.
      required: false
      schema:
        type: string
    firstName:
      name: firstName
      in: query
      description: The first name of the customer the product lists belong to.
      required: false
      schema:
        type: string
    lastName:
      name: lastName
      in: query
      description: The last name of the customer the product lists belong to.
      required: false
      schema:
        type: string
  examples:
    CustomerRegistrationBody:
      value:
        password: 12345!aBcD
        customer:
          login: jsmith
          email: jsmith@test.com
          firstName: John
          lastName: Smith
    customerRegistrationResponse:
      value:
        authType: registered
        creationDate: '2020-02-13T17:44:15.892Z'
        customerId: abkd9LhOWzAiAFubdEDChtkMHW
        customerNo: '00006002'
        email: jsmith@test.com
        enabled: true
        firstName: John
        lastModified: '2020-02-13T17:44:15.898Z'
        lastName: Smith
        login: jsmith
    registerCustomer400:
      value:
        title: Invalid Customer
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/invalid-customer
        detail: The customer is invalid.
    registerCustomer401:
      value:
        title: Authentication Failed
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/authentication-failed
        detail: Customer authentication based on JohnSmith failed.
        credentialType: JohnSmith
    ResetPasswordBody:
      value:
        resetToken: R1e2s3e4t5T6o7k8e9n0
        login: janedoe@test.com
        newPassword: p@assword2
    ResetPasswordTokenBody:
      value:
        login: janedoe@test.com
    getResetPasswordTokenSuccess:
      value:
        login: janedoe@test.com
        email: janedoe@test.com
        resetToken: R1e2s3e4t5T6o7k8e9n0
        expiresInMinutes: 30
    getExternalProfileSuccess:
      value:
        authenticationProviderId: Google
        firstName: John
        lastName: Doe
        customerId: bfqcN48dn2y4EaV9Qj5bNpVJVj
        email: testCustomer@test.com
        externalId: testCustomer@test.com
    getExternalProfile400:
      value:
        title: Invalid Customer External Profile
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/invalid-customer-external-profile
        detail: The customer external profile is invalid.
    getExternalProfile404:
      value:
        title: Not Found
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/not-found
        detail: No customer with external profile with ID 'abfTWMDZOgi3JPzkHjv9IhmziI' could be found.
        externalId: abfTWMDZOgi3JPzkHjv9IhmziI
    ExternalProfileBody:
      value:
        authenticationProviderId: Google
        firstName: John
        lastName: Doe
        email: testCustomer@test.com
        externalId: testCustomer@test.com
    registerExternalProfileSuccess:
      value:
        authenticationProviderId: Google
        firstName: John
        lastName: Doe
        customerId: bfqcN48dn2y4EaV9Qj5bNpVJVj
        email: testCustomer@test.com
        externalId: testCustomer@test.com
    getCustomerSuccess:
      value:
        addresses:
          - address1: 10 Presidential Way
            addressId: me
            city: Woburn
            countryCode: US
            firstName: John
            fullName: John M. Smith
            lastName: Smith
            postalCode: '01827'
            salutation: Mr.
            stateCode: MA
        authType: registered
        creationDate: '2020-02-14T20:39:53.818Z'
        customerId: abfTEMDZOgi3JPrkHjv9IhoziM
        customerNo: '00010009'
        email: jsmith@demandware.com
        firstName: John
        gender: 1
        lastName: Smith
        paymentInstruments:
          - bankRoutingNumber: '0763564'
            creationDate: '2017-08-20T11:30:36.000Z'
            lastModified: '2017-08-20T11:30:50.000Z'
            maskedGiftCertificateCode: '***********ode'
            paymentCard:
              cardType: Visa
              creditCardExpired: false
              expirationMonth: 2
              expirationYear: 2022
              holder: John Smith
              maskedNumber: '***********ber2'
              numberLastDigits: ber2
            paymentInstrumentId: beybQiWcyatEEaaadniwhKxxFl
            paymentMethodId: CREDIT_CARD
        phoneBusiness: '234560003'
        phoneHome: '123450003'
        phoneMobile: '345670003'
    getCustomer404:
      value:
        title: Not Found
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/not-found
        detail: No customer with ID 'abfTWMDZOgi3JPzkHjv9IhmziI' could be found.
        customerId: abfTWMDZOgi3JPzkHjv9IhmziI
    UpdateCustomerBody:
      value:
        customerNo: '00010009'
        firstName: John
        lastName: Wild
        email: jwild@yourstore.com
        fax: +49 03641 78393 346
    updateCustomerResponse:
      value:
        authType: registered
        creationDate: '2020-02-14T20:39:53.818Z'
        customerId: abfTEMDZOgi3JPrkHjv9IhoziM
        customerNo: '00010009'
        email: jwild@yourstore.com
        enabled: true
        fax: +49 03641 78393 346
        firstName: John
        lastLoginTime: '2020-02-14T20:51:59.313Z'
        lastModified: '2020-02-14T20:55:12.133Z'
        lastName: Wild
        lastVisitTime: '2020-02-14T20:51:59.313Z'
        login: f0a43dc2-692a-43bf-b008-e10918ea935d
        previousLoginTime: '2020-02-14T20:51:59.313Z'
        previousVisitTime: '2020-02-14T20:51:59.313Z'
    CustomerAddressBody:
      value:
        addressId: home_address
        address1: 5 Wall St
        address2: 24 Presidential Way
        city: Burlington
        companyName: Salesforce Commerce Cloud
        countryCode: US
        firstName: John
        jobTitle: Developer
        lastName: Murphy
        phone: 408-555-1212
        postalCode: '01805'
        postBox: 12a
        preferred: false
        salutation: Mr.
        secondName: Jim
        stateCode: MA
        title: Dr.
    customerAddressResponse:
      value:
        addressId: home_address
        address1: 5 Wall St
        address2: 24 Presidential Way
        city: Burlington
        companyName: Salesforce Commerce Cloud
        countryCode: US
        creationDate: '2020-02-14T21:13:29.769Z'
        firstName: John
        fullName: John Jim Murphy
        jobTitle: Developer
        lastModified: '2020-02-14T21:13:29.770Z'
        lastName: Murphy
        phone: 408-555-1212
        postalCode: '01805'
        postBox: 12a
        preferred: false
        salutation: Mr.
        secondName: Jim
        stateCode: MA
        title: Dr.
    CustomerAddressResponseBody:
      value:
        addressId: home_address
        address1: 5 Wall St
        address2: 24 Presidential Way
        city: Burlington
        companyName: Salesforce Commerce Cloud
        countryCode: US
        creationDate: '2020-02-14T21:13:29.769Z'
        firstName: John
        fullName: John Jim Murphy
        jobTitle: Developer
        lastModified: '2020-02-14T21:13:29.770Z'
        lastName: Murphy
        phone: 408-555-1212
        postalCode: '01805'
        postBox: 12a
        preferred: false
        salutation: Mr.
        secondName: Jim
        stateCode: MA
        title: Dr.
    customerBasketsResult:
      value:
        baskets:
          - basketId: bccO1aOjgEnuIaaadk7pYO2rFE
            adjustedMerchandizeTotalTax: 0
            adjustedShippingTotalTax: 0
            agentBasket: true
            billingAddress:
              address1: 10 Presidential Way
              city: Woburn
              countryCode: US
              firstName: John
              fullName: John M. Smith
              id: abfTEMDZOgi3JPrkHjv9IhoziM
              lastName: Smith
              phone: '123450003'
              postalCode: '01827'
              salutation: Mr.
              stateCode: MA
            bonusDiscountLineItems:
              - bonusProducts:
                  - productDescription: Bonus Product
                    productId: '34984327448'
                    productName: Extra Fluffy Bonus Product
                    title: Bonus Product
                couponCode: BONUS
                id: qhegj345ruhrfkj
                maxBonusItems: 1
                promotionId: basds98295jsafi
            channelType: storefront
            couponItems:
              - code: '5634573'
                couponItemId: 100-89038
                statusCode: coupon_code_already_in_basket
                valid: true
            creationDate: '2019-09-05T17:12:56.670Z'
            currency: USD
            customerInfo:
              c_familyStatus: string
              customerId: abfTEMDZOgi3JPrkHjv9IhoziM
              customerName: John Smith
              customerNo: '1000'
              email: jsmith@demandware.com
            giftCertificateItems:
              - amount: 0
                giftCertificateItemId: '901'
                message: Preferred Customer
                recipientEmail: jsmith@demandware.com
                recipientName: John Smith
                senderName: Jane Smith
                shipmentId: 678934jsadLHY5
            inventoryReservationExpiry: '2019-09-05T17:12:56.670Z'
            lastModified: '2019-09-05T17:12:56.670Z'
            merchandizeTotalTax: 0
            orderPriceAdjustments:
              - appliedDiscount:
                  amount: 0
                  percentage: 0
                  priceBookId: asdfgh4567
                  type: percentage
                couponCode: 2345-009
                createdBy: System
                creationDate: '2019-09-05T17:12:56.670Z'
                custom: true
                itemText: string
                lastModified: '2019-09-05T17:12:56.670Z'
                manual: true
                price: 0
                priceAdjustmentId: 324545673fgjghj
                promotionId: 1000-7654
                promotionLink: link to promotion
                reasonCode: PRICE_MATCH
            orderTotal: 0
            paymentInstruments:
              - amount: 0
                authorizationStatus:
                  code: AUTH
                  message: Authorizing
                  status: 0
                bankRoutingNumber: string
                maskedGiftCertificateCode: string
                paymentCard:
                  cardType: Visa
                  creditCardExpired: false
                  creditCardToken: sadjklfajkgae
                  expirationMonth: 12
                  expirationYear: 2019
                  holder: John
                  issueNumber: '389342643978'
                  maskedNumber: '**************53'
                  numberLastDigits: '8753'
                  validFromMonth: 4
                  validFromYear: 2015
                paymentInstrumentId: creditCard
                paymentMethodId: credit
            productItems:
              - adjustedTax: 0
                basePrice: 0
                bonusDiscountLineItemId: string
                bonusProductLineItem: true
                bundledProductItems:
                  - quantity: 10
                gift: true
                giftMessage: string
                inventoryId: string
                itemId: string
                itemText: string
                optionItems:
                  - adjustedTax: 0
                    basePrice: 110
                    bonusDiscountLineItemId: dsklgladsjkq349857
                    bonusProductLineItem: true
                    bundledProductItems:
                      - quantity: 10
                    gift: true
                    giftMessage: Happy Birthday
                    inventoryId: '258963'
                    itemId: apple-ipod-classic
                    itemText: Apple iPod Classic
                    optionId: 34526hjyuGGH56
                    optionItems:
                      - optionId: sdiughsdjkfgoqtuy
                        optionValueId: '1564897654'
                    optionValueId: string
                    price: 0
                    priceAdjustments:
                      - appliedDiscount:
                          amount: 0
                          percentage: 0
                          priceBookId: 34526hjyuGGH56
                          type: percentage
                        couponCode: '109475'
                        createdBy: System
                        creationDate: '2019-09-05T17:12:56.670Z'
                        custom: true
                        itemText: ''
                        lastModified: '2019-09-05T17:12:56.670Z'
                        manual: true
                        price: 0
                        priceAdjustmentId: '1597563'
                        promotionId: '963852'
                        promotionLink: link to promotion
                        reasonCode: PRICE_MATCH
                    priceAfterItemDiscount: 0
                    priceAfterOrderDiscount: 0
                    productId: apple-ipod-classic
                    productListItem:
                      id: 2345245e654utjSSDFfdhh
                      priority: 0
                      productDetailsLink:
                        productDescription: apple-ipod-classic
                        productId: apple-ipod-classic
                        productName: Apple iPod Classic
                        title: Apple iPod Classic Silver
                      productList:
                        description: My Product List
                        name: Electronics
                        public: true
                        title: My Electronics Wish List
                        type: wish_list
                      public: true
                      purchasedQuantity: 0
                      quantity: 0
                      type: product
                    productName: Apple iPod Classic
                    quantity: 0
                    shipmentId: 12345rdsghfjh
                    shippingItemId: 47568ghfhjgkg
                    tax: 0
                    taxBasis: 0
                    taxClassId: STATE
                    taxRate: 0
                price: 0
                priceAdjustments:
                  - appliedDiscount:
                      amount: 0
                      percentage: 0
                      priceBookId: string
                      type: percentage
                    couponCode: sadfghgjw4e56r7
                    createdBy: System
                    creationDate: '2019-09-05T17:12:56.672Z'
                    custom: true
                    itemText: string
                    lastModified: '2019-09-05T17:12:56.672Z'
                    manual: true
                    price: 0
                    priceAdjustmentId: asdgfhg5463798453
                    promotionId: 100-7345
                    promotionLink: Link to promotion
                    reasonCode: PRICE_MATCH
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: string
                productListItem:
                  id: string
                  priority: 0
                  productDetailsLink:
                    productDescription: apple-ipod-classic
                    productId: apple-ipod-classic
                    productName: Apple iPod Classic
                    title: Apple iPod Classic Silver
                  productList:
                    description: My Product List
                    name: Electronics
                    public: true
                    title: My Electronics Wish List
                    type: wish_list
                  public: true
                  purchasedQuantity: 0
                  quantity: 0
                  type: product
                productName: Apple iPod Classic
                quantity: 0
                shipmentId: 12345rdsghfjh
                shippingItemId: 47568ghfhjgkg
                tax: 0
                taxBasis: 0
                taxClassId: STATE
                taxRate: 0
            productSubTotal: 0
            productTotal: 0
            shipments:
              - adjustedMerchandizeTotalTax: 0
                adjustedShippingTotalTax: 0
                gift: true
                giftMessage: Happy Birthday
                merchandizeTotalTax: 0
                productSubTotal: 0
                productTotal: 0
                shipmentId: '1200'
                shipmentNo: '3'
                shipmentTotal: 0
                shippingAddress:
                  address1: 10 Presidential Way
                  city: string
                  countryCode: US
                  firstName: John
                  fullName: John M. Smith
                  id: abfTWMDZOgi3JPzkHjv9IhmziI
                  lastName: Smith
                  phone: '123450003'
                  postalCode: '01827'
                  salutation: Mr.
                  stateCode: MA
                shippingMethod:
                  c_storePickupEnabled: true
                  description: Ship using FEDEX
                  externalShippingMethod: FEDEX
                  id: '1200'
                  name: John Smith
                  price: 0
                  shippingPromotions:
                    - calloutMsg: Callout Message
                      promotionId: 123452768sdfgh
                      promotionName: Special Promotion
                shippingStatus: not_shipped
                shippingTotal: 0
                shippingTotalTax: 0
                taxTotal: 0
                trackingNumber: 89e980-562489-54ifsdgj
            shippingItems:
              - adjustedTax: 0
                basePrice: 0
                itemId: 2345245e654utjSSDFfdhh
                itemText: apple-iPod-classic
                price: 0
                priceAdjustments:
                  - appliedDiscount:
                      amount: 0
                      percentage: 0
                      priceBookId: string
                      type: percentage
                    couponCode: sadfghgjw4e56r7
                    createdBy: System
                    creationDate: '2019-09-05T17:12:56.672Z'
                    custom: true
                    itemText: string
                    lastModified: '2019-09-05T17:12:56.672Z'
                    manual: true
                    price: 0
                    priceAdjustmentId: asdgfhg5463798453
                    promotionId: 100-7345
                    promotionLink: Link to promotion
                    reasonCode: PRICE_MATCH
                priceAfterItemDiscount: 0
                shipmentId: asghdfjghwertyu
                tax: 0
                taxBasis: 0
                taxClassId: STATE
                taxRate: 0
            shippingTotal: 0
            shippingTotalTax: 0
            sourceCode: ''
            taxTotal: 0
            taxation: gross
        total: 1
    CustomersOrdersResult:
      value:
        limit: 1
        data:
          - adjustedMerchandizeTotalTax: 0
            adjustedShippingTotalTax: 0
            billingAddress:
              address1: 10 Presidential Way
              city: Woburn
              countryCode: US
              firstName: John
              fullName: John M. Smith
              id: abfTEMDZOgi3JPrkHjv9IhoziM
              lastName: Smith
              phone: '123450003'
              postalCode: '01827'
              salutation: Mr.
              stateCode: MA
            bonusDiscountLineItems:
              - bonusProducts:
                  - productDescription: Bonus Product
                    productId: '34984327448'
                    productName: Extra Fluffy Bonus Product
                    title: Bonus Product
                couponCode: BONUS
                id: qhegj345ruhrfkj
                maxBonusItems: 1
                promotionId: basds98295jsafi
            channelType: storefront
            confirmationStatus: not_confirmed
            couponItems:
              - code: '5634573'
                couponItemId: 100-89038
                statusCode: coupon_code_already_in_basket
                valid: true
            creationDate: '2019-09-05T17:12:56.670Z'
            currency: USD
            customerInfo:
              c_familyStatus: string
              customerId: abfTEMDZOgi3JPrkHjv9IhoziM
              customerName: John Smith
              customerNo: '00010009'
              email: jsmith@demandware.com
            exportStatus: not_exported
            externalOrderStatus: string
            giftCertificateItems:
              - amount: 0
                giftCertificateItemId: '901'
                message: Preferred Customer
                recipientEmail: jsmith@demandware.com
                recipientName: John Smith
                senderName: Jane Smith
                shipmentId: 678934jsadLHY5
            lastModified: '2019-09-05T17:12:56.670Z'
            merchandizeTotalTax: 0
            orderPriceAdjustments:
              - appliedDiscount:
                  amount: 0
                  percentage: 0
                  priceBookId: asdfgh4567
                  type: percentage
                couponCode: 2345-009
                createdBy: System
                creationDate: '2019-09-05T17:12:56.670Z'
                custom: true
                itemText: string
                lastModified: '2019-09-05T17:12:56.670Z'
                manual: true
                price: 0
                priceAdjustmentId: 324545673fgjghj
                promotionId: 1000-7654
                promotionLink: link to promotion
                reasonCode: PRICE_MATCH
            orderTotal: 0
            paymentInstruments:
              - amount: 0
                authorizationStatus:
                  code: AUTH
                  message: Authorizing
                  status: 0
                bankRoutingNumber: string
                maskedGiftCertificateCode: string
                paymentCard:
                  cardType: Visa
                  creditCardExpired: false
                  creditCardToken: sadjklfajkgae
                  expirationMonth: 12
                  expirationYear: 2019
                  holder: John
                  issueNumber: '389342643978'
                  maskedNumber: '**************53'
                  numberLastDigits: '8753'
                  validFromMonth: 4
                  validFromYear: 2015
                paymentInstrumentId: creditCard
                paymentMethodId: credit
            paymentStatus: not_paid
            productItems:
              - adjustedTax: 0
                basePrice: 0
                bonusDiscountLineItemId: string
                bonusProductLineItem: true
                bundledProductItems:
                  - quantity: 10
                gift: true
                giftMessage: string
                inventoryId: string
                itemId: string
                itemText: string
                optionItems:
                  - adjustedTax: 0
                    basePrice: 110
                    bonusDiscountLineItemId: dsklgladsjkq349857
                    bonusProductLineItem: true
                    bundledProductItems:
                      - quantity: 10
                    gift: true
                    giftMessage: Happy Birthday
                    inventoryId: '258963'
                    itemId: apple-ipod-classic
                    itemText: Apple iPod Classic
                    optionId: 34526hjyuGGH56
                    optionItems:
                      - optionId: sdiughsdjkfgoqtuy
                        optionValueId: '1564897654'
                    optionValueId: string
                    price: 0
                    priceAdjustments:
                      - appliedDiscount:
                          amount: 0
                          percentage: 0
                          priceBookId: 34526hjyuGGH56
                          type: percentage
                        couponCode: '109475'
                        createdBy: System
                        creationDate: '2019-09-05T17:12:56.670Z'
                        custom: true
                        itemText: ''
                        lastModified: '2019-09-05T17:12:56.670Z'
                        manual: true
                        price: 0
                        priceAdjustmentId: '1597563'
                        promotionId: '963852'
                        promotionLink: link to promotion
                        reasonCode: PRICE_MATCH
                    priceAfterItemDiscount: 0
                    priceAfterOrderDiscount: 0
                    productId: apple-ipod-classic
                    productListItem:
                      id: 2345245e654utjSSDFfdhh
                      priority: 0
                      productDetailsLink:
                        productDescription: apple-ipod-classic
                        productId: apple-ipod-classic
                        productName: Apple iPod Classic
                        title: Apple iPod Classic Silver
                      productList:
                        description: My Product List
                        name: Electronics
                        public: true
                        title: My Electronics Wish List
                        type: wish_list
                      public: true
                      purchasedQuantity: 0
                      quantity: 0
                      type: product
                    productName: Apple iPod Classic
                    quantity: 0
                    shipmentId: 12345rdsghfjh
                    shippingItemId: 47568ghfhjgkg
                    tax: 0
                    taxBasis: 0
                    taxClassId: STATE
                    taxRate: 0
                price: 0
                priceAdjustments:
                  - appliedDiscount:
                      amount: 0
                      percentage: 0
                      priceBookId: string
                      type: percentage
                    couponCode: sadfghgjw4e56r7
                    createdBy: System
                    creationDate: '2019-09-05T17:12:56.672Z'
                    custom: true
                    itemText: string
                    lastModified: '2019-09-05T17:12:56.672Z'
                    manual: true
                    price: 0
                    priceAdjustmentId: asdgfhg5463798453
                    promotionId: 100-7345
                    promotionLink: Link to promotion
                    reasonCode: PRICE_MATCH
                priceAfterItemDiscount: 0
                priceAfterOrderDiscount: 0
                productId: string
                productListItem:
                  id: string
                  priority: 0
                  productDetailsLink:
                    productDescription: apple-ipod-classic
                    productId: apple-ipod-classic
                    productName: Apple iPod Classic
                    title: Apple iPod Classic Silver
                  productList:
                    description: My Product List
                    name: Electronics
                    public: true
                    title: My Electronics Wish List
                    type: wish_list
                  public: true
                  purchasedQuantity: 0
                  quantity: 0
                  type: product
                productName: Apple iPod Classic
                quantity: 0
                shipmentId: 12345rdsghfjh
                shippingItemId: 47568ghfhjgkg
                tax: 0
                taxBasis: 0
                taxClassId: STATE
                taxRate: 0
            productSubTotal: 0
            productTotal: 0
            shipments:
              - adjustedMerchandizeTotalTax: 0
                adjustedShippingTotalTax: 0
                gift: true
                giftMessage: Happy Birthday
                merchandizeTotalTax: 0
                productSubTotal: 0
                productTotal: 0
                shipmentId: '1200'
                shipmentNo: '3'
                shipmentTotal: 0
                shippingAddress:
                  address1: 10 Presidential Way
                  city: string
                  countryCode: US
                  firstName: John
                  fullName: John M. Smith
                  id: abfTWMDZOgi3JPzkHjv9IhmziI
                  lastName: Smith
                  phone: '123450003'
                  postalCode: '01827'
                  salutation: Mr.
                  stateCode: MA
                shippingMethod:
                  c_storePickupEnabled: true
                  description: Ship using FEDEX
                  externalShippingMethod: FEDEX
                  id: '1200'
                  name: John Smith
                  price: 0
                  shippingPromotions:
                    - calloutMsg: Callout Message
                      link: link to shipping promotions
                      promotionId: 123452768sdfgh
                      promotionName: Special Promotion
                shippingStatus: not_shipped
                shippingTotal: 0
                shippingTotalTax: 0
                taxTotal: 0
                trackingNumber: 89e980-562489-54ifsdgj
            shippingItems:
              - adjustedTax: 0
                basePrice: 0
                itemId: 2345245e654utjSSDFfdhh
                itemText: apple-iPod-classic
                price: 0
                priceAdjustments:
                  - appliedDiscount:
                      amount: 0
                      percentage: 0
                      priceBookId: string
                      type: percentage
                    couponCode: sadfghgjw4e56r7
                    createdBy: System
                    creationDate: '2019-09-05T17:12:56.672Z'
                    custom: true
                    itemText: string
                    lastModified: '2019-09-05T17:12:56.672Z'
                    manual: true
                    price: 0
                    priceAdjustmentId: asdgfhg5463798453
                    promotionId: 100-7345
                    promotionLink: Link to promotion
                    reasonCode: PRICE_MATCH
                priceAfterItemDiscount: 0
                shipmentId: asghdfjghwertyu
                tax: 0
                taxBasis: 0
                taxClassId: STATE
                taxRate: 0
            shippingStatus: not_shipped
            shippingTotal: 0
            shippingTotalTax: 0
            sourceCode: ''
            status: created
            taxTotal: 0
            taxation: gross
        offset: 0
        total: 1
    UpdatePasswordBody:
      value:
        currentPassword: 01dpass
        password: newpass
    CustomerPaymentInstrumentBody:
      value:
        paymentCard:
          expirationYear: 2027
          expirationMonth: 7
          validFromMonth: 8
          validFromYear: 2007
          issueNumber: i117
          number: '1234567'
          holder: John Smith
          cardType: MasterCard
        giftCertificateCode: gift_code7
        paymentMethodId: OCAPI_Payment_Simple
        bankRoutingNumber: bankrouting3776
        default: true
    getCustomerPaymentInstrumentSuccess:
      value:
        bankRoutingNumber: bankrouting3776
        paymentCard:
          cardType: MasterCard
          creditCardExpired: false
          expirationMonth: 7
          expirationYear: 2027
          holder: John Smith
          issueNumber: i117
          maskedNumber: '***4567'
          numberLastDigits: '4567'
          validFromMonth: 8
          validFromYear: 2007
        paymentMethodId: OCAPI_Payment_Simple
        paymentInstrumentId: cdOLciWbOsYl6aaadkwcsx9xHH
        default: false
    customerProductListResult:
      value:
        limit: 1
        data:
          - coRegistrant:
              email: janedoe@example.com
              firstName: Jane
              lastName: Doe
              role: Bride
            creationDate: '2019-10-18T22:06:28.965Z'
            currentShippingAddressInfo:
              addressId: home_address
              title: home_address, John Murphy, Burlington
            customerProductListItems:
              - id: 30f35c187ea255ccb633c3ba11
                priority: 4
                productId: SimpleProduct
                public: false
                purchasedQuantity: 0
                quantity: 2
                type: product
            postEventShippingAddressInfo:
              addressId: home_address
              title: home_address, John Murphy, Burlington
            productListShippingAddress:
              addressId: home_address
              city: Burlington
              firstName: John
              lastName: Murphy
            name: OurProductList
            registrant:
              email: johndoe@example.com
              firstName: John
              lastName: Doe
              role: Groom
            lastModified: '2019-10-18T22:06:28.971Z'
            description: a productlist
            event:
              city: any city
              country: USA
              type: product_list_event
            id: 8b04014a9d6e5dbae542004824
            public: false
            type: wish_list
        total: 1
    PostCustomerProductListBody:
      value:
        coRegistrant:
          email: janedoe@example.com
          firstName: Jane
          lastName: Doe
          role: Bride
        creationDate: '2019-10-18T22:06:28.965Z'
        description: our productlist
        event:
          city: Washington
          country: US
          date: '2019-09-05T17:12:56.670Z'
          state: DC
          type: Wedding
        id: bcedkiWbxCM2MaaadkRhB2IBzM
        lastModified: '2019-10-18T22:06:28.971Z'
        name: OurProductList
        public: true
        registrant:
          email: johndoe@example.com
          firstName: John
          lastName: Doe
          role: Groom
        type: wish_list
    customerProductList:
      value:
        coRegistrant:
          email: janedoe@example.com
          firstName: Jane
          lastName: Doe
          role: Bride
        creationDate: '2019-10-18T22:06:28.965Z'
        currentShippingAddressInfo:
          addressId: home_address
          title: home_address, John Murphy, Burlington
        description: our productlist
        event:
          city: Washington
          country: US
          date: '2019-09-05T17:12:56.670Z'
          state: DC
          type: Wedding
        id: bcedkiWbxCM2MaaadkRhB2IBzM
        lastModified: '2019-10-18T22:06:28.971Z'
        name: OurProductList
        postEventShippingAddressInfo:
          addressId: home_address
          title: home_address, John Murphy, Burlington
        productListShippingAddress:
          addressId: home_address
          city: Burlington
          firstName: John
          lastName: Murphy
        public: false
        registrant:
          email: johndoe@example.com
          firstName: John
          lastName: Doe
          role: Groom
        shippingAddressInfo:
          addressId: me
          title: me, John Doe, Woburn
        type: wish_list
    getCustomerProductListByListId:
      value:
        coRegistrant:
          email: janedoe@example.com
          firstName: Jane
          lastName: Doe
          role: Bride
        creationDate: '2019-10-18T22:06:28.965Z'
        currentShippingAddressInfo:
          addressId: home_address
          title: home_address, John Murphy, Burlington
        customerProductListItems:
          - id: 30f35c187ea255ccb633c3ba11
            priority: 4
            productId: SimpleProduct
            public: false
            purchasedQuantity: 0
            quantity: 2
            type: product
        description: our productlist
        event:
          city: Washington
          country: US
          date: '2019-09-05T17:12:56.670Z'
          state: DC
          type: Wedding
        id: bcedkiWbxCM2MaaadkRhB2IBzM
        lastModified: '2019-10-18T22:06:28.971Z'
        name: OurProductList
        public: true
        registrant:
          email: johndoe@example.com
          firstName: John
          lastName: Doe
          role: Groom
        type: wish_list
    UpdateCustomerProductListByListIdBody:
      value:
        description: Description
    updateCustomerProductListByListId:
      value:
        coRegistrant:
          email: janedoe@example.com
          firstName: Jane
          lastName: Doe
          role: Bride
        creationDate: '2019-10-18T22:06:28.965Z'
        currentShippingAddressInfo:
          addressId: home_address
          title: home_address, John Murphy, Burlington
        customerProductListItems:
          - id: 30f35c187ea255ccb633c3ba11
            priority: 4
            productId: SimpleProduct
            public: false
            purchasedQuantity: 0
            quantity: 2
            type: product
        description: Description
        event:
          city: Washington
          country: US
          date: '2019-09-05T17:12:56.670Z'
          state: DC
          type: Wedding
        id: bcedkiWbxCM2MaaadkRhB2IBzM
        lastModified: '2019-10-18T22:06:28.971Z'
        name: OurProductList
        public: true
        registrant:
          email: johndoe@example.com
          firstName: John
          lastName: Doe
          role: Groom
        type: wish_list
    UpdateCustomerProductListItemBody:
      value:
        id: 1d447daa4d25805fd682bd4ce1
        priority: 4
        productId: RedDress1
        public: true
        purchasedQuantity: 0
        quantity: 2
        type: product
    updateCustomerProductListItemSuccess:
      value:
        id: 1d447daa4d25805fd682bd4ce1
        priority: 4
        productId: RedDress1
        public: true
        purchasedQuantity: 0
        quantity: 2
        type: product
    getCustomerProductListItemSuccess:
      value:
        id: 1d447daa4d25805fd682bd4ce1
        priority: 4
        productId: RedDress1
        product:
          id: RedDress1
          imageGroups:
            - images:
                - alt: ALT master detail
                  link: https://example.com/foo/bar/master_detail.jpg
                  title: TITLE master detail
              viewType: detail
            - images:
                - alt: ALT master swatch
                  link: https://example.com/foo/bar/master_swatch.jpg
                  title: TITLE master swatch
              viewType: swatch
            - images:
                - alt: ALT master thumbnail
                  link: https://example.com/foo/bar/master_thumbnail.jpg
                  title: TITLE master thumbnail
              viewType: thumbnail
          inventories:
            - ats: 0
              backorderable: false
              id: RedDress1Inventory
              orderable: false
              preorderable: false
              stockLevel: 0
          minOrderQuantity: 1
          price: 99.99
          stepQuantity: 1
        public: true
        purchasedQuantity: 0
        quantity: 2
        type: product
    CustomerProductListItemBody:
      value:
        productId: RedDress1
        id: '1'
        purchasedQuantity: 0
        priority: 3
        quantity: 4
        public: false
        type: product
    productListsResultExample:
      value:
        limit: 3
        data:
          - description: our productlist
            id: f4682729817ee215acd3a1a8b4
            name: OurProductList
            title: OurProductList
            type: wish_list
          - description: something
            id: b985bea3aaae7702c0b692c65c
            name: OurProductList
            title: OurProductList
            type: wish_list
          - description: our productlist
            id: 95aa60b8c681ad5431cb4c5bfa
            name: OurProductList
            title: OurProductList
            type: wish_list
        total: 3
    getPublicProductListsBySearchTerm401:
      value:
        title: Invalid Access Token
        type: https://api.commercecloud.salesforce.com/documentation/error/v1/errors/invalid-access-token
        detail: The request is unauthorized, the access token is invalid.
        accessToken: iI6IjEiLCJhbGciOiJIUzI1NiIsInR5cCI6Ik
    publicProductListItemsExample:
      value:
        id: 023513f915fad06573f330fb0d
        priority: 0
        product:
          id: RedDress1
          imageGroups:
            - images:
                - alt: ALT master detail
                  link: https://example.com/foo/bar/master_detail.jpg
                  title: TITLE master detail
              viewType: detail
            - images:
                - alt: ALT master swatch
                  link: https://example.com/foo/bar/master_swatch.jpg
                  title: TITLE master swatch
              viewType: swatch
            - images:
                - alt: ALT master thumbnail
                  link: https://example.com/foo/bar/master_thumbnail.jpg
                  title: TITLE master thumbnail
              viewType: thumbnail
          inventories:
            - ats: 0
              backorderable: false
              id: RedDress1Inventory
              orderable: false
              preorderable: false
              stockLevel: 0
          minOrderQuantity: 1
          price: 99.99
          stepQuantity: 1
        type: product
