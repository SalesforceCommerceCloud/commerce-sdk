#%RAML 1.0
#In C4E review
title: Orders
description: !include orders-description.md
version: v1
protocols: HTTPS
mediaType: application/json
baseUri: https://{shortCode}.api.commercecloud.salesforce.com/checkout/orders/{version}
baseUriParameters:
  shortCode:
    description: |-
      Region-specific merchant identifier.
    example: fd4gt8

uses:
  StatusCodes: status-codes.raml
  DataTypes: data-types.raml
  CommerceCloudStandards: exchange_modules/893f605e-10e2-423a-bdb4-f952f56eb6d8/commerce-cloud-standards/1.0.15/commerce-cloud-standards.raml 
  ApiStandards: exchange_modules/893f605e-10e2-423a-bdb4-f952f56eb6d8/api-standards/1.1.13/api-standards.raml

types:
'/organizations/{organizationId}':
  type: CommerceCloudStandards.Organization
  '/orders':
    type: CommerceCloudStandards.Organization
    get:
      description: |-
        Returns the details of orders that match the query filters. By default, calling this API with no filter returns the 100 most recently created orders. To return up to 200 orders, use the limit parameter. To return a page of results past the first page, use a resource offset.
      displayName: getOrders
      queryParameters:
        sortBy?:
          description: |-
            Sort results by creation date or last modified date. The default is creation date.
          type: string
          enum:
          - creation_date
          - last_modified_date
          default: creation_date
        sortOrder?:
          description: |-
            Sort results in ascending or descending order. The default is descending.
          type: string
          enum:
          - asc
          - desc
          default: desc
        status?:
          description: |-
            Filter results by status. Valid statuses are 'new', 'completed', and 'cancelled'. You can include up to two statuses as a comma-separated string.
          type: string
          pattern: '^(new|completed|cancelled)(,(?!\1)(new|completed|cancelled))?$'
          example:
            cancelled,completed
        exportStatus?:
          description: |-
            Filter results by export status. Valid export statuses are 'not_exported', 'exported', 'ready', and 'failed'. You can include up to three export statuses as a comma-separated string.
          type: string
          pattern: '^(not_exported|exported|ready|failed)(,(?!\1)(not_exported|exported|ready|failed))?(,(?!\3)(?!\1)(not_exported|exported|ready|failed))?$'
          example:
            not_exported,ready,failed
        externalStatus?:
          description: |-
            Filter results by external status.
          type: string
        confirmationStatus?:
          description: |-
            Filter results by confirmation status. Valid confirmation statuses are 'confirmed' and 'not_confirmed'.
          type: DataTypes.OrderConfirmationStatus
        paymentStatus?:
          description: |-
            Filter results by payment status. Valid payment statuses are 'not_paid', 'part_paid', and 'paid'. You can include up to two payment statuses as a comma-separated string.
          type: string
          pattern: '^(not_paid|part_paid|paid)(,(?!\1)(not_paid|part_paid|paid))?$'
          example:
            not_paid,part_paid
        shippingStatus?:
          description: |-
            Filter results by shipping status. Valid shipping statuses are 'not_shipped', 'part_shipped', and 'shipped'. You can include up to two shipping statuses as a comma-separated string.
          type: string
          pattern: '^(not_shipped|part_shipped|shipped)(,(?!\1)(not_shipped|part_shipped|shipped))?$'
          example:
            not_shipped,part_shipped
      is:
        - StatusCodes.OK-Orders
        - StatusCodes.SiteNotFound
        - CommerceCloudStandards.SiteSpecific
        - ApiStandards.DatetimeRangeFilter:
            name: creationDate
        - ApiStandards.DatetimeRangeFilter:
            name: lastModifiedDate
        - ApiStandards.RateLimited:
            responseStatus: 200
        - ApiStandards.RateLimited:
            responseStatus: 404
        - ApiStandards.OffsetPaginated:
              maxLimit: 200
              defaultSize: 100
      securedBy:
        - CommerceCloudStandards.BearerToken: { scopes: [ "sfcc.orders", "sfcc.orders.rw" ] }
        - CommerceCloudStandards.AmOAuth2
    '/{orderNo}':
      type: CommerceCloudStandards.Organization
      uriParameters:
        orderNo:
          description: |-
            The order number.
          minLength: 1
          maxLength: 50
          type: string
          example: "00000410"
      get:
        description: |-
          Returns the details of the order with the specified order number.
        is:
          - StatusCodes.OK-Order
          - StatusCodes.OrderNotFound
          - StatusCodes.SiteNotFound
          - CommerceCloudStandards.SiteSpecific
          - ApiStandards.RateLimited:
              responseStatus: 200
          - ApiStandards.RateLimited:
              responseStatus: 404
        displayName: getOrder
        securedBy:
          - CommerceCloudStandards.BearerToken: { scopes: [ "sfcc.orders", "sfcc.orders.rw" ] }
          - CommerceCloudStandards.AmOAuth2
      patch:
        description: |-
          Updates the order.
        displayName: updateOrder
        is:
          - StatusCodes.NoContent
          - StatusCodes.BadRequest
          - StatusCodes.OrderNotFound
          - StatusCodes.SiteNotFound
          - CommerceCloudStandards.SiteSpecific
          - ApiStandards.RateLimited:
              responseStatus: 204
          - ApiStandards.RateLimited:
              responseStatus: 400
          - ApiStandards.RateLimited:
              responseStatus: 404
        body:
            type: DataTypes.OrderUpdateRequest
            examples:
                DataTypes.OrderUpdateRequest: !include examples/order-request.raml
        securedBy:
          - CommerceCloudStandards.BearerToken: { scopes: [ "sfcc.orders.rw" ] }
          - CommerceCloudStandards.AmOAuth2
      /confirmation-status:
        type: CommerceCloudStandards.Organization
        put:
          description: |-
            Updates the order confirmation status.
          displayName: updateOrderConfirmationStatus
          is:
            - StatusCodes.NoContent
            - StatusCodes.BadRequest
            - StatusCodes.OrderNotFound
            - StatusCodes.SiteNotFound
            - CommerceCloudStandards.SiteSpecific
            - ApiStandards.RateLimited:
                responseStatus: 204
            - ApiStandards.RateLimited:
                responseStatus: 400
            - ApiStandards.RateLimited:
                responseStatus: 404
          body:
              type: DataTypes.OrderConfirmationStatusUpdateRequest
              examples:
                DataTypes.OrderConfirmationStatusUpdateRequest: !include examples/order-confirmation-status-request.raml
          securedBy:
            - CommerceCloudStandards.BearerToken: { scopes: [ "sfcc.orders.rw" ] }
            - CommerceCloudStandards.AmOAuth2
      /export-status:
        type: CommerceCloudStandards.Organization
        put:
          description: |-
            Updates the order export status. If on-order inventory is turned on for the associated inventory list, then setting the export status to EXPORTED finalizes on-order inventory transactions for this order by changing their type from on-order to final.
          displayName: updateOrderExportStatus
          is:
            - StatusCodes.NoContent
            - StatusCodes.BadRequest
            - StatusCodes.OrderNotFound
            - StatusCodes.SiteNotFound
            - CommerceCloudStandards.SiteSpecific
            - ApiStandards.RateLimited:
                responseStatus: 204
            - ApiStandards.RateLimited:
                responseStatus: 400
            - ApiStandards.RateLimited:
                responseStatus: 404      
          body:
              type: DataTypes.OrderExportStatusUpdateRequest
              examples:
                DataTypes.OrderExportStatusUpdateRequest: !include examples/order-export-status-request.raml
          securedBy:
            - CommerceCloudStandards.BearerToken: { scopes: [ "sfcc.orders.rw" ] }
            - CommerceCloudStandards.AmOAuth2
      /external-status:
        type: CommerceCloudStandards.Organization
        put:
          description: |-
            Updates the order external status.
          displayName: updateOrderExternalStatus
          is:
            - StatusCodes.NoContent
            - StatusCodes.BadRequest
            - StatusCodes.OrderNotFound
            - StatusCodes.SiteNotFound
            - CommerceCloudStandards.SiteSpecific
            - ApiStandards.RateLimited:
                responseStatus: 204
            - ApiStandards.RateLimited:
                responseStatus: 400
            - ApiStandards.RateLimited:
                responseStatus: 404
          body:
              type: DataTypes.OrderExternalStatusUpdateRequest
              examples:
                DataTypes.OrderExternalStatusUpdateRequest: !include examples/order-external-status-request.raml
          securedBy:
            - CommerceCloudStandards.BearerToken: { scopes: [ "sfcc.orders.rw" ] }
            - CommerceCloudStandards.AmOAuth2
      /payment-status:
        type: CommerceCloudStandards.Organization
        put:
          description: |-
            Updates the order payment status.
          displayName: updateOrderPaymentStatus
          is:
            - StatusCodes.NoContent
            - StatusCodes.BadRequest
            - StatusCodes.OrderNotFound
            - StatusCodes.SiteNotFound
            - CommerceCloudStandards.SiteSpecific
            - ApiStandards.RateLimited:
                responseStatus: 204
            - ApiStandards.RateLimited:
                responseStatus: 400
            - ApiStandards.RateLimited:
                responseStatus: 404
          body:
              type: DataTypes.OrderPaymentStatusUpdateRequest
              examples:
                DataTypes.OrderPaymentStatusUpdateRequest: !include examples/order-payment-status-request.raml
          securedBy:
            - CommerceCloudStandards.BearerToken: { scopes: [ "sfcc.orders.rw" ] }
            - CommerceCloudStandards.AmOAuth2
      /shipping-status:
        type: CommerceCloudStandards.Organization
        put:
          description: |-
            Updates the order shipping status.
          displayName: updateOrderShippingStatus
          is:
            - StatusCodes.NoContent
            - StatusCodes.BadRequest
            - StatusCodes.OrderNotFound
            - StatusCodes.SiteNotFound
            - CommerceCloudStandards.SiteSpecific
            - ApiStandards.RateLimited:
                responseStatus: 204
            - ApiStandards.RateLimited:
                responseStatus: 400
            - ApiStandards.RateLimited:
                responseStatus: 404
          body:
              type: DataTypes.OrderShippingStatusUpdateRequest
              examples:
                DataTypes.OrderShippingStatusUpdateRequest: !include examples/order-shipping-status-request.raml
          securedBy:
            - CommerceCloudStandards.BearerToken: { scopes: [ "sfcc.orders.rw" ] }
            - CommerceCloudStandards.AmOAuth2
      /status:
        type: CommerceCloudStandards.Organization
        put:
          description: |-
            Updates the order status. Orders in status NEW, COMPLETED or CANCELLED can't be changed to status CREATED or FAILED.

            Changing the status processes different actions on inventory, coupons, wishlists and the order itself. Here are the supported actions:

            Fail Order: Release inventory and remove coupon redemptions. (CREATED -> FAILED)
            Undo Fail Order: Reserve inventory and recreate coupon redemptions. (FAILED -> CREATED)
            Place Order: Generate Shipment and Invoice numbers. (CREATED -> NEW, COMPLETED or CANCELLED)
            Cancel Order: Release inventory, remove wishlist purchases, and remove coupon redemptions. (NEW, COMPLETED -> CANCELLED)
            Undo Cancel Order: Reserve inventory, add wishlist purchases, and recreate coupon redemptions. (CANCELLED -> NEW, COMPLETED)

            Actions can fail for example when inventory is not available anymore.
          displayName: updateOrderStatus
          is:
            - StatusCodes.NoContent
            - StatusCodes.BadRequest
            - StatusCodes.OrderNotFound
            - StatusCodes.SiteNotFound
            - StatusCodes.StatusTransitionConflict
            - StatusCodes.CancelOrderConflict
            - StatusCodes.PlaceOrderConflict
            - StatusCodes.UndoCancelOrderConflict
            - StatusCodes.UndoFailOrderConflict
            - CommerceCloudStandards.SiteSpecific
            - ApiStandards.RateLimited:
                responseStatus: 204
            - ApiStandards.RateLimited:
                responseStatus: 400
            - ApiStandards.RateLimited:
                responseStatus: 404
            - ApiStandards.RateLimited:
                responseStatus: 409
          body:
              type: DataTypes.OrderStatusUpdateRequest
              examples:
                DataTypes.OrderStatusUpdateRequest: !include examples/order-status-request.raml
          securedBy:
            - CommerceCloudStandards.BearerToken: { scopes: [ "sfcc.orders.rw" ] }
            - CommerceCloudStandards.AmOAuth2
      '/payment-instruments/{paymentInstrumentId}':
        type: CommerceCloudStandards.Organization
        uriParameters:
          paymentInstrumentId:
            description: |-
              ID of the payment instrument.
            minLength: 1
            type: string
            example: b7679bea661819b2de78b9de7d
        patch:
          description: |-
            Updates the payment instrument of an order.
          displayName: updateOrderPaymentInstrument
          is:
            - StatusCodes.NoContent
            - StatusCodes.BadRequest
            - StatusCodes.OrderNotFound
            - StatusCodes.SiteNotFound
            - StatusCodes.PaymentInstrumentNotFound
            - CommerceCloudStandards.SiteSpecific
            - ApiStandards.RateLimited:
                responseStatus: 204
            - ApiStandards.RateLimited:
                responseStatus: 400
            - ApiStandards.RateLimited:
                responseStatus: 404
          body:
              type: DataTypes.PaymentInstrumentUpdateRequest
              examples:
                DataTypes.PaymentInstrumentUpdateRequest: !include examples/order-payment-instrument-request.raml
          securedBy:
            - CommerceCloudStandards.BearerToken: { scopes: [ "sfcc.orders.rw" ] }
            - CommerceCloudStandards.AmOAuth2
        /transaction:
          type: CommerceCloudStandards.Organization
          patch:
            description: |-
              Updates the transaction of an order payment instrument.
            displayName: updateOrderPaymentTransaction
            is:
              - StatusCodes.NoContent
              - StatusCodes.BadRequest
              - StatusCodes.OrderNotFound
              - StatusCodes.SiteNotFound
              - StatusCodes.PaymentInstrumentNotFound
              - CommerceCloudStandards.SiteSpecific
              - ApiStandards.RateLimited:
                  responseStatus: 204
              - ApiStandards.RateLimited:
                  responseStatus: 400
              - ApiStandards.RateLimited:
                  responseStatus: 404
            body:
                type: DataTypes.PaymentTransactionUpdateRequest
                examples:
                  DataTypes.PaymentTransactionUpdateRequest: !include examples/order-payment-transaction-request.raml
            securedBy:
              - CommerceCloudStandards.BearerToken: { scopes: [ "sfcc.orders.rw" ] }
              - CommerceCloudStandards.AmOAuth2
      '/shipments/{shipmentId}':
        type: CommerceCloudStandards.Organization
        uriParameters:
          shipmentId:
            description: |-
              ID of the shipment.
            minLength: 1
            type: string
            example: me
        /shipping-address:
          type: CommerceCloudStandards.Organization
          put:
            description: |-
              Creates or replaces the shipping address.
            displayName: updateOrderShippingAddress
            is:
              - StatusCodes.NoContent
              - StatusCodes.BadRequest
              - StatusCodes.OrderNotFound
              - StatusCodes.SiteNotFound
              - StatusCodes.ShipmentNotFound
              - CommerceCloudStandards.SiteSpecific
              - ApiStandards.RateLimited:
                  responseStatus: 204
              - ApiStandards.RateLimited:
                  responseStatus: 400
              - ApiStandards.RateLimited:
                  responseStatus: 404
            body:
                type: DataTypes.ShippingAddressUpdateRequest
                examples:
                  DataTypes.ShippingAddressUpdateRequest: !include examples/order-shipping-address-request.raml
            securedBy:
              - CommerceCloudStandards.BearerToken: { scopes: [ "sfcc.orders.rw" ] }
              - CommerceCloudStandards.AmOAuth2
