#%RAML 1.0
version: v1
title: Shopper Search
uses:
  CommerceCloudStandards: exchange_modules/893f605e-10e2-423a-bdb4-f952f56eb6d8/commerce-cloud-standards/2.0.1/commerce-cloud-standards.raml
  ApiStandards: exchange_modules/893f605e-10e2-423a-bdb4-f952f56eb6d8/api-standards/1.1.15/api-standards.raml
  SearchTypeLibrary: shopper-search-library.raml
    
mediaType: application/json
protocols: [HTTPS]
baseUri: https://{shortCode}.api.commercecloud.salesforce.com/search/shopper-search/{version}/
baseUriParameters:
  shortCode:
    description: Region-specific merchant identifier.
    example: 0dnz6oep
    pattern: ^([a-z0-9]+)(-[a-z0-9]+)*$

description: !include shopper-search-description.md

/organizations/{organizationId}:
  /product-search:
    type: CommerceCloudStandards.Organization
    get:
      description: |-
        Provides keyword and refinement search functionality for products. Only returns the product ID, link, and name in
        the product search hit. The search result contains only products that are online and assigned to site catalog.
      displayName: productSearch
      is:
          - SearchTypeLibrary.Unauthorized
          - SearchTypeLibrary.BadRequest
          - ApiStandards.OffsetPaginated:
              maxLimit: 200
              defaultSize: 25
      responses:
        '200':
          description: Product search successfully returned results.
          body:
            type: SearchTypeLibrary.ProductSearchResult
            examples:
              product_search: !include Examples/product-search-result-example.raml
        '400':
          description: Thrown if a price refinement parameter is malformed or the refinement limit is exceeded.
          body:
            application/problem+json:
              type: ApiStandards.ErrorResponse
              examples:
                  product-search-400-error: !include Examples/product-search-400-error-example.raml
      securedBy:
        - CommerceCloudStandards.ShopperToken: { scopes: [sfcc.shopper-product-search] }
      queryParameters:
        select:
            description: The property selector declaring which fields are included into the response payload. You can specify a single field name, a comma-separated list of names, or work with wildcards.You can also sepcify Array Operations and filter expressions.The actual selector value must be enclosed within parentheses. 
            type: CommerceCloudStandards.Select
            required: false
            example: (hits.(**))
        siteId:
          type: CommerceCloudStandards.SiteId
        q:
          description: The query phrase to search for. For example to search for a product "shirt", type q=shirt.
          maxLength: 50
          type: string
          required: false
        refine:
          description: |-
            Parameter that represents a refinement attribute or values pair. Refinement attribute ID and
                        values are separated by '='. Multiple values are supported by a subset of refinement attributes and
                        can be provided by separating them using a pipe (URL
                        encoded = "|") i.e. refine=c_refinementColor=red|green|blue. Value ranges can be specified like this: refine=price=(100..500) . Multiple refine parameters can be provided by using the refine as the key i.e refine=price=(0..10)&refine=c_refinementColor=green. The refinements can be a collection of custom defined attributes IDs and the system defined attributes IDs but the search can only accept a total of 9 refinements at a time.
                        The following system refinement attribute ids are supported:
                          
                        cgid: Allows refinement per single category ID. Multiple category ids are not supported.
                        price: Allows refinement per single price range. Multiple price ranges are not supported.
                        pmid: Allows refinement per promotion ID.
                        htype: Allow refinement by including only the provided hit types. Accepted types are 'product', 'master', 'set', 'bundle', 'slicing_group' (deprecated), 'variation_group'.
                        orderable_only: Unavailable products are excluded from the search results if true is set. Multiple refinement values are not supported.                               
          type: string[]
          required: false
        sort:
          description: The ID of the sorting option to sort the search hits.
          type: string
          required: false
        currency:
          description: The currency mnemonic specified for price. This parameter is effective only if the returned results contain prices.
          type: CommerceCloudStandards.CurrencyCode
          required: false
        locale:
          type: CommerceCloudStandards.LocaleCode
          required: false
        expand:
          description: The expand parameter. A comma-separated list with the allowed values (availability, images, prices, represented_products, variations, promotions, custom_properties). The expand parameter `availability, images, prices, represented_products, variations` is used as the default value when no expand parameter is provided. The value `none` can be used to turn off all expand options. The expand values `promotions` and `custom_properties` are optional and are available from version 24.3 and 24.4, respectively.
          type: array
          items:
              enum: [none,availability,images,prices,represented_products,variations,promotions,custom_properties]
          required: false
          example: [prices,represented_products]
        allImages:
          description: When this flag is passed along with the expand parameter `images` in the request, a property named `imageGroups`, which contains an image model, is returned in the response. If the flag is set to `true`, the whole image model is returned. If it is set to `false`, the returned image model contains only matching images. If no flag is passed in the request, the response does not include the `imageGroups property`. This parameter is available from version 24.3.
          type: boolean
          required: false
          example: false
        perPricebook:
          description: When this flag is passed as `true` in the request, along with the expand parameter `prices`, then per PriceBook prices and tiered prices (if available) are returned. This parameter is available from version 24.3.
          type: boolean
          required: false
          example: false
        allVariationProperties:
          description: The flag that indicates which variation properties are to be included in the result. When the flag is passed as `true` along with the expand parameter `variations` in the request, all variation properties (`variationAttributes`, `variationGroups`, and `variants`) are returned. When it is passed as `false` along with the expand parameter `variations` in the request, only the default property (`variationAttributes`) is returned. This parameter is available from version 24.3.
          type: boolean
          required: false
          example: false
  /search-suggestions:
    type: CommerceCloudStandards.Organization
    get:
      description: Provides keyword search functionality for products, categories, and brands suggestions.
        Returns suggested products, suggested categories, and suggested brands for the given search phrase.
      displayName: getSearchSuggestions
      is:
          - SearchTypeLibrary.Unauthorized
      responses:
        '200':
          description: Search suggestions are successfully returned.
          body:
            type: SearchTypeLibrary.SuggestionResult
            examples:
              search_suggestion: !include Examples/search-suggestion-result-example.raml
        '400':
          description: Thrown in case a query parameter or its value is unknown, or a maximum or minimum constraint is violated.
          body:
            application/problem+json:
              type: ApiStandards.ErrorResponse
              examples:
                search-suggestion-400-error: !include Examples/search-suggestion-400-error-example.raml
      securedBy:
          - CommerceCloudStandards.ShopperToken: { scopes: [sfcc.shopper-product-search] }
      queryParameters:
        siteId:
          type: CommerceCloudStandards.SiteId
        q:
          description: The search phrase (q) for which suggestions are evaluated. Search suggestions are determined when the search phrase input is at least three (default) characters long. The value is configurable in the Business Manager.
          maxLength: 50
          minLength: 1
          type: string
          required: true
          example: son
        limit:
          description: The maximum number of suggestions made per request. If no value is defined, by default five suggestions per suggestion type are evaluated. This affects all types of suggestions (category, product, brand, and custom suggestions).
          maximum: 10
          minimum: 1
          default: 5
          type: integer
          format: int32
          required: false
          example: 5
        currency:
          description: The currency code specified for price. This parameter is effective only for product suggestions.
          type: CommerceCloudStandards.CurrencyCode
          required: false
        locale:
          type: CommerceCloudStandards.LocaleCode
          required: false