#%RAML 1.0
title: Shopper Login - SLAS Admin
description: SLAS (Shopper Login & API Authentication Service) Administration
version: v1
mediaType: application/json
protocols: HTTPS
baseUri: https://{shortCode}.api.commercecloud.salesforce.com/shopper/admin/{version}

securitySchemes:
    SlasSecurityScheme.BearerToken: !include slas-bearer-SecurityScheme.raml

uses:
  ApiStandards: exchange_modules/893f605e-10e2-423a-bdb4-f952f56eb6d8/api-standards/1.1.6/api-standards.raml

types:
  AdminAuthRoles:
    type: string
    description: Role for SLAS Admin API access
    enum: [SLAS_SERVICE_ADMIN, SLAS_ORGANIZATION_ADMIN]
  ClientType:
    type: string
    description: Client Type
    enum: [RefArch, WebApp, MobileApp, SiteGenesis]

  SimpleClient:
    type: object
    properties:
      clientId:
        description: Client ID
        type: string
        example: "client-id"
      clientName:
        description: Client Name
        type: string
        example: "Client Name"
      clientType:
        description: Client Type or Audience
        type: string
        example: "SiteGenesis"
      scope:
        description: Scope
        type: string[]
        example: ["sfcc.products",
              "sfcc.catalogs",
              "sfcc.customers:ro"]
      redirectUri:
        description: Redirect URI
        type: string
        example: "http://localhost/callback"
      channels:
        description: Client Channels
        type: string[]
        example: ["RefArch", "SiteGenensis"]

  Client:
    type: object
    properties:
      clientId:
        description: Client ID
        type: string
        example: "client-id"
      clientName:
        description: Client Name
        type: string
        example: "Client Name"
      clientType:
        description: Client Type or Audience
        type: string
        example: "SiteGenesis"
      clientSecret:
        description: Client Secret
        type: string
        example: "Secret123"
      scope:
        description: Scope
        type: string[]
        example: ["sfcc.products",
              "sfcc.catalogs",
              "sfcc.customers:ro"]
      redirectUri:
        description: Redirect URI
        type: string
        example: "http://localhost/callback"
      channels:
        description: Client Channels
        type: string[]
        example: ["RefArch", "SiteGenensis"]
      privateClient:
        description: Private or Public Client
        type: boolean
        example: true

  ClientRequest:
    description: Used to create and update a SLAS Client
    properties:
      clientName:
        description: Client Name
        type: string
        example: "Client Name"
      ecomTenant:
        description: ECOM Tenant Name, clientTenant or owner
        type: string
        example: "shop_mart_prod"
      oauthClientId:
        description: SLAS client id
        type: string
        example: "shop_mart_client_id"
      oauthClientSecret:
        description: SLAS client secret
        type: string
        example: "shop_mart_client_secret"
      ecomSite:
        description: ECOM site, clientType or audience
        type: string
        example: "SiteGenesis"
      scopes:
        description: SLAS scopes
        type: string[]
        example: ["sfcc.products",
              "sfcc.catalogs",
              "sfcc.customers:ro"]
      redirectUri:
        description: SLAS redirect URL
        type: string
        example: "http://localhost:9010/callback"
      channels:
        description: Client Channels
        type: string[]
        example: ["RefArch", "SiteGenensis"]
      privateClient:
        description: Private or Public Client
        type: boolean
        example: true

  IdentityProvider:
    description: Identity provider
    properties:
      idpName: 
        description: Identity Provider Name
        type: string
        example: "Google Account"
      idpAuthUrl:
        description: Identity Provider auth URI
        type: string
        example: "https://accounts.google.com/o/oauth2/v2/auth"
      idpTokenUrl:
        description: Identity Provider token URI
        type: string
        example: "https://oauth2.googleapis.com/token"
      idpTokenInfoUrl:
        description: Identity Provider token info URI
        type: string
        example: "https://oauth2.googleapis.com/tokeninfo"
      idpUserinfoUrl:
        description: Identity Provider user info URI
        type: string
        example: "https://www.googleapis.com/oauth2/v3/userinfo"
      idpRedirectUrl:
        description: Identity Provider redirect URI
        type: string
        example: "https://localhost:9010/my/callback"
      idpClientId:
        description: SLAS IDP Client Id
        type: string
        example: "934277749308-02dg4398n3s31ofge8cot46jirn3kpkf.apps.googleusercontent.com"
      idpClientSecret:
        description: SLAS IDP Client Secret
        type: string
        example: "aKZM1xEnZopNP2bm2gc3GKex"
      idpPreferenceValue:
        description: SLAS IDP Preference Value
        type: boolean
        example: true 
  
  Tenant:
    description: Tenant
    properties:
      tenantInstance:
        description: SLAS Tenant Id
        type: string
        example: "aaaa_prd"
      merchantName:
        description: SLAS Merchant Name
        type: string
        example: "Merchant Name"
      tenantDescription:
        description: SLAS Tenant Description
        type: string
        example: "Tenant Description"
      tenantContact:
        description: SLAS Tenant Contact Name
        type: string
        example: "Jerry Smith"
      emailAddress:
        description: SLAS Tenant Contact Email
        type: string
        example: "jerry@merchant.com"
      phoneNo:
        description: SLAS Tenant Contact Phone
        type: string
        example: "801-555-1234"

/oauth2:
  /admin:
    /tenant:
      post:
        description: Register a tenant
        displayName: registerTenant
        body:
          application/json:
            type: Tenant
            examples:
              IdentityProvider : !include Examples/Tenant.raml
        securedBy:
                - SlasSecurityScheme.BearerToken: { scopes: [sfcc.customerlists.rw] }
        responses:
          409:
            description: Conflict.
            body:
              application/json:
                example: {
                    "type": "TenantAlreadyExistsException",
                    "title": "Tenant[abcd_prd] already exists!"
                  }
          201:
            description: Success
            body:
              application/json:
                type: Tenant
                examples: 
                  Tenant : !include Examples/Tenant.raml
      /tenants:
        get:
          description: Retrieve a list of tenants
          displayName: retrieveTenants
          securedBy:
                  - SlasSecurityScheme.BearerToken: { scopes: [sfcc.customerlists.rw] }
          responses:
              401:
                description: Unauthorized. Wrong Tenant.
                body:
                  application/json:
                    example: {
                        "type": "TenantException",
                        "title": "Unable to retrieve resource because the tenant id was invalid"
                      }
              404:
                description: Not Found.
                body:
                  application/json:
                    example: {
                        "type": "TenantNotFoundException",
                        "title": "Unable to retrieve resource because no resource was found"
                    }
              200:
                description: Success
                body:
                  application/json:
                    type: Tenant
                    examples: 
                      Tenant : !include Examples/Tenant.raml
      /{tenantId}:
        get:
          description: Retrieve a tenant by tenant id
          displayName: retrieveTenant
          securedBy:
                  - SlasSecurityScheme.BearerToken: { scopes: [sfcc.customerlists.rw] }
          responses:
                400:
                  description: Bad Request.
                  body:
                    application/json:
                      example: {
                          "type": "TenantRequestException",
                          "title": "Unable to retrieve resource because the tenant id was invalid"
                        }
                401:
                  description: Unauthorized. Wrong Tenant.
                  body:
                    application/json:
                      example: {
                          "type": "TenantException",
                          "title": "Unable to retrieve resource because the tenant id was invalid"
                        }
                404:
                  description: Not Found.
                  body:
                    application/json:
                      example: {
                          "type": "TenantNotFoundException",
                          "title": "Unable to retrieve resource because no resource was found with that value"
                      }
                200:
                  description: Success
                  body:
                    application/json:
                      type: Tenant
                      examples: 
                        Tenant : !include Examples/Tenant.raml
        put:
            description: Update a tenant by tenant id. Updates tenant description, tenant contact, email address, and phone number.
            displayName: updateTenant
            body:
              application/json:
                examples: 
                  Tenant : !include Examples/UpdateTenant.raml
            securedBy:
                    - SlasSecurityScheme.BearerToken: { scopes: [sfcc.customerlists.rw] }
            responses:
              400:
                description: Bad Request.
                body:
                  application/json:
                    example: {
                        "type": "TenantUpdateException",
                        "title": "Unable to retrieve resource because the tenant id was invalid"
                      }
              401:
                description: Unauthorized. Wrong Tenant.
                body:
                  application/json:
                    example: {
                        "type": "TenantUpdateException",
                        "title": "Unable to retrieve resource because the tenant id was invalid"
                      }
              404:
                description: Not Found.
                body:
                  application/json:
                    example: {
                        "type": "TenantNotFoundException",
                        "title": "Unable to retrieve resource because no resource was found with that value"
                    }
              200:
                description: Success
                body:
                  application/json:
                    type: Tenant
                    examples: 
                      Tenant : !include Examples/Tenant.raml
        delete:
          description: Delete a tenant
          displayName: deleteTenant
          securedBy:
                  - SlasSecurityScheme.BearerToken: { scopes: [sfcc.customerlists.rw] }
          responses:
            400:
              description: Bad Request.
              body:
                application/json:
                  example: {
                      "type": "TenantDeleteException",
                      "title": "Delete all clients associated with tenant before deleting tenant."
                    }
            404:
              description: Not Found.
              body:
                application/json:
                  example: {
                      "type": "TenantNotFoundException",
                      "title": "Tenant[abcd_prd] not found!"
                    }
            204:
              description: No Content
  
        /clients:
          get:
            description: Retrieve/Get all tenant clients
            displayName: retrieveClients
            securedBy:
                    - SlasSecurityScheme.BearerToken: { scopes: [sfcc.customerlists.rw] }
            responses:
              401:
                description: Unauthorized. Wrong Tenant.
                body:
                  application/json:
                    example: {
                        "type": "ClientTenantException",
                        "title": "Unable to retrieve resource because the tenant id was invalid"
                      }
              404:
                description: Not Found.
                body:
                  application/json:
                    example: {
                        "type": "ClientNotFoundException",
                        "title": "Unable to retrieve resource because no resource was found with that value"
                      }
              200:
                description: Success
                body:
                  application/json:
                    type: Client
                    examples: 
                      Client: !include Examples/Client.raml
        /client:
          post:
            description: Create/Register a new client
            displayName: registerClient
            body:
              application/json:
                type: ClientRequest
                examples:
                  ClientRequest: !include Examples/ClientRequest.raml
            securedBy:
                    - SlasSecurityScheme.BearerToken: { scopes: [sfcc.customerlists.rw] }
            responses:
              400:
                description: Bad Request.
                body:
                  application/json:
                    example: {
                        "type": "ClientRequestException",
                        "title": "Unable to create resource because the request was invalid"
                      }
              401:
                description: Unauthorized. Wrong Tenant.
                body:
                  application/json:
                    example: {
                        "type": "ClientTenantException",
                        "title": "Unable to create resource because the tenant id was invalid"
                      }
              409:
                description: Conflict.
                body:
                  application/json:
                    example: {
                        "type": "ClientConflictException",
                        "title": "Unable to create resource because a duplicate resource was found"
                      }
              201:
                description: Success
                body:
                  application/json:
                    type: Client
                    examples: 
                      Client: !include Examples/Client.raml
          /{clientId}:
            get:
              description: Retrieve/Get a new client
              displayName: retrieveClient
              securedBy:
                      - SlasSecurityScheme.BearerToken: { scopes: [sfcc.customerlists.rw] }
              responses:
                400:
                  description: Bad Request.
                  body:
                    application/json:
                      example: {
                          "type": "ClientRequestException",
                          "title": "Unable to retrieve resource because the client id was invalid"
                        }
                401:
                  description: Unauthorized. Wrong Tenant.
                  body:
                    application/json:
                      example: {
                          "type": "ClientTenantException",
                          "title": "Unable to retrieve resource because the tenant id was invalid"
                        }
                404:
                  description: Not Found.
                  body:
                    application/json:
                      example: {
                          "type": "ClientNotFoundException",
                          "title": "Unable to retrieve resource because no resource was found with that value"
                        }
                200:
                  description: Success
                  body:
                    application/json:
                      type: Client
                      examples: 
                        Client: !include Examples/Client.raml
            put:
              description: Update/Change a new client
              displayName: updateClient
              securedBy:
                      - SlasSecurityScheme.BearerToken: { scopes: [sfcc.customerlists.rw] }
              body:
                application/json:
                  type: ClientRequest
                  examples:
                    ClientRequest: !include Examples/ClientRequest.raml
              responses:
                400:
                  description: Bad Request.
                  body:
                    application/json:
                      example: {
                          "type": "ClientRequestException",
                          "title": "Unable to update resource because the request body was invalid"
                        }
                401:
                  description: Unauthorized. Wrong Tenant.
                  body:
                    application/json:
                      example: {
                          "type": "ClientTenantException",
                          "title": "Unable to update resource because the tenant id was invalid"
                        }
                404:
                  description: Not Found.
                  body:
                    application/json:
                      example: {
                          "type": "ClientNotFoundException",
                          "title": "Unable to update resource because no resource was found with that value"
                        }
                200:
                  description: Success
                  body:
                    application/json:
                      type: Client
                      examples: 
                        Client: !include Examples/Client.raml
            delete:
              description: Delete a client
              displayName: deleteClient
              securedBy:
                      - SlasSecurityScheme.BearerToken: { scopes: [sfcc.customerlists.rw] }
              responses:
                400:
                  description: Bad Request.
                  body:
                    application/json:
                      example: {
                        "type": "ClientRequestException",
                        "title": "Unable to delete resource because the request was invalid"
                      }
                401:
                  description: Unauthorized. Wrong Tenant.
                  body:
                    application/json:
                      example: {
                          "type": "ClientTenantException",
                          "title": "Unable to delete resource because the tenant id was invalid"
                        }
                404:
                  description: Not Found.
                  body:
                    application/json:
                      example: {
                          "type": "ClientNotFoundException",
                          "title": "Unable to delete resource because no resource was found with that value"
                        }
                204:
                  description: No Content
        /idps:
          get:
              description: Retrieve/Get all tenant identity providers
              displayName: retrieveIdentityProviders
              securedBy:
                      - SlasSecurityScheme.BearerToken: { scopes: [sfcc.customerlists.rw] }
              responses:
                400:
                  description: Bad Request.
                  body:
                    application/json:
                      example: {
                          "type": "IdpRequestException",
                          "title": "Unable to retrieve resource because the tenant was deleted"
                        }
                401:
                  description: Unauthorized. Wrong Tenant.
                  body:
                    application/json:
                      example: {
                          "type": "IdpTenantException",
                          "title": "Unable to retrieve resource because the tenant id was invalid"
                        }
                404:
                  description: Not Found.
                  body:
                    application/json:
                      example: {
                          "type": "IdpNotFoundException",
                          "title": "Unable to retrieve resource, no resource was found with that value"
                        }
                200:
                  description: Success
                  body:
                    application/json:
                      type: IdentityProvider
                      examples: 
                        IdentityProvider : !include Examples/IdentityProvider.raml

        /idp:
          post:
            description: Register an identity provider
            displayName: registerIdentityProvider
            securedBy:
                    - SlasSecurityScheme.BearerToken: { scopes: [sfcc.customerlists.rw] }
            body:
              application/json:
                type: IdentityProvider
                examples:
                  IdentityProvider : !include Examples/IdentityProvider.raml
            responses:
              400:
                description: Bad Request.
                body:
                  application/json:
                    example: {
                        "type": "IdpRequestException",
                        "title": "Unable to create resource because the request was invalid"
                      }
              401:
                description: Unauthorized. Wrong Tenant.
                body:
                  application/json:
                    example: {
                        "type": "IdpTenantException",
                        "title": "Unable to create resource because the tenant id was invalid"
                      }
              409:
                description: Conflict - Duplicate
                body:
                  application/json:
                    example: {
                        "type": "IdpConflictException",
                        "title": "Unable to create resource because a duplicate resource was found"
                      }
              201:
                description: Success
                body:
                  application/json:
                    type: IdentityProvider
                    examples: 
                      IdentityProvider : !include Examples/IdentityProvider.raml
          /{idpId}:
            get:
              description: Retrieve/Get a specific identity provider
              displayName: retrieveIdentityProvider
              securedBy:
                    - SlasSecurityScheme.BearerToken: { scopes: [sfcc.customerlists.rw] }
              responses:
                400:
                  description: Bad Request.
                  body:
                    application/json:
                      example: {
                          "type": "IdpRequestException",
                          "title": "Unable to create resource because the request was invalid"
                        }
                401:
                  description: Unauthorized. Wrong Tenant.
                  body:
                    application/json:
                      example: {
                          "type": "IdpTenantException",
                          "title": "Unable to create resource because the tenant id was invalid"
                        }
                404:
                  description: Not Found.
                  body:
                    application/json:
                      example: {
                          "type": "IdpNotFoundException",
                          "title": "Unable to delete resource, no resource was found with that value"
                        }
                200:
                  description: Success
                  body:
                    application/json:
                      type: IdentityProvider
                      examples: 
                        IdentityProvider : !include Examples/IdentityProvider.raml
            put:
                description: Update/Change an identity provider
                displayName: updateIdentityProvider
                body:
                  application/json:
                    type: IdentityProvider
                    examples:
                      IdentityProvider: !include Examples/IdentityProvider.raml
                securedBy:
                        - SlasSecurityScheme.BearerToken: { scopes: [sfcc.customerlists.rw] }
                responses:
                  400:
                    description: Bad Request.
                    body:
                      application/json:
                        example: {
                            "type": "IdpRequestException",
                            "title": "Unable to update resource because the request body was invalid"
                          }
                  401:
                    description: Unauthorized. Wrong Tenant.
                    body:
                      application/json:
                        example: {
                            "type": "IdpTenantException",
                            "title": "Unable to update resource because the tenant id was invalid"
                          }
                  404:
                    description: Not Found.
                    body:
                      application/json:
                        example: {
                            "type": "IdpNotFoundException",
                            "title": "Unable to update resource because no resource was found with that value"
                          }
                  409:
                    description: Conflict - Duplicate
                    body:
                      application/json:
                        example: {
                            "type": "IdpConflictException",
                            "title": "Unable to create resource because a duplicate resource was found"
                          }
                  200:
                    description: Success
                    body:
                      application/json:
                        type: IdentityProvider
                        examples: 
                          IdentityProvider: !include Examples/IdentityProvider.raml
            delete:
              description: Delete a identity provider
              displayName: deleteIdentityProvider
              securedBy:
                      - SlasSecurityScheme.BearerToken: { scopes: [sfcc.customerlists.rw] }
              responses:
                400:
                  description: Bad Request.
                  body:
                    application/json:
                      example: {
                          "type": "IdpRequestException",
                          "title": "Unable to create resource because the request was invalid"
                        }
                401:
                  description: Unauthorized. Wrong Tenant.
                  body:
                    application/json:
                      example: {
                          "type": "IdpTenantException",
                          "title": "Unable to create resource because the tenant id was invalid"
                        }
                404:
                  description: Not Found.
                  body:
                    application/json:
                      example: {
                          "type": "IdpNotFoundException",
                          "title": "Unable to delete resource, no resource was found with that value"
                        }
                204:
                  description: No Content
        